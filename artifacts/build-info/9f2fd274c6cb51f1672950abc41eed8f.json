{
	"id": "9f2fd274c6cb51f1672950abc41eed8f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/src/YieldOptimizer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.23;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\nimport \"./interfaces/ITraderJoe.sol\";\nimport \"./interfaces/IBenqi.sol\";\nimport \"./interfaces/IYieldYak.sol\";\n\ncontract YieldOptimizer is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    struct UserProfile {\n        uint8 riskScore;          // 0-100 risk score\n        uint256 totalDeposited;   // Total AVAX deposited\n        uint256 lastRebalance;    // Timestamp of last rebalance\n        bool autoRebalance;       // Auto-rebalance enabled\n    }\n\n    struct ProtocolAllocation {\n        uint256 benqiAmount;      // Amount allocated to Benqi\n        uint256 traderJoeAmount;  // Amount allocated to TraderJoe\n        uint256 yieldYakAmount;   // Amount allocated to YieldYak\n    }\n\n    struct YieldData {\n        uint256 benqiAPY;         // Benqi current APY (basis points)\n        uint256 traderJoeAPY;     // TraderJoe current APY (basis points)\n        uint256 yieldYakAPY;      // YieldYak current APY (basis points)\n        uint256 lastUpdated;      // Timestamp of last yield update\n    }\n\n    // State variables\n    mapping(address => UserProfile) public userProfiles;\n    mapping(address => ProtocolAllocation) public userAllocations;\n    YieldData public currentYields;\n\n    // Protocol addresses (will be set in constructor or setter functions)\n    address public traderJoeRouter;\n    address public benqiComptroller;\n    address public yieldYakFarm;\n    \n    // Constants\n    uint256 public constant MIN_DEPOSIT = 0.01 ether;  // Minimum 0.01 AVAX\n    uint256 public constant REBALANCE_THRESHOLD = 500; // 5% threshold in basis points\n    uint256 public constant BASIS_POINTS = 10000;      // 100% = 10,000 basis points\n\n    // Events\n    event YieldOptimized(address indexed user, uint256 amount, uint8 riskScore);\n    event Rebalanced(address indexed user, uint256 totalValue);\n    event YieldsUpdated(uint256 benqiAPY, uint256 traderJoeAPY, uint256 yieldYakAPY);\n    event Withdrawn(address indexed user, uint256 amount);\n    event ProtocolAddressUpdated(string protocol, address newAddress);\n\n    constructor() Ownable(msg.sender) {\n        // Initialize with placeholder yields (will be updated by oracle/keeper)\n        currentYields = YieldData({\n            benqiAPY: 500,        // 5% APY\n            traderJoeAPY: 800,    // 8% APY  \n            yieldYakAPY: 1200,    // 12% APY\n            lastUpdated: block.timestamp\n        });\n    }\n\n    /**\n     * @dev Main function to optimize yield based on user's risk profile\n     * @param _riskScore Risk score from 0 (conservative) to 100 (aggressive)\n     */\n    function optimizeYield(uint8 _riskScore) external payable nonReentrant {\n        require(msg.value >= MIN_DEPOSIT, \"Deposit too small\");\n        require(_riskScore <= 100, \"Invalid risk score\");\n\n        UserProfile storage profile = userProfiles[msg.sender];\n        profile.riskScore = _riskScore;\n        profile.totalDeposited += msg.value;\n        profile.lastRebalance = block.timestamp;\n\n        // Calculate allocation based on risk score\n        _allocateFunds(msg.sender, msg.value, _riskScore);\n        \n        emit YieldOptimized(msg.sender, msg.value, _riskScore);\n    }\n\n    /**\n     * @dev Internal function to allocate funds based on risk score\n     * Conservative (0-33): 70% Benqi, 30% TraderJoe\n     * Balanced (34-66): 40% Benqi, 40% TraderJoe, 20% YieldYak  \n     * Aggressive (67-100): 20% Benqi, 30% TraderJoe, 50% YieldYak\n     */\n    function _allocateFunds(address user, uint256 amount, uint8 riskScore) internal {\n        ProtocolAllocation storage allocation = userAllocations[user];\n        \n        uint256 benqiAllocation;\n        uint256 traderJoeAllocation;\n        uint256 yieldYakAllocation;\n\n        if (riskScore <= 33) {\n            // Conservative allocation\n            benqiAllocation = (amount * 7000) / BASIS_POINTS;      // 70%\n            traderJoeAllocation = (amount * 3000) / BASIS_POINTS;  // 30%\n            yieldYakAllocation = 0;                                // 0%\n        } else if (riskScore <= 66) {\n            // Balanced allocation\n            benqiAllocation = (amount * 4000) / BASIS_POINTS;      // 40%\n            traderJoeAllocation = (amount * 4000) / BASIS_POINTS;  // 40%\n            yieldYakAllocation = (amount * 2000) / BASIS_POINTS;   // 20%\n        } else {\n            // Aggressive allocation\n            benqiAllocation = (amount * 2000) / BASIS_POINTS;      // 20%\n            traderJoeAllocation = (amount * 3000) / BASIS_POINTS;  // 30%\n            yieldYakAllocation = (amount * 5000) / BASIS_POINTS;   // 50%\n        }\n\n        // Update user's allocation tracking\n        allocation.benqiAmount += benqiAllocation;\n        allocation.traderJoeAmount += traderJoeAllocation;\n        allocation.yieldYakAmount += yieldYakAllocation;\n\n        // Execute the actual protocol interactions\n        if (benqiAllocation > 0) {\n            _depositToBenqi(benqiAllocation);\n        }\n        if (traderJoeAllocation > 0) {\n            _depositToTraderJoe(traderJoeAllocation);\n        }\n        if (yieldYakAllocation > 0) {\n            _depositToYieldYak(yieldYakAllocation);\n        }\n    }\n\n    /**\n     * @dev Get current yields from all protocols\n     */\n    function getCurrentYields() external view returns (\n        uint256 benqiAPY,\n        uint256 traderJoeAPY,\n        uint256 yieldYakAPY,\n        uint256 lastUpdated\n    ) {\n        return (\n            currentYields.benqiAPY,\n            currentYields.traderJoeAPY,\n            currentYields.yieldYakAPY,\n            currentYields.lastUpdated\n        );\n    }\n\n    /**\n     * @dev Get user's complete portfolio information\n     */\n    function getUserPortfolio(address user) external view returns (\n        UserProfile memory profile,\n        ProtocolAllocation memory allocation,\n        uint256 estimatedValue\n    ) {\n        profile = userProfiles[user];\n        allocation = userAllocations[user];\n        \n        // Calculate estimated current value (simplified calculation)\n        estimatedValue = allocation.benqiAmount + allocation.traderJoeAmount + allocation.yieldYakAmount;\n    }\n\n    /**\n     * @dev Calculate recommended rebalancing for a user\n     */\n    function getRebalanceRecommendation(address user) external view returns (\n        bool shouldRebalance,\n        uint256 newBenqiAllocation,\n        uint256 newTraderJoeAllocation,\n        uint256 newYieldYakAllocation\n    ) {\n        UserProfile memory profile = userProfiles[user];\n        ProtocolAllocation memory current = userAllocations[user];\n        \n        if (profile.totalDeposited == 0) {\n            return (false, 0, 0, 0);\n        }\n\n        // Calculate optimal allocation for current risk score\n        uint256 totalValue = current.benqiAmount + current.traderJoeAmount + current.yieldYakAmount;\n        \n        (newBenqiAllocation, newTraderJoeAllocation, newYieldYakAllocation) = \n            _calculateOptimalAllocation(totalValue, profile.riskScore);\n\n        // Check if rebalancing is needed (if current allocation deviates by more than threshold)\n        shouldRebalance = _shouldRebalance(current, newBenqiAllocation, newTraderJoeAllocation, newYieldYakAllocation, totalValue);\n    }\n\n    /**\n     * @dev Execute rebalancing for a user\n     */\n    function rebalance() external nonReentrant {\n        UserProfile storage profile = userProfiles[msg.sender];\n        require(profile.totalDeposited > 0, \"No deposits to rebalance\");\n\n        ProtocolAllocation storage allocation = userAllocations[msg.sender];\n        uint256 totalValue = allocation.benqiAmount + allocation.traderJoeAmount + allocation.yieldYakAmount;\n\n        (uint256 newBenqi, uint256 newTraderJoe, uint256 newYieldYak) = \n            _calculateOptimalAllocation(totalValue, profile.riskScore);\n\n        // Execute rebalancing logic (withdraw and redeposit)\n        _executeRebalance(msg.sender, allocation, newBenqi, newTraderJoe, newYieldYak);\n\n        profile.lastRebalance = block.timestamp;\n        emit Rebalanced(msg.sender, totalValue);\n    }\n\n    /**\n     * @dev Emergency withdrawal function\n     */\n    function emergencyWithdraw() external nonReentrant {\n        ProtocolAllocation storage allocation = userAllocations[msg.sender];\n        UserProfile storage profile = userProfiles[msg.sender];\n        \n        uint256 totalWithdrawn = 0;\n\n        // Withdraw from all protocols\n        if (allocation.benqiAmount > 0) {\n            totalWithdrawn += _withdrawFromBenqi(allocation.benqiAmount);\n            allocation.benqiAmount = 0;\n        }\n        if (allocation.traderJoeAmount > 0) {\n            totalWithdrawn += _withdrawFromTraderJoe(allocation.traderJoeAmount);\n            allocation.traderJoeAmount = 0;\n        }\n        if (allocation.yieldYakAmount > 0) {\n            totalWithdrawn += _withdrawFromYieldYak(allocation.yieldYakAmount);\n            allocation.yieldYakAmount = 0;\n        }\n\n        profile.totalDeposited = 0;\n\n        // Cap withdrawal at contract balance to prevent revert\n        uint256 contractBalance = address(this).balance;\n        uint256 toTransfer = totalWithdrawn > contractBalance ? contractBalance : totalWithdrawn;\n        \n        // Transfer withdrawn funds to user\n        if (toTransfer > 0) {\n            payable(msg.sender).transfer(toTransfer);\n            emit Withdrawn(msg.sender, toTransfer);\n        }\n    }\n\n    // Internal helper functions for protocol interactions\n    function _depositToBenqi(uint256 amount) internal {\n        // TODO: Implement Benqi deposit logic\n        // This would interact with Benqi's qiAVAX contract\n    }\n\n    function _depositToTraderJoe(uint256 amount) internal {\n        // TODO: Implement TraderJoe LP deposit logic\n        // This would add liquidity to AVAX/USDC pair\n    }\n\n    function _depositToYieldYak(uint256 amount) internal {\n        // TODO: Implement YieldYak farm deposit logic\n        // This would stake in YieldYak farming strategies\n    }\n\n    function _withdrawFromBenqi(uint256 amount) view  internal returns (uint256) {\n        // Mock implementation for hackathon demo\n        // In production, this would interact with Benqi's qiAVAX contract\n        // For demo purposes, we simulate withdrawal with potential yield gains\n        uint256 withdrawnAmount = (amount * (10000 + currentYields.benqiAPY / 365)) / 10000;\n        return withdrawnAmount;\n    }\n\n    function _withdrawFromTraderJoe(uint256 amount) view  internal returns (uint256) {\n        // Mock implementation for hackathon demo\n        // In production, this would interact with TraderJoe's LP contracts\n        // For demo purposes, we simulate withdrawal with potential yield gains\n        uint256 withdrawnAmount = (amount * (10000 + currentYields.traderJoeAPY / 365)) / 10000;\n        return withdrawnAmount;\n    }\n\n    function _withdrawFromYieldYak(uint256 amount) view  internal returns (uint256) {\n        // Mock implementation for hackathon demo\n        // In production, this would interact with YieldYak's strategy contracts\n        // For demo purposes, we simulate withdrawal with potential yield gains\n        uint256 withdrawnAmount = (amount * (10000 + currentYields.yieldYakAPY / 365)) / 10000;\n        return withdrawnAmount;\n    }\n\n    function _calculateOptimalAllocation(uint256 totalAmount, uint8 riskScore) \n        internal \n        pure \n        returns (uint256 benqi, uint256 traderJoe, uint256 yieldYak) \n    {\n        if (riskScore <= 33) {\n            benqi = (totalAmount * 7000) / BASIS_POINTS;\n            traderJoe = (totalAmount * 3000) / BASIS_POINTS;\n            yieldYak = 0;\n        } else if (riskScore <= 66) {\n            benqi = (totalAmount * 4000) / BASIS_POINTS;\n            traderJoe = (totalAmount * 4000) / BASIS_POINTS;\n            yieldYak = (totalAmount * 2000) / BASIS_POINTS;\n        } else {\n            benqi = (totalAmount * 2000) / BASIS_POINTS;\n            traderJoe = (totalAmount * 3000) / BASIS_POINTS;\n            yieldYak = (totalAmount * 5000) / BASIS_POINTS;\n        }\n    }\n\n    function _shouldRebalance(\n        ProtocolAllocation memory current,\n        uint256 targetBenqi,\n        uint256 targetTraderJoe,\n        uint256 targetYieldYak,\n        uint256 totalValue\n    ) internal pure returns (bool) {\n        uint256 benqiDiff = current.benqiAmount > targetBenqi ? \n            current.benqiAmount - targetBenqi : \n            targetBenqi - current.benqiAmount;\n        \n        uint256 threshold = (totalValue * REBALANCE_THRESHOLD) / BASIS_POINTS;\n        \n        return benqiDiff > threshold;\n    }\n\n    function _executeRebalance(\n        address user,\n        ProtocolAllocation storage current,\n        uint256 targetBenqi,\n        uint256 targetTraderJoe,\n        uint256 targetYieldYak\n    ) internal {\n        // Calculate differences between current and target allocations\n        int256 benqiDiff = int256(targetBenqi) - int256(current.benqiAmount);\n        int256 traderJoeDiff = int256(targetTraderJoe) - int256(current.traderJoeAmount);\n        int256 yieldYakDiff = int256(targetYieldYak) - int256(current.yieldYakAmount);\n        \n        uint256 totalWithdrawn = 0;\n        \n        // Step 1: Withdraw from over-allocated protocols\n        if (benqiDiff < 0) {\n            uint256 withdrawAmount = uint256(-benqiDiff);\n            totalWithdrawn += _withdrawFromBenqi(withdrawAmount);\n        }\n        if (traderJoeDiff < 0) {\n            uint256 withdrawAmount = uint256(-traderJoeDiff);\n            totalWithdrawn += _withdrawFromTraderJoe(withdrawAmount);\n        }\n        if (yieldYakDiff < 0) {\n            uint256 withdrawAmount = uint256(-yieldYakDiff);\n            totalWithdrawn += _withdrawFromYieldYak(withdrawAmount);\n        }\n        \n        // Step 2: Deposit to under-allocated protocols\n        if (benqiDiff > 0) {\n            _depositToBenqi(uint256(benqiDiff));\n        }\n        if (traderJoeDiff > 0) {\n            _depositToTraderJoe(uint256(traderJoeDiff));\n        }\n        if (yieldYakDiff > 0) {\n            _depositToYieldYak(uint256(yieldYakDiff));\n        }\n        \n        // Update allocations to reflect new state\n        current.benqiAmount = targetBenqi;\n        current.traderJoeAmount = targetTraderJoe;\n        current.yieldYakAmount = targetYieldYak;\n    }\n\n    // Owner functions\n    function updateProtocolAddress(string calldata protocol, address newAddress) external onlyOwner {\n        bytes32 protocolHash = keccak256(abi.encodePacked(protocol));\n        \n        if (protocolHash == keccak256(abi.encodePacked(\"traderjoe\"))) {\n            traderJoeRouter = newAddress;\n        } else if (protocolHash == keccak256(abi.encodePacked(\"benqi\"))) {\n            benqiComptroller = newAddress;\n        } else if (protocolHash == keccak256(abi.encodePacked(\"yieldyak\"))) {\n            yieldYakFarm = newAddress;\n        } else {\n            revert(\"Invalid protocol\");\n        }\n        \n        emit ProtocolAddressUpdated(protocol, newAddress);\n    }\n\n    function updateYields(uint256 _benqiAPY, uint256 _traderJoeAPY, uint256 _yieldYakAPY) external onlyOwner {\n        currentYields.benqiAPY = _benqiAPY;\n        currentYields.traderJoeAPY = _traderJoeAPY;\n        currentYields.yieldYakAPY = _yieldYakAPY;\n        currentYields.lastUpdated = block.timestamp;\n        \n        emit YieldsUpdated(_benqiAPY, _traderJoeAPY, _yieldYakAPY);\n    }\n}"
			},
			"contracts/src/interfaces/IYieldYak.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.23;\n\n/**\n * @title IYieldYak\n * @dev Interface for YieldYak yield farming protocol interactions\n * @notice This interface covers the main YieldYak functions needed for yield optimization\n */\ninterface IYieldYak {\n    /**\n     * @dev Deposit AVAX into a yield farming strategy\n     * @notice Payable function that accepts AVAX deposits\n     */\n    function deposit() external payable;\n\n    /**\n     * @dev Deposit a specific amount of tokens into the strategy\n     * @param amount Amount of tokens to deposit\n     */\n    function depositToken(uint256 amount) external;\n\n    /**\n     * @dev Withdraw tokens from the strategy\n     * @param amount Amount of shares to withdraw\n     */\n    function withdraw(uint256 amount) external;\n\n    /**\n     * @dev Withdraw all tokens from the strategy\n     */\n    function withdrawAll() external;\n\n    /**\n     * @dev Get the total supply of strategy shares\n     * @return supply Total share supply\n     */\n    function totalSupply() external view returns (uint256 supply);\n\n    /**\n     * @dev Get the balance of shares for an account\n     * @param account Account address\n     * @return balance Share balance\n     */\n    function balanceOf(address account) external view returns (uint256 balance);\n\n    /**\n     * @dev Get the total yield generated by the strategy\n     * @return yield Total yield in basis points (e.g., 1200 = 12%)\n     */\n    function totalYield() external view returns (uint256 yield);\n\n    /**\n     * @dev Get the current APY of the strategy\n     * @return apy Current APY in basis points\n     */\n    function getCurrentAPY() external view returns (uint256 apy);\n\n    /**\n     * @dev Get the price per full share\n     * @return price Price per share in underlying token units\n     */\n    function getPricePerFullShare() external view returns (uint256 price);\n\n    /**\n     * @dev Get the strategy's total deposited amount\n     * @return balance Total deposited balance in underlying tokens\n     */\n    function balance() external view returns (uint256 balance);\n\n    /**\n     * @dev Get available funds in the strategy (not invested)\n     * @return available Available balance\n     */\n    function available() external view returns (uint256 available);\n\n    /**\n     * @dev Harvest rewards and compound them\n     */\n    function harvest() external;\n\n    /**\n     * @dev Get the underlying token address\n     * @return token Underlying token address\n     */\n    function token() external view returns (address token);\n\n    /**\n     * @dev Get the strategy name\n     * @return name Strategy name\n     */\n    function name() external view returns (string memory name);\n\n    /**\n     * @dev Get the strategy symbol\n     * @return symbol Strategy symbol\n     */\n    function symbol() external view returns (string memory symbol);\n\n    /**\n     * @dev Get strategy decimals\n     * @return decimals Number of decimals\n     */\n    function decimals() external view returns (uint8 decimals);\n\n    /**\n     * @dev Transfer strategy shares\n     * @param to Recipient address\n     * @param amount Amount to transfer\n     * @return success Whether transfer was successful\n     */\n    function transfer(address to, uint256 amount) external returns (bool success);\n\n    /**\n     * @dev Approve share spending\n     * @param spender Address to approve\n     * @param amount Amount to approve\n     * @return success Whether approval was successful\n     */\n    function approve(address spender, uint256 amount) external returns (bool success);\n\n    /**\n     * @dev Get allowance for strategy shares\n     * @param owner Share owner address\n     * @param spender Spender address\n     * @return allowance Current allowance amount\n     */\n    function allowance(address owner, address spender) external view returns (uint256 allowance);\n}\n\n/**\n * @title IYieldYakRouter\n * @dev Interface for YieldYak Router contract\n */\ninterface IYieldYakRouter {\n    struct Strategy {\n        address strategyAddress;\n        string name;\n        address depositToken;\n        address rewardToken;\n        uint256 apy;\n        uint256 tvl;\n        bool active;\n    }\n\n    /**\n     * @dev Get all available strategies\n     * @return strategies Array of strategy information\n     */\n    function getAllStrategies() external view returns (Strategy[] memory strategies);\n\n    /**\n     * @dev Get strategies for a specific token\n     * @param token Token address to find strategies for\n     * @return strategies Array of strategy information for the token\n     */\n    function getStrategiesForToken(address token) external view returns (Strategy[] memory strategies);\n\n    /**\n     * @dev Get the best strategy for a token based on APY\n     * @param token Token address\n     * @return strategy Best strategy information\n     */\n    function getBestStrategy(address token) external view returns (Strategy memory strategy);\n\n    /**\n     * @dev Deposit into the best strategy for a token\n     * @param token Token address\n     * @param amount Amount to deposit\n     * @return strategyAddress Address of the strategy used\n     */\n    function depositToBestStrategy(address token, uint256 amount) external returns (address strategyAddress);\n\n    /**\n     * @dev Get estimated returns for a deposit\n     * @param strategyAddress Strategy to check\n     * @param amount Deposit amount\n     * @param timeHorizon Time horizon in seconds\n     * @return estimatedReturn Estimated return amount\n     */\n    function getEstimatedReturn(address strategyAddress, uint256 amount, uint256 timeHorizon)\n        external\n        view\n        returns (uint256 estimatedReturn);\n}\n\n/**\n * @title IYieldYakFarm\n * @dev Interface for YieldYak Farm contracts (specific farming strategies)\n */\ninterface IYieldYakFarm {\n    /**\n     * @dev Stake tokens in the farm\n     * @param amount Amount to stake\n     */\n    function stake(uint256 amount) external;\n\n    /**\n     * @dev Unstake tokens from the farm\n     * @param amount Amount to unstake\n     */\n    function unstake(uint256 amount) external;\n\n    /**\n     * @dev Claim pending rewards\n     */\n    function claimRewards() external;\n\n    /**\n     * @dev Get pending reward amount for an account\n     * @param account Account address\n     * @return rewards Pending reward amount\n     */\n    function pendingRewards(address account) external view returns (uint256 rewards);\n\n    /**\n     * @dev Get staked balance for an account\n     * @param account Account address\n     * @return balance Staked balance\n     */\n    function stakedBalance(address account) external view returns (uint256 balance);\n\n    /**\n     * @dev Get total staked amount in the farm\n     * @return totalStaked Total staked amount\n     */\n    function totalStaked() external view returns (uint256 totalStaked);\n\n    /**\n     * @dev Get reward rate per second\n     * @return rate Reward rate\n     */\n    function rewardRate() external view returns (uint256 rate);\n\n    /**\n     * @dev Get reward token address\n     * @return rewardToken Reward token address\n     */\n    function rewardToken() external view returns (address rewardToken);\n\n    /**\n     * @dev Get staking token address\n     * @return stakingToken Staking token address\n     */\n    function stakingToken() external view returns (address stakingToken);\n\n    /**\n     * @dev Emergency withdraw (forfeit rewards)\n     */\n    function emergencyWithdraw() external;\n\n    /**\n     * @dev Get farm information\n     * @return stakingToken Staking token address\n     * @return rewardToken Reward token address\n     * @return totalStaked Total staked amount\n     * @return rewardRate Current reward rate\n     * @return active Whether farm is active\n     */\n    function getFarmInfo()\n        external\n        view\n        returns (\n            address stakingToken,\n            address rewardToken,\n            uint256 totalStaked,\n            uint256 rewardRate,\n            bool active\n        );\n}"
			},
			"contracts/src/interfaces/IBenqi.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.23;\n\n/**\n * @title IBenqi\n * @dev Interface for Benqi lending protocol interactions\n * @notice This interface covers the main Benqi functions needed for yield optimization\n */\ninterface IBenqi {\n    /**\n     * @dev Supply AVAX to the protocol and receive qiAVAX tokens\n     * @notice Payable function that accepts AVAX deposits\n     */\n    function mint() external payable;\n\n    /**\n     * @dev Redeem qiAVAX tokens for underlying AVAX\n     * @param redeemTokens Amount of qiAVAX tokens to redeem\n     * @return success Whether the redemption was successful\n     */\n    function redeem(uint256 redeemTokens) external returns (uint256 success);\n\n    /**\n     * @dev Redeem qiAVAX tokens for a specific amount of underlying AVAX\n     * @param redeemAmount Amount of underlying AVAX to redeem\n     * @return success Whether the redemption was successful\n     */\n    function redeemUnderlying(uint256 redeemAmount) external returns (uint256 success);\n\n    /**\n     * @dev Get the current supply rate per timestamp\n     * @return rate The current supply APY in mantissa format\n     */\n    function supplyRatePerTimestamp() external view returns (uint256 rate);\n\n    /**\n     * @dev Get the current borrow rate per timestamp\n     * @return rate The current borrow APY in mantissa format\n     */\n    function borrowRatePerTimestamp() external view returns (uint256 rate);\n\n    /**\n     * @dev Get the exchange rate from qiAVAX to underlying AVAX\n     * @return rate The current exchange rate in mantissa format\n     */\n    function exchangeRateStored() external view returns (uint256 rate);\n\n    /**\n     * @dev Get the current exchange rate (may accrue interest)\n     * @return rate The current exchange rate in mantissa format\n     */\n    function exchangeRateCurrent() external returns (uint256 rate);\n\n    /**\n     * @dev Get account's current qiAVAX balance\n     * @param account The address to check\n     * @return balance The qiAVAX token balance\n     */\n    function balanceOf(address account) external view returns (uint256 balance);\n\n    /**\n     * @dev Get account's underlying AVAX balance\n     * @param account The address to check\n     * @return balance The underlying AVAX balance\n     */\n    function balanceOfUnderlying(address account) external returns (uint256 balance);\n\n    /**\n     * @dev Get the total supply of qiAVAX tokens\n     * @return supply Total qiAVAX token supply\n     */\n    function totalSupply() external view returns (uint256 supply);\n\n    /**\n     * @dev Get the total reserves\n     * @return reserves Total reserves amount\n     */\n    function totalReserves() external view returns (uint256 reserves);\n\n    /**\n     * @dev Get the total cash (available liquidity)\n     * @return cash Total available cash\n     */\n    function getCash() external view returns (uint256 cash);\n\n    /**\n     * @dev Accrue interest and update rates\n     * @return success Whether interest accrual was successful\n     */\n    function accrueInterest() external returns (uint256 success);\n\n    /**\n     * @dev Transfer qiAVAX tokens\n     * @param to Recipient address\n     * @param amount Amount to transfer\n     * @return success Whether transfer was successful\n     */\n    function transfer(address to, uint256 amount) external returns (bool success);\n\n    /**\n     * @dev Approve qiAVAX token spending\n     * @param spender Address to approve\n     * @param amount Amount to approve\n     * @return success Whether approval was successful\n     */\n    function approve(address spender, uint256 amount) external returns (bool success);\n\n    /**\n     * @dev Get allowance for qiAVAX tokens\n     * @param owner Token owner address\n     * @param spender Spender address\n     * @return allowance Current allowance amount\n     */\n    function allowance(address owner, address spender) external view returns (uint256 allowance);\n}\n\n/**\n * @title IBenqiComptroller\n * @dev Interface for Benqi Comptroller contract\n */\ninterface IBenqiComptroller {\n    /**\n     * @dev Enter markets to enable borrowing\n     * @param qiTokens Array of qiToken addresses to enter\n     * @return results Array of error codes (0 = success)\n     */\n    function enterMarkets(address[] calldata qiTokens) external returns (uint256[] memory results);\n\n    /**\n     * @dev Exit a market to disable borrowing\n     * @param qiToken The qiToken address to exit\n     * @return success Whether exit was successful (0 = success)\n     */\n    function exitMarket(address qiToken) external returns (uint256 success);\n\n    /**\n     * @dev Get account's liquidity information\n     * @param account Account address to check\n     * @return error Error code (0 = success)\n     * @return liquidity Account liquidity in USD\n     * @return shortfall Account shortfall in USD\n     */\n    function getAccountLiquidity(address account)\n        external\n        view\n        returns (uint256 error, uint256 liquidity, uint256 shortfall);\n\n    /**\n     * @dev Check if an address is a listed market\n     * @param qiToken The qiToken address to check\n     * @return isListed Whether the market is listed\n     * @return collateralFactorMantissa The collateral factor\n     */\n    function markets(address qiToken)\n        external\n        view\n        returns (bool isListed, uint256 collateralFactorMantissa);\n\n    /**\n     * @dev Get the current QI reward speeds\n     * @param qiToken The qiToken address\n     * @return supplySpeed QI supply reward speed\n     * @return borrowSpeed QI borrow reward speed\n     */\n    function rewardSpeeds(address qiToken)\n        external\n        view\n        returns (uint256 supplySpeed, uint256 borrowSpeed);\n\n    /**\n     * @dev Claim accrued QI rewards\n     * @param holder Address to claim rewards for\n     * @param qiTokens Array of qiTokens to claim from\n     */\n    function claimReward(address holder, address[] calldata qiTokens) external;\n\n    /**\n     * @dev Get accrued QI rewards for an account\n     * @param holder Address to check rewards for\n     * @return rewards Accrued reward amount\n     */\n    function rewardAccrued(address holder) external view returns (uint256 rewards);\n}\n\n/**\n * @title IBenqiLens\n * @dev Interface for Benqi Lens contract (for reading protocol data)\n */\ninterface IBenqiLens {\n    struct QiTokenMetadata {\n        address qiToken;\n        uint256 exchangeRateCurrent;\n        uint256 supplyRatePerTimestamp;\n        uint256 borrowRatePerTimestamp;\n        uint256 reserveFactorMantissa;\n        uint256 totalBorrows;\n        uint256 totalReserves;\n        uint256 totalSupply;\n        uint256 totalCash;\n        bool isListed;\n        uint256 collateralFactorMantissa;\n        address underlyingAssetAddress;\n        uint256 qiTokenDecimals;\n        uint256 underlyingDecimals;\n    }\n\n    /**\n     * @dev Get metadata for a qiToken\n     * @param qiToken The qiToken address\n     * @return metadata Complete metadata for the qiToken\n     */\n    function qiTokenMetadata(address qiToken) external returns (QiTokenMetadata memory metadata);\n\n    /**\n     * @dev Get metadata for all qiTokens\n     * @param qiTokens Array of qiToken addresses\n     * @return metadata Array of metadata for each qiToken\n     */\n    function qiTokenMetadataAll(address[] calldata qiTokens)\n        external\n        returns (QiTokenMetadata[] memory metadata);\n\n    /**\n     * @dev Get account snapshot for a qiToken\n     * @param qiToken The qiToken address\n     * @param account The account address\n     * @return error Error code\n     * @return balance qiToken balance\n     * @return borrowBalance Borrow balance\n     * @return exchangeRateMantissa Exchange rate\n     */\n    function getAccountSnapshot(address qiToken, address account)\n        external\n        view\n        returns (uint256 error, uint256 balance, uint256 borrowBalance, uint256 exchangeRateMantissa);\n}"
			},
			"contracts/src/interfaces/ITraderJoe.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.23;\n\n/**\n * @title ITraderJoe\n * @dev Interface for TraderJoe DEX interactions\n * @notice This interface covers the main TraderJoe router functions needed for our yield optimization\n */\ninterface ITraderJoe {\n    /**\n     * @dev Add liquidity to AVAX/Token pair\n     * @param token The ERC20 token to pair with AVAX\n     * @param amountTokenDesired Amount of tokens to add as liquidity\n     * @param amountTokenMin Minimum amount of tokens (slippage protection)\n     * @param amountAVAXMin Minimum amount of AVAX (slippage protection)\n     * @param to Address to receive LP tokens\n     * @param deadline Transaction deadline timestamp\n     * @return amountToken Actual amount of tokens added\n     * @return amountAVAX Actual amount of AVAX added\n     * @return liquidity Amount of LP tokens minted\n     */\n    function addLiquidityAVAX(\n        address token,\n        uint256 amountTokenDesired,\n        uint256 amountTokenMin,\n        uint256 amountAVAXMin,\n        address to,\n        uint256 deadline\n    ) external payable returns (uint256 amountToken, uint256 amountAVAX, uint256 liquidity);\n\n    /**\n     * @dev Remove liquidity from AVAX/Token pair\n     * @param token The ERC20 token paired with AVAX\n     * @param liquidity Amount of LP tokens to burn\n     * @param amountTokenMin Minimum amount of tokens to receive\n     * @param amountAVAXMin Minimum amount of AVAX to receive\n     * @param to Address to receive tokens and AVAX\n     * @param deadline Transaction deadline timestamp\n     * @return amountToken Amount of tokens received\n     * @return amountAVAX Amount of AVAX received\n     */\n    function removeLiquidityAVAX(\n        address token,\n        uint256 liquidity,\n        uint256 amountTokenMin,\n        uint256 amountAVAXMin,\n        address to,\n        uint256 deadline\n    ) external returns (uint256 amountToken, uint256 amountAVAX);\n\n    /**\n     * @dev Swap exact AVAX for tokens\n     * @param amountOutMin Minimum amount of tokens to receive\n     * @param path Array of token addresses representing the swap path\n     * @param to Address to receive tokens\n     * @param deadline Transaction deadline timestamp\n     * @return amounts Array of amounts for each step in the path\n     */\n    function swapExactAVAXForTokens(\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external payable returns (uint256[] memory amounts);\n\n    /**\n     * @dev Swap exact tokens for AVAX\n     * @param amountIn Amount of tokens to swap\n     * @param amountOutMin Minimum amount of AVAX to receive\n     * @param path Array of token addresses representing the swap path\n     * @param to Address to receive AVAX\n     * @param deadline Transaction deadline timestamp\n     * @return amounts Array of amounts for each step in the path\n     */\n    function swapExactTokensForAVAX(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory amounts);\n\n    /**\n     * @dev Get reserves for a trading pair\n     * @param tokenA First token in the pair\n     * @param tokenB Second token in the pair\n     * @return reserveA Reserve amount of tokenA\n     * @return reserveB Reserve amount of tokenB\n     */\n    function getReserves(address tokenA, address tokenB)\n        external\n        view\n        returns (uint256 reserveA, uint256 reserveB);\n\n    /**\n     * @dev Calculate optimal amounts for adding liquidity\n     * @param tokenA First token address\n     * @param tokenB Second token address\n     * @param amountADesired Desired amount of tokenA\n     * @param amountBDesired Desired amount of tokenB\n     * @param amountAMin Minimum amount of tokenA\n     * @param amountBMin Minimum amount of tokenB\n     * @return amountA Optimal amount of tokenA\n     * @return amountB Optimal amount of tokenB\n     */\n    function quote(\n        address tokenA,\n        address tokenB,\n        uint256 amountADesired,\n        uint256 amountBDesired,\n        uint256 amountAMin,\n        uint256 amountBMin\n    ) external view returns (uint256 amountA, uint256 amountB);\n\n    /**\n     * @dev Get current APY for a specific LP pair\n     * @param pair The LP pair address\n     * @return apy Current APY in basis points (e.g., 800 = 8%)\n     */\n    function getPoolAPY(address pair) external view returns (uint256 apy);\n\n    /**\n     * @dev Get the factory address\n     * @return factory The factory contract address\n     */\n    function factory() external pure returns (address factory);\n\n    /**\n     * @dev Get the WAVAX token address\n     * @return WAVAX The wrapped AVAX token address\n     */\n    function WAVAX() external pure returns (address WAVAX);\n}\n\n/**\n * @title ITraderJoeFactory\n * @dev Interface for TraderJoe Factory contract\n */\ninterface ITraderJoeFactory {\n    /**\n     * @dev Get pair address for two tokens\n     * @param tokenA First token address\n     * @param tokenB Second token address\n     * @return pair The pair contract address\n     */\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n\n    /**\n     * @dev Create a new trading pair\n     * @param tokenA First token address\n     * @param tokenB Second token address\n     * @return pair The new pair contract address\n     */\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n}\n\n/**\n * @title ITraderJoePair\n * @dev Interface for TraderJoe LP token contract\n */\ninterface ITraderJoePair {\n    /**\n     * @dev Get token reserves\n     * @return reserve0 Reserve of token0\n     * @return reserve1 Reserve of token1\n     * @return blockTimestampLast Timestamp of last update\n     */\n    function getReserves()\n        external\n        view\n        returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n\n    /**\n     * @dev Get token0 address\n     * @return token0 Address of first token in the pair\n     */\n    function token0() external view returns (address token0);\n\n    /**\n     * @dev Get token1 address\n     * @return token1 Address of second token in the pair\n     */\n    function token1() external view returns (address token1);\n\n    /**\n     * @dev Get total supply of LP tokens\n     * @return totalSupply Total LP token supply\n     */\n    function totalSupply() external view returns (uint256 totalSupply);\n\n    /**\n     * @dev Burn LP tokens and receive underlying tokens\n     * @param to Address to receive tokens\n     * @return amount0 Amount of token0 received\n     * @return amount1 Amount of token1 received\n     */\n    function burn(address to) external returns (uint256 amount0, uint256 amount1);\n\n    /**\n     * @dev Mint LP tokens by providing liquidity\n     * @param to Address to receive LP tokens\n     * @return liquidity Amount of LP tokens minted\n     */\n    function mint(address to) external returns (uint256 liquidity);\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122094ab7ab5ace13a423bdbbdd72017f3725012548cdc298813971bfe0f4f485db564736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122094ab7ab5ace13a423bdbbdd72017f3725012548cdc298813971bfe0f4f485db564736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xAB PUSH27 0xB5ACE13A423BDBBDD72017F3725012548CDC298813971BFE0F4F48 0x5D 0xB5 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122094ab7ab5ace13a423bdbbdd72017f3725012548cdc298813971bfe0f4f485db564736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xAB PUSH27 0xB5ACE13A423BDBBDD72017F3725012548CDC298813971BFE0F4F48 0x5D 0xB5 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122094ab7ab5ace13a423bdbbdd72017f3725012548cdc298813971bfe0f4f485db564736f6c63430008170033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/src/YieldOptimizer.sol",
								"contracts/src/interfaces/IBenqi.sol",
								"contracts/src/interfaces/ITraderJoe.sol",
								"contracts/src/interfaces/IYieldYak.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 820,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/src/YieldOptimizer.sol": {
				"YieldOptimizer": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "protocol",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ProtocolAddressUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalValue",
									"type": "uint256"
								}
							],
							"name": "Rebalanced",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "riskScore",
									"type": "uint8"
								}
							],
							"name": "YieldOptimized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "benqiAPY",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "traderJoeAPY",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "yieldYakAPY",
									"type": "uint256"
								}
							],
							"name": "YieldsUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BASIS_POINTS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MIN_DEPOSIT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "REBALANCE_THRESHOLD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "benqiComptroller",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentYields",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "benqiAPY",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "traderJoeAPY",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "yieldYakAPY",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastUpdated",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentYields",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "benqiAPY",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "traderJoeAPY",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "yieldYakAPY",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastUpdated",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getRebalanceRecommendation",
							"outputs": [
								{
									"internalType": "bool",
									"name": "shouldRebalance",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "newBenqiAllocation",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "newTraderJoeAllocation",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "newYieldYakAllocation",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserPortfolio",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "riskScore",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "totalDeposited",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lastRebalance",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "autoRebalance",
											"type": "bool"
										}
									],
									"internalType": "struct YieldOptimizer.UserProfile",
									"name": "profile",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "benqiAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "traderJoeAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "yieldYakAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct YieldOptimizer.ProtocolAllocation",
									"name": "allocation",
									"type": "tuple"
								},
								{
									"internalType": "uint256",
									"name": "estimatedValue",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "_riskScore",
									"type": "uint8"
								}
							],
							"name": "optimizeYield",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rebalance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "traderJoeRouter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "protocol",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "updateProtocolAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_benqiAPY",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_traderJoeAPY",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_yieldYakAPY",
									"type": "uint256"
								}
							],
							"name": "updateYields",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userAllocations",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "benqiAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "traderJoeAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "yieldYakAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userProfiles",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "riskScore",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "totalDeposited",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRebalance",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "autoRebalance",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "yieldYakFarm",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"emergencyWithdraw()": {
								"details": "Emergency withdrawal function"
							},
							"getCurrentYields()": {
								"details": "Get current yields from all protocols"
							},
							"getRebalanceRecommendation(address)": {
								"details": "Calculate recommended rebalancing for a user"
							},
							"getUserPortfolio(address)": {
								"details": "Get user's complete portfolio information"
							},
							"optimizeYield(uint8)": {
								"details": "Main function to optimize yield based on user's risk profile",
								"params": {
									"_riskScore": "Risk score from 0 (conservative) to 100 (aggressive)"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"rebalance()": {
								"details": "Execute rebalancing for a user"
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/src/YieldOptimizer.sol\":405:15630  contract YieldOptimizer is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/src/YieldOptimizer.sol\":2327:2673  constructor() Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/src/YieldOptimizer.sol\":2349:2359  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_6\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2068  _status */\n  dup1\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2082  _status = NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/src/YieldOptimizer.sol\":2468:2666  YieldData({... */\n  mload(0x40)\n  dup1\n  0x80\n  add\n  0x40\n  mstore\n  dup1\n    /* \"contracts/src/YieldOptimizer.sol\":2502:2505  500 */\n  0x01f4\n    /* \"contracts/src/YieldOptimizer.sol\":2468:2666  YieldData({... */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/src/YieldOptimizer.sol\":2550:2553  800 */\n  0x0320\n    /* \"contracts/src/YieldOptimizer.sol\":2468:2666  YieldData({... */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/src/YieldOptimizer.sol\":2595:2599  1200 */\n  0x04b0\n    /* \"contracts/src/YieldOptimizer.sol\":2468:2666  YieldData({... */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/src/YieldOptimizer.sol\":2640:2655  block.timestamp */\n  timestamp\n    /* \"contracts/src/YieldOptimizer.sol\":2468:2666  YieldData({... */\n  dup2\n  mstore\n  pop\n    /* \"contracts/src/YieldOptimizer.sol\":2452:2465  currentYields */\n  0x04\n    /* \"contracts/src/YieldOptimizer.sol\":2452:2666  currentYields = YieldData({... */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  0x60\n  dup3\n  add\n  mload\n  dup2\n  0x03\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"contracts/src/YieldOptimizer.sol\":405:15630  contract YieldOptimizer is Ownable, ReentrancyGuard {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_15:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_16:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_21\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_17:\n    /* \"#utility.yul\":328:352   */\n  tag_23\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_16\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_8:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_25\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/src/YieldOptimizer.sol\":405:15630  contract YieldOptimizer is Ownable, ReentrancyGuard {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/src/YieldOptimizer.sol\":405:15630  contract YieldOptimizer is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7d7c2a1c\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xd076e8b4\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xd076e8b4\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdb2e21bc\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe1e158a5\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe1f1c4a7\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      jump(tag_1)\n    tag_23:\n      dup1\n      0x7d7c2a1c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8ccbe9f5\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x99e32287\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc85b967d\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_22:\n      dup1\n      0x2faff427\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x2faff427\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x324be9ef\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x332d56d7\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4c0c87ff\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_24:\n      dup1\n      0x349f3a\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x071a8ef5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1edb27e9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x22a16952\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2ab8895f\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/src/YieldOptimizer.sol\":2846:3430  function optimizeYield(uint8 _riskScore) external payable nonReentrant {... */\n    tag_2:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      stop\n        /* \"contracts/src/YieldOptimizer.sol\":1647:1674  address public yieldYakFarm */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/src/YieldOptimizer.sol\":5919:6376  function getUserPortfolio(address user) external view returns (... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/src/YieldOptimizer.sol\":5484:5843  function getCurrentYields() external view returns (... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/src/YieldOptimizer.sol\":6455:7465  function getRebalanceRecommendation(address user) external view returns (... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_50\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/src/YieldOptimizer.sol\":1574:1604  address public traderJoeRouter */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/src/YieldOptimizer.sol\":1610:1641  address public benqiComptroller */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/src/YieldOptimizer.sol\":1338:1389  mapping(address => UserProfile) public userProfiles */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_64\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/src/YieldOptimizer.sol\":1395:1456  mapping(address => ProtocolAllocation) public userAllocations */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/src/YieldOptimizer.sol\":7530:8301  function rebalance() external nonReentrant {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      stop\n        /* \"contracts/src/YieldOptimizer.sol\":1462:1492  YieldData public currentYields */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/src/YieldOptimizer.sol\":15240:15628  function updateYields(uint256 _benqiAPY, uint256 _traderJoeAPY, uint256 _yieldYakAPY) external onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n    tag_87:\n      stop\n        /* \"contracts/src/YieldOptimizer.sol\":1778:1827  uint256 public constant REBALANCE_THRESHOLD = 500 */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/src/YieldOptimizer.sol\":14568:15234  function updateProtocolAddress(string calldata protocol, address newAddress) external onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      tag_100\n      jump\t// in\n    tag_97:\n      stop\n        /* \"contracts/src/YieldOptimizer.sol\":8365:9631  function emergencyWithdraw() external nonReentrant {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      stop\n        /* \"contracts/src/YieldOptimizer.sol\":1702:1750  uint256 public constant MIN_DEPOSIT = 0.01 ether */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/src/YieldOptimizer.sol\":1865:1909  uint256 public constant BASIS_POINTS = 10000 */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_111\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      stop\n        /* \"contracts/src/YieldOptimizer.sol\":2846:3430  function optimizeYield(uint8 _riskScore) external payable nonReentrant {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_117\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_118\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_117:\n        /* \"contracts/src/YieldOptimizer.sol\":1740:1750  0.01 ether */\n      0x2386f26fc10000\n        /* \"contracts/src/YieldOptimizer.sol\":2935:2944  msg.value */\n      callvalue\n        /* \"contracts/src/YieldOptimizer.sol\":2935:2959  msg.value >= MIN_DEPOSIT */\n      lt\n      iszero\n        /* \"contracts/src/YieldOptimizer.sol\":2927:2981  require(msg.value >= MIN_DEPOSIT, \"Deposit too small\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"contracts/src/YieldOptimizer.sol\":3013:3016  100 */\n      0x64\n        /* \"contracts/src/YieldOptimizer.sol\":2999:3009  _riskScore */\n      dup2\n        /* \"contracts/src/YieldOptimizer.sol\":2999:3016  _riskScore <= 100 */\n      0xff\n      and\n      gt\n      iszero\n        /* \"contracts/src/YieldOptimizer.sol\":2991:3039  require(_riskScore <= 100, \"Invalid risk score\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"contracts/src/YieldOptimizer.sol\":3050:3077  UserProfile storage profile */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":3080:3092  userProfiles */\n      0x02\n        /* \"contracts/src/YieldOptimizer.sol\":3080:3104  userProfiles[msg.sender] */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":3093:3103  msg.sender */\n      caller\n        /* \"contracts/src/YieldOptimizer.sol\":3080:3104  userProfiles[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/src/YieldOptimizer.sol\":3050:3104  UserProfile storage profile = userProfiles[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":3134:3144  _riskScore */\n      dup2\n        /* \"contracts/src/YieldOptimizer.sol\":3114:3121  profile */\n      dup2\n        /* \"contracts/src/YieldOptimizer.sol\":3114:3131  profile.riskScore */\n      0x00\n      add\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":3114:3144  profile.riskScore = _riskScore */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":3180:3189  msg.value */\n      callvalue\n        /* \"contracts/src/YieldOptimizer.sol\":3154:3161  profile */\n      dup2\n        /* \"contracts/src/YieldOptimizer.sol\":3154:3176  profile.totalDeposited */\n      0x01\n      add\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":3154:3189  profile.totalDeposited += msg.value */\n      dup3\n      dup3\n      sload\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":3223:3238  block.timestamp */\n      timestamp\n        /* \"contracts/src/YieldOptimizer.sol\":3199:3206  profile */\n      dup2\n        /* \"contracts/src/YieldOptimizer.sol\":3199:3220  profile.lastRebalance */\n      0x02\n      add\n        /* \"contracts/src/YieldOptimizer.sol\":3199:3238  profile.lastRebalance = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":3301:3350  _allocateFunds(msg.sender, msg.value, _riskScore) */\n      tag_128\n        /* \"contracts/src/YieldOptimizer.sol\":3316:3326  msg.sender */\n      caller\n        /* \"contracts/src/YieldOptimizer.sol\":3328:3337  msg.value */\n      callvalue\n        /* \"contracts/src/YieldOptimizer.sol\":3339:3349  _riskScore */\n      dup5\n        /* \"contracts/src/YieldOptimizer.sol\":3301:3315  _allocateFunds */\n      tag_129\n        /* \"contracts/src/YieldOptimizer.sol\":3301:3350  _allocateFunds(msg.sender, msg.value, _riskScore) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/src/YieldOptimizer.sol\":3389:3399  msg.sender */\n      caller\n        /* \"contracts/src/YieldOptimizer.sol\":3374:3423  YieldOptimized(msg.sender, msg.value, _riskScore) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0ffa6b713fe8ff42bd695a98451844fdf6abd6dd3999ab520f344f84aff7d2a0\n        /* \"contracts/src/YieldOptimizer.sol\":3401:3410  msg.value */\n      callvalue\n        /* \"contracts/src/YieldOptimizer.sol\":3412:3422  _riskScore */\n      dup5\n        /* \"contracts/src/YieldOptimizer.sol\":3374:3423  YieldOptimized(msg.sender, msg.value, _riskScore) */\n      mload(0x40)\n      tag_130\n      swap3\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/src/YieldOptimizer.sol\":2917:3430  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_132\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2560  _nonReentrantAfter */\n      tag_133\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      jump\t// in\n    tag_132:\n        /* \"contracts/src/YieldOptimizer.sol\":2846:3430  function optimizeYield(uint8 _riskScore) external payable nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/src/YieldOptimizer.sol\":1647:1674  address public yieldYakFarm */\n    tag_31:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/src/YieldOptimizer.sol\":5919:6376  function getUserPortfolio(address user) external view returns (... */\n    tag_38:\n        /* \"contracts/src/YieldOptimizer.sol\":5991:6017  UserProfile memory profile */\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"contracts/src/YieldOptimizer.sol\":6027:6063  ProtocolAllocation memory allocation */\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"contracts/src/YieldOptimizer.sol\":6073:6095  uint256 estimatedValue */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":6122:6134  userProfiles */\n      0x02\n        /* \"contracts/src/YieldOptimizer.sol\":6122:6140  userProfiles[user] */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":6135:6139  user */\n      dup6\n        /* \"contracts/src/YieldOptimizer.sol\":6122:6140  userProfiles[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/src/YieldOptimizer.sol\":6112:6140  profile = userProfiles[user] */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap3\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":6163:6178  userAllocations */\n      0x03\n        /* \"contracts/src/YieldOptimizer.sol\":6163:6184  userAllocations[user] */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":6179:6183  user */\n      dup6\n        /* \"contracts/src/YieldOptimizer.sol\":6163:6184  userAllocations[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/src/YieldOptimizer.sol\":6150:6184  allocation = userAllocations[user] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap2\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":6344:6354  allocation */\n      dup2\n        /* \"contracts/src/YieldOptimizer.sol\":6344:6369  allocation.yieldYakAmount */\n      0x40\n      add\n      mload\n        /* \"contracts/src/YieldOptimizer.sol\":6315:6325  allocation */\n      dup3\n        /* \"contracts/src/YieldOptimizer.sol\":6315:6341  allocation.traderJoeAmount */\n      0x20\n      add\n      mload\n        /* \"contracts/src/YieldOptimizer.sol\":6290:6300  allocation */\n      dup4\n        /* \"contracts/src/YieldOptimizer.sol\":6290:6312  allocation.benqiAmount */\n      0x00\n      add\n      mload\n        /* \"contracts/src/YieldOptimizer.sol\":6290:6341  allocation.benqiAmount + allocation.traderJoeAmount */\n      tag_139\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_139:\n        /* \"contracts/src/YieldOptimizer.sol\":6290:6369  allocation.benqiAmount + allocation.traderJoeAmount + allocation.yieldYakAmount */\n      tag_140\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_140:\n        /* \"contracts/src/YieldOptimizer.sol\":6273:6369  estimatedValue = allocation.benqiAmount + allocation.traderJoeAmount + allocation.yieldYakAmount */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":5919:6376  function getUserPortfolio(address user) external view returns (... */\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \"contracts/src/YieldOptimizer.sol\":5484:5843  function getCurrentYields() external view returns (... */\n    tag_43:\n        /* \"contracts/src/YieldOptimizer.sol\":5544:5560  uint256 benqiAPY */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":5570:5590  uint256 traderJoeAPY */\n      dup1\n        /* \"contracts/src/YieldOptimizer.sol\":5600:5619  uint256 yieldYakAPY */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":5629:5648  uint256 lastUpdated */\n      dup1\n        /* \"contracts/src/YieldOptimizer.sol\":5686:5699  currentYields */\n      0x04\n        /* \"contracts/src/YieldOptimizer.sol\":5686:5708  currentYields.benqiAPY */\n      0x00\n      add\n      sload\n        /* \"contracts/src/YieldOptimizer.sol\":5722:5735  currentYields */\n      0x04\n        /* \"contracts/src/YieldOptimizer.sol\":5722:5748  currentYields.traderJoeAPY */\n      0x01\n      add\n      sload\n        /* \"contracts/src/YieldOptimizer.sol\":5762:5775  currentYields */\n      0x04\n        /* \"contracts/src/YieldOptimizer.sol\":5762:5787  currentYields.yieldYakAPY */\n      0x02\n      add\n      sload\n        /* \"contracts/src/YieldOptimizer.sol\":5801:5814  currentYields */\n      0x04\n        /* \"contracts/src/YieldOptimizer.sol\":5801:5826  currentYields.lastUpdated */\n      0x03\n      add\n      sload\n        /* \"contracts/src/YieldOptimizer.sol\":5665:5836  return (... */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":5484:5843  function getCurrentYields() external view returns (... */\n      swap1\n      swap2\n      swap3\n      swap4\n      jump\t// out\n        /* \"contracts/src/YieldOptimizer.sol\":6455:7465  function getRebalanceRecommendation(address user) external view returns (... */\n    tag_49:\n        /* \"contracts/src/YieldOptimizer.sol\":6537:6557  bool shouldRebalance */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":6567:6593  uint256 newBenqiAllocation */\n      dup1\n        /* \"contracts/src/YieldOptimizer.sol\":6603:6633  uint256 newTraderJoeAllocation */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":6643:6672  uint256 newYieldYakAllocation */\n      dup1\n        /* \"contracts/src/YieldOptimizer.sol\":6689:6715  UserProfile memory profile */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":6718:6730  userProfiles */\n      0x02\n        /* \"contracts/src/YieldOptimizer.sol\":6718:6736  userProfiles[user] */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":6731:6735  user */\n      dup8\n        /* \"contracts/src/YieldOptimizer.sol\":6718:6736  userProfiles[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/src/YieldOptimizer.sol\":6689:6736  UserProfile memory profile = userProfiles[user] */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":6746:6779  ProtocolAllocation memory current */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":6782:6797  userAllocations */\n      0x03\n        /* \"contracts/src/YieldOptimizer.sol\":6782:6803  userAllocations[user] */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":6798:6802  user */\n      dup9\n        /* \"contracts/src/YieldOptimizer.sol\":6782:6803  userAllocations[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/src/YieldOptimizer.sol\":6746:6803  ProtocolAllocation memory current = userAllocations[user] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":6852:6853  0 */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":6826:6833  profile */\n      dup3\n        /* \"contracts/src/YieldOptimizer.sol\":6826:6848  profile.totalDeposited */\n      0x20\n      add\n      mload\n        /* \"contracts/src/YieldOptimizer.sol\":6826:6853  profile.totalDeposited == 0 */\n      sub\n        /* \"contracts/src/YieldOptimizer.sol\":6822:6903  if (profile.totalDeposited == 0) {... */\n      tag_143\n      jumpi\n        /* \"contracts/src/YieldOptimizer.sol\":6877:6882  false */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":6884:6885  0 */\n      dup1\n        /* \"contracts/src/YieldOptimizer.sol\":6887:6888  0 */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":6890:6891  0 */\n      dup1\n        /* \"contracts/src/YieldOptimizer.sol\":6869:6892  return (false, 0, 0, 0) */\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      pop\n      jump(tag_142)\n        /* \"contracts/src/YieldOptimizer.sol\":6822:6903  if (profile.totalDeposited == 0) {... */\n    tag_143:\n        /* \"contracts/src/YieldOptimizer.sol\":6976:6994  uint256 totalValue */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":7045:7052  current */\n      dup2\n        /* \"contracts/src/YieldOptimizer.sol\":7045:7067  current.yieldYakAmount */\n      0x40\n      add\n      mload\n        /* \"contracts/src/YieldOptimizer.sol\":7019:7026  current */\n      dup3\n        /* \"contracts/src/YieldOptimizer.sol\":7019:7042  current.traderJoeAmount */\n      0x20\n      add\n      mload\n        /* \"contracts/src/YieldOptimizer.sol\":6997:7004  current */\n      dup4\n        /* \"contracts/src/YieldOptimizer.sol\":6997:7016  current.benqiAmount */\n      0x00\n      add\n      mload\n        /* \"contracts/src/YieldOptimizer.sol\":6997:7042  current.benqiAmount + current.traderJoeAmount */\n      tag_144\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_144:\n        /* \"contracts/src/YieldOptimizer.sol\":6997:7067  current.benqiAmount + current.traderJoeAmount + current.yieldYakAmount */\n      tag_145\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_145:\n        /* \"contracts/src/YieldOptimizer.sol\":6976:7067  uint256 totalValue = current.benqiAmount + current.traderJoeAmount + current.yieldYakAmount */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":7169:7227  _calculateOptimalAllocation(totalValue, profile.riskScore) */\n      tag_146\n        /* \"contracts/src/YieldOptimizer.sol\":7197:7207  totalValue */\n      dup2\n        /* \"contracts/src/YieldOptimizer.sol\":7209:7216  profile */\n      dup5\n        /* \"contracts/src/YieldOptimizer.sol\":7209:7226  profile.riskScore */\n      0x00\n      add\n      mload\n        /* \"contracts/src/YieldOptimizer.sol\":7169:7196  _calculateOptimalAllocation */\n      tag_147\n        /* \"contracts/src/YieldOptimizer.sol\":7169:7227  _calculateOptimalAllocation(totalValue, profile.riskScore) */\n      jump\t// in\n    tag_146:\n        /* \"contracts/src/YieldOptimizer.sol\":7086:7227  (newBenqiAllocation, newTraderJoeAllocation, newYieldYakAllocation) = ... */\n      dup1\n      swap7\n      pop\n      dup2\n      swap8\n      pop\n      dup3\n      swap9\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":7354:7458  _shouldRebalance(current, newBenqiAllocation, newTraderJoeAllocation, newYieldYakAllocation, totalValue) */\n      tag_148\n        /* \"contracts/src/YieldOptimizer.sol\":7371:7378  current */\n      dup3\n        /* \"contracts/src/YieldOptimizer.sol\":7380:7398  newBenqiAllocation */\n      dup8\n        /* \"contracts/src/YieldOptimizer.sol\":7400:7422  newTraderJoeAllocation */\n      dup8\n        /* \"contracts/src/YieldOptimizer.sol\":7424:7445  newYieldYakAllocation */\n      dup8\n        /* \"contracts/src/YieldOptimizer.sol\":7447:7457  totalValue */\n      dup6\n        /* \"contracts/src/YieldOptimizer.sol\":7354:7370  _shouldRebalance */\n      tag_149\n        /* \"contracts/src/YieldOptimizer.sol\":7354:7458  _shouldRebalance(current, newBenqiAllocation, newTraderJoeAllocation, newYieldYakAllocation, totalValue) */\n      jump\t// in\n    tag_148:\n        /* \"contracts/src/YieldOptimizer.sol\":7336:7458  shouldRebalance = _shouldRebalance(current, newBenqiAllocation, newTraderJoeAllocation, newYieldYakAllocation, totalValue) */\n      swap7\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":6679:7465  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":6455:7465  function getRebalanceRecommendation(address user) external view returns (... */\n    tag_142:\n      swap2\n      swap4\n      pop\n      swap2\n      swap4\n      jump\t// out\n        /* \"contracts/src/YieldOptimizer.sol\":1574:1604  address public traderJoeRouter */\n    tag_54:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/src/YieldOptimizer.sol\":1610:1641  address public benqiComptroller */\n    tag_58:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/src/YieldOptimizer.sol\":1338:1389  mapping(address => UserProfile) public userProfiles */\n    tag_63:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"contracts/src/YieldOptimizer.sol\":1395:1456  mapping(address => ProtocolAllocation) public userAllocations */\n    tag_69:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/src/YieldOptimizer.sol\":7530:8301  function rebalance() external nonReentrant {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_157\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_118\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_157:\n        /* \"contracts/src/YieldOptimizer.sol\":7583:7610  UserProfile storage profile */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":7613:7625  userProfiles */\n      0x02\n        /* \"contracts/src/YieldOptimizer.sol\":7613:7637  userProfiles[msg.sender] */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":7626:7636  msg.sender */\n      caller\n        /* \"contracts/src/YieldOptimizer.sol\":7613:7637  userProfiles[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/src/YieldOptimizer.sol\":7583:7637  UserProfile storage profile = userProfiles[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":7680:7681  0 */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":7655:7662  profile */\n      dup2\n        /* \"contracts/src/YieldOptimizer.sol\":7655:7677  profile.totalDeposited */\n      0x01\n      add\n      sload\n        /* \"contracts/src/YieldOptimizer.sol\":7655:7681  profile.totalDeposited > 0 */\n      gt\n        /* \"contracts/src/YieldOptimizer.sol\":7647:7710  require(profile.totalDeposited > 0, \"No deposits to rebalance\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"contracts/src/YieldOptimizer.sol\":7721:7758  ProtocolAllocation storage allocation */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":7761:7776  userAllocations */\n      0x03\n        /* \"contracts/src/YieldOptimizer.sol\":7761:7788  userAllocations[msg.sender] */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":7777:7787  msg.sender */\n      caller\n        /* \"contracts/src/YieldOptimizer.sol\":7761:7788  userAllocations[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/src/YieldOptimizer.sol\":7721:7788  ProtocolAllocation storage allocation = userAllocations[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":7798:7816  uint256 totalValue */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":7873:7883  allocation */\n      dup2\n        /* \"contracts/src/YieldOptimizer.sol\":7873:7898  allocation.yieldYakAmount */\n      0x02\n      add\n      sload\n        /* \"contracts/src/YieldOptimizer.sol\":7844:7854  allocation */\n      dup3\n        /* \"contracts/src/YieldOptimizer.sol\":7844:7870  allocation.traderJoeAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/src/YieldOptimizer.sol\":7819:7829  allocation */\n      dup4\n        /* \"contracts/src/YieldOptimizer.sol\":7819:7841  allocation.benqiAmount */\n      0x00\n      add\n      sload\n        /* \"contracts/src/YieldOptimizer.sol\":7819:7870  allocation.benqiAmount + allocation.traderJoeAmount */\n      tag_162\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_162:\n        /* \"contracts/src/YieldOptimizer.sol\":7819:7898  allocation.benqiAmount + allocation.traderJoeAmount + allocation.yieldYakAmount */\n      tag_163\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_163:\n        /* \"contracts/src/YieldOptimizer.sol\":7798:7898  uint256 totalValue = allocation.benqiAmount + allocation.traderJoeAmount + allocation.yieldYakAmount */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":7910:7926  uint256 newBenqi */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":7928:7948  uint256 newTraderJoe */\n      dup1\n        /* \"contracts/src/YieldOptimizer.sol\":7950:7969  uint256 newYieldYak */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":7986:8044  _calculateOptimalAllocation(totalValue, profile.riskScore) */\n      tag_164\n        /* \"contracts/src/YieldOptimizer.sol\":8014:8024  totalValue */\n      dup5\n        /* \"contracts/src/YieldOptimizer.sol\":8026:8033  profile */\n      dup8\n        /* \"contracts/src/YieldOptimizer.sol\":8026:8043  profile.riskScore */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/src/YieldOptimizer.sol\":7986:8013  _calculateOptimalAllocation */\n      tag_147\n        /* \"contracts/src/YieldOptimizer.sol\":7986:8044  _calculateOptimalAllocation(totalValue, profile.riskScore) */\n      jump\t// in\n    tag_164:\n        /* \"contracts/src/YieldOptimizer.sol\":7909:8044  (uint256 newBenqi, uint256 newTraderJoe, uint256 newYieldYak) = ... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":8117:8195  _executeRebalance(msg.sender, allocation, newBenqi, newTraderJoe, newYieldYak) */\n      tag_165\n        /* \"contracts/src/YieldOptimizer.sol\":8135:8145  msg.sender */\n      caller\n        /* \"contracts/src/YieldOptimizer.sol\":8147:8157  allocation */\n      dup7\n        /* \"contracts/src/YieldOptimizer.sol\":8159:8167  newBenqi */\n      dup6\n        /* \"contracts/src/YieldOptimizer.sol\":8169:8181  newTraderJoe */\n      dup6\n        /* \"contracts/src/YieldOptimizer.sol\":8183:8194  newYieldYak */\n      dup6\n        /* \"contracts/src/YieldOptimizer.sol\":8117:8134  _executeRebalance */\n      tag_166\n        /* \"contracts/src/YieldOptimizer.sol\":8117:8195  _executeRebalance(msg.sender, allocation, newBenqi, newTraderJoe, newYieldYak) */\n      jump\t// in\n    tag_165:\n        /* \"contracts/src/YieldOptimizer.sol\":8230:8245  block.timestamp */\n      timestamp\n        /* \"contracts/src/YieldOptimizer.sol\":8206:8213  profile */\n      dup7\n        /* \"contracts/src/YieldOptimizer.sol\":8206:8227  profile.lastRebalance */\n      0x02\n      add\n        /* \"contracts/src/YieldOptimizer.sol\":8206:8245  profile.lastRebalance = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":8271:8281  msg.sender */\n      caller\n        /* \"contracts/src/YieldOptimizer.sol\":8260:8294  Rebalanced(msg.sender, totalValue) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1427d1942829759938581ce754fd0f7f116bfb7a4b77f80f0cb32cd62c2138c7\n        /* \"contracts/src/YieldOptimizer.sol\":8283:8293  totalValue */\n      dup6\n        /* \"contracts/src/YieldOptimizer.sol\":8260:8294  Rebalanced(msg.sender, totalValue) */\n      mload(0x40)\n      tag_167\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/src/YieldOptimizer.sol\":7573:8301  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_168\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2560  _nonReentrantAfter */\n      tag_133\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      jump\t// in\n    tag_168:\n        /* \"contracts/src/YieldOptimizer.sol\":7530:8301  function rebalance() external nonReentrant {... */\n      jump\t// out\n        /* \"contracts/src/YieldOptimizer.sol\":1462:1492  YieldData public currentYields */\n    tag_80:\n      0x04\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/src/YieldOptimizer.sol\":15240:15628  function updateYields(uint256 _benqiAPY, uint256 _traderJoeAPY, uint256 _yieldYakAPY) external onlyOwner {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_171:\n        /* \"contracts/src/YieldOptimizer.sol\":15380:15389  _benqiAPY */\n      dup3\n        /* \"contracts/src/YieldOptimizer.sol\":15355:15368  currentYields */\n      0x04\n        /* \"contracts/src/YieldOptimizer.sol\":15355:15377  currentYields.benqiAPY */\n      0x00\n      add\n        /* \"contracts/src/YieldOptimizer.sol\":15355:15389  currentYields.benqiAPY = _benqiAPY */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":15428:15441  _traderJoeAPY */\n      dup2\n        /* \"contracts/src/YieldOptimizer.sol\":15399:15412  currentYields */\n      0x04\n        /* \"contracts/src/YieldOptimizer.sol\":15399:15425  currentYields.traderJoeAPY */\n      0x01\n      add\n        /* \"contracts/src/YieldOptimizer.sol\":15399:15441  currentYields.traderJoeAPY = _traderJoeAPY */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":15479:15491  _yieldYakAPY */\n      dup1\n        /* \"contracts/src/YieldOptimizer.sol\":15451:15464  currentYields */\n      0x04\n        /* \"contracts/src/YieldOptimizer.sol\":15451:15476  currentYields.yieldYakAPY */\n      0x02\n      add\n        /* \"contracts/src/YieldOptimizer.sol\":15451:15491  currentYields.yieldYakAPY = _yieldYakAPY */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":15529:15544  block.timestamp */\n      timestamp\n        /* \"contracts/src/YieldOptimizer.sol\":15501:15514  currentYields */\n      0x04\n        /* \"contracts/src/YieldOptimizer.sol\":15501:15526  currentYields.lastUpdated */\n      0x03\n      add\n        /* \"contracts/src/YieldOptimizer.sol\":15501:15544  currentYields.lastUpdated = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":15568:15621  YieldsUpdated(_benqiAPY, _traderJoeAPY, _yieldYakAPY) */\n      0xeb5e818d5254a980eae621ccdcf791eb702d2f526caf4d0833b622e27964d549\n        /* \"contracts/src/YieldOptimizer.sol\":15582:15591  _benqiAPY */\n      dup4\n        /* \"contracts/src/YieldOptimizer.sol\":15593:15606  _traderJoeAPY */\n      dup4\n        /* \"contracts/src/YieldOptimizer.sol\":15608:15620  _yieldYakAPY */\n      dup4\n        /* \"contracts/src/YieldOptimizer.sol\":15568:15621  YieldsUpdated(_benqiAPY, _traderJoeAPY, _yieldYakAPY) */\n      mload(0x40)\n      tag_173\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/src/YieldOptimizer.sol\":15240:15628  function updateYields(uint256 _benqiAPY, uint256 _traderJoeAPY, uint256 _yieldYakAPY) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/src/YieldOptimizer.sol\":1778:1827  uint256 public constant REBALANCE_THRESHOLD = 500 */\n    tag_93:\n        /* \"contracts/src/YieldOptimizer.sol\":1824:1827  500 */\n      0x01f4\n        /* \"contracts/src/YieldOptimizer.sol\":1778:1827  uint256 public constant REBALANCE_THRESHOLD = 500 */\n      dup2\n      jump\t// out\n        /* \"contracts/src/YieldOptimizer.sol\":14568:15234  function updateProtocolAddress(string calldata protocol, address newAddress) external onlyOwner {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_175:\n        /* \"contracts/src/YieldOptimizer.sol\":14674:14694  bytes32 protocolHash */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":14724:14732  protocol */\n      dup4\n      dup4\n        /* \"contracts/src/YieldOptimizer.sol\":14707:14733  abi.encodePacked(protocol) */\n      add(0x20, mload(0x40))\n      tag_177\n      swap3\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/src/YieldOptimizer.sol\":14697:14734  keccak256(abi.encodePacked(protocol)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/src/YieldOptimizer.sol\":14674:14734  bytes32 protocolHash = keccak256(abi.encodePacked(protocol)) */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":14783:14812  abi.encodePacked(\"traderjoe\") */\n      add(0x20, mload(0x40))\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/src/YieldOptimizer.sol\":14773:14813  keccak256(abi.encodePacked(\"traderjoe\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/src/YieldOptimizer.sol\":14757:14769  protocolHash */\n      dup2\n        /* \"contracts/src/YieldOptimizer.sol\":14757:14813  protocolHash == keccak256(abi.encodePacked(\"traderjoe\")) */\n      sub\n        /* \"contracts/src/YieldOptimizer.sol\":14753:15160  if (protocolHash == keccak256(abi.encodePacked(\"traderjoe\"))) {... */\n      tag_181\n      jumpi\n        /* \"contracts/src/YieldOptimizer.sol\":14847:14857  newAddress */\n      dup2\n        /* \"contracts/src/YieldOptimizer.sol\":14829:14844  traderJoeRouter */\n      0x08\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":14829:14857  traderJoeRouter = newAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":14753:15160  if (protocolHash == keccak256(abi.encodePacked(\"traderjoe\"))) {... */\n      jump(tag_182)\n    tag_181:\n        /* \"contracts/src/YieldOptimizer.sol\":14904:14929  abi.encodePacked(\"benqi\") */\n      add(0x20, mload(0x40))\n      tag_183\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/src/YieldOptimizer.sol\":14894:14930  keccak256(abi.encodePacked(\"benqi\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/src/YieldOptimizer.sol\":14878:14890  protocolHash */\n      dup2\n        /* \"contracts/src/YieldOptimizer.sol\":14878:14930  protocolHash == keccak256(abi.encodePacked(\"benqi\")) */\n      sub\n        /* \"contracts/src/YieldOptimizer.sol\":14874:15160  if (protocolHash == keccak256(abi.encodePacked(\"benqi\"))) {... */\n      tag_185\n      jumpi\n        /* \"contracts/src/YieldOptimizer.sol\":14965:14975  newAddress */\n      dup2\n        /* \"contracts/src/YieldOptimizer.sol\":14946:14962  benqiComptroller */\n      0x09\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":14946:14975  benqiComptroller = newAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":14874:15160  if (protocolHash == keccak256(abi.encodePacked(\"benqi\"))) {... */\n      jump(tag_186)\n    tag_185:\n        /* \"contracts/src/YieldOptimizer.sol\":15022:15050  abi.encodePacked(\"yieldyak\") */\n      add(0x20, mload(0x40))\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/src/YieldOptimizer.sol\":15012:15051  keccak256(abi.encodePacked(\"yieldyak\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/src/YieldOptimizer.sol\":14996:15008  protocolHash */\n      dup2\n        /* \"contracts/src/YieldOptimizer.sol\":14996:15051  protocolHash == keccak256(abi.encodePacked(\"yieldyak\")) */\n      sub\n        /* \"contracts/src/YieldOptimizer.sol\":14992:15160  if (protocolHash == keccak256(abi.encodePacked(\"yieldyak\"))) {... */\n      tag_189\n      jumpi\n        /* \"contracts/src/YieldOptimizer.sol\":15082:15092  newAddress */\n      dup2\n        /* \"contracts/src/YieldOptimizer.sol\":15067:15079  yieldYakFarm */\n      0x0a\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":15067:15092  yieldYakFarm = newAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":14992:15160  if (protocolHash == keccak256(abi.encodePacked(\"yieldyak\"))) {... */\n      jump(tag_190)\n    tag_189:\n        /* \"contracts/src/YieldOptimizer.sol\":15123:15149  revert(\"Invalid protocol\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/src/YieldOptimizer.sol\":14992:15160  if (protocolHash == keccak256(abi.encodePacked(\"yieldyak\"))) {... */\n    tag_190:\n        /* \"contracts/src/YieldOptimizer.sol\":14874:15160  if (protocolHash == keccak256(abi.encodePacked(\"benqi\"))) {... */\n    tag_186:\n        /* \"contracts/src/YieldOptimizer.sol\":14753:15160  if (protocolHash == keccak256(abi.encodePacked(\"traderjoe\"))) {... */\n    tag_182:\n        /* \"contracts/src/YieldOptimizer.sol\":15183:15227  ProtocolAddressUpdated(protocol, newAddress) */\n      0x50df56c33b3bd3dac7a2db51a3f7c8bdaabf78a57ff1fab3a72992006a77e69e\n        /* \"contracts/src/YieldOptimizer.sol\":15206:15214  protocol */\n      dup5\n      dup5\n        /* \"contracts/src/YieldOptimizer.sol\":15216:15226  newAddress */\n      dup5\n        /* \"contracts/src/YieldOptimizer.sol\":15183:15227  ProtocolAddressUpdated(protocol, newAddress) */\n      mload(0x40)\n      tag_193\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/src/YieldOptimizer.sol\":14664:15234  {... */\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":14568:15234  function updateProtocolAddress(string calldata protocol, address newAddress) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/src/YieldOptimizer.sol\":8365:9631  function emergencyWithdraw() external nonReentrant {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_196\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_118\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_196:\n        /* \"contracts/src/YieldOptimizer.sol\":8426:8463  ProtocolAllocation storage allocation */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":8466:8481  userAllocations */\n      0x03\n        /* \"contracts/src/YieldOptimizer.sol\":8466:8493  userAllocations[msg.sender] */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":8482:8492  msg.sender */\n      caller\n        /* \"contracts/src/YieldOptimizer.sol\":8466:8493  userAllocations[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/src/YieldOptimizer.sol\":8426:8493  ProtocolAllocation storage allocation = userAllocations[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":8503:8530  UserProfile storage profile */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":8533:8545  userProfiles */\n      0x02\n        /* \"contracts/src/YieldOptimizer.sol\":8533:8557  userProfiles[msg.sender] */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":8546:8556  msg.sender */\n      caller\n        /* \"contracts/src/YieldOptimizer.sol\":8533:8557  userProfiles[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/src/YieldOptimizer.sol\":8503:8557  UserProfile storage profile = userProfiles[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":8576:8598  uint256 totalWithdrawn */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":8681:8682  0 */\n      dup1\n        /* \"contracts/src/YieldOptimizer.sol\":8656:8666  allocation */\n      dup4\n        /* \"contracts/src/YieldOptimizer.sol\":8656:8678  allocation.benqiAmount */\n      0x00\n      add\n      sload\n        /* \"contracts/src/YieldOptimizer.sol\":8656:8682  allocation.benqiAmount > 0 */\n      gt\n        /* \"contracts/src/YieldOptimizer.sol\":8652:8809  if (allocation.benqiAmount > 0) {... */\n      iszero\n      tag_198\n      jumpi\n        /* \"contracts/src/YieldOptimizer.sol\":8716:8758  _withdrawFromBenqi(allocation.benqiAmount) */\n      tag_199\n        /* \"contracts/src/YieldOptimizer.sol\":8735:8745  allocation */\n      dup4\n        /* \"contracts/src/YieldOptimizer.sol\":8735:8757  allocation.benqiAmount */\n      0x00\n      add\n      sload\n        /* \"contracts/src/YieldOptimizer.sol\":8716:8734  _withdrawFromBenqi */\n      tag_200\n        /* \"contracts/src/YieldOptimizer.sol\":8716:8758  _withdrawFromBenqi(allocation.benqiAmount) */\n      jump\t// in\n    tag_199:\n        /* \"contracts/src/YieldOptimizer.sol\":8698:8758  totalWithdrawn += _withdrawFromBenqi(allocation.benqiAmount) */\n      dup2\n      tag_201\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_201:\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":8797:8798  0 */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":8772:8782  allocation */\n      dup4\n        /* \"contracts/src/YieldOptimizer.sol\":8772:8794  allocation.benqiAmount */\n      0x00\n      add\n        /* \"contracts/src/YieldOptimizer.sol\":8772:8798  allocation.benqiAmount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":8652:8809  if (allocation.benqiAmount > 0) {... */\n    tag_198:\n        /* \"contracts/src/YieldOptimizer.sol\":8851:8852  0 */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":8822:8832  allocation */\n      dup4\n        /* \"contracts/src/YieldOptimizer.sol\":8822:8848  allocation.traderJoeAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/src/YieldOptimizer.sol\":8822:8852  allocation.traderJoeAmount > 0 */\n      gt\n        /* \"contracts/src/YieldOptimizer.sol\":8818:8991  if (allocation.traderJoeAmount > 0) {... */\n      iszero\n      tag_202\n      jumpi\n        /* \"contracts/src/YieldOptimizer.sol\":8886:8936  _withdrawFromTraderJoe(allocation.traderJoeAmount) */\n      tag_203\n        /* \"contracts/src/YieldOptimizer.sol\":8909:8919  allocation */\n      dup4\n        /* \"contracts/src/YieldOptimizer.sol\":8909:8935  allocation.traderJoeAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/src/YieldOptimizer.sol\":8886:8908  _withdrawFromTraderJoe */\n      tag_204\n        /* \"contracts/src/YieldOptimizer.sol\":8886:8936  _withdrawFromTraderJoe(allocation.traderJoeAmount) */\n      jump\t// in\n    tag_203:\n        /* \"contracts/src/YieldOptimizer.sol\":8868:8936  totalWithdrawn += _withdrawFromTraderJoe(allocation.traderJoeAmount) */\n      dup2\n      tag_205\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_205:\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":8979:8980  0 */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":8950:8960  allocation */\n      dup4\n        /* \"contracts/src/YieldOptimizer.sol\":8950:8976  allocation.traderJoeAmount */\n      0x01\n      add\n        /* \"contracts/src/YieldOptimizer.sol\":8950:8980  allocation.traderJoeAmount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":8818:8991  if (allocation.traderJoeAmount > 0) {... */\n    tag_202:\n        /* \"contracts/src/YieldOptimizer.sol\":9032:9033  0 */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":9004:9014  allocation */\n      dup4\n        /* \"contracts/src/YieldOptimizer.sol\":9004:9029  allocation.yieldYakAmount */\n      0x02\n      add\n      sload\n        /* \"contracts/src/YieldOptimizer.sol\":9004:9033  allocation.yieldYakAmount > 0 */\n      gt\n        /* \"contracts/src/YieldOptimizer.sol\":9000:9169  if (allocation.yieldYakAmount > 0) {... */\n      iszero\n      tag_206\n      jumpi\n        /* \"contracts/src/YieldOptimizer.sol\":9067:9115  _withdrawFromYieldYak(allocation.yieldYakAmount) */\n      tag_207\n        /* \"contracts/src/YieldOptimizer.sol\":9089:9099  allocation */\n      dup4\n        /* \"contracts/src/YieldOptimizer.sol\":9089:9114  allocation.yieldYakAmount */\n      0x02\n      add\n      sload\n        /* \"contracts/src/YieldOptimizer.sol\":9067:9088  _withdrawFromYieldYak */\n      tag_208\n        /* \"contracts/src/YieldOptimizer.sol\":9067:9115  _withdrawFromYieldYak(allocation.yieldYakAmount) */\n      jump\t// in\n    tag_207:\n        /* \"contracts/src/YieldOptimizer.sol\":9049:9115  totalWithdrawn += _withdrawFromYieldYak(allocation.yieldYakAmount) */\n      dup2\n      tag_209\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_209:\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":9157:9158  0 */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":9129:9139  allocation */\n      dup4\n        /* \"contracts/src/YieldOptimizer.sol\":9129:9154  allocation.yieldYakAmount */\n      0x02\n      add\n        /* \"contracts/src/YieldOptimizer.sol\":9129:9158  allocation.yieldYakAmount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":9000:9169  if (allocation.yieldYakAmount > 0) {... */\n    tag_206:\n        /* \"contracts/src/YieldOptimizer.sol\":9204:9205  0 */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":9179:9186  profile */\n      dup3\n        /* \"contracts/src/YieldOptimizer.sol\":9179:9201  profile.totalDeposited */\n      0x01\n      add\n        /* \"contracts/src/YieldOptimizer.sol\":9179:9205  profile.totalDeposited = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":9280:9303  uint256 contractBalance */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":9306:9327  address(this).balance */\n      selfbalance\n        /* \"contracts/src/YieldOptimizer.sol\":9280:9327  uint256 contractBalance = address(this).balance */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":9337:9355  uint256 toTransfer */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":9375:9390  contractBalance */\n      dup2\n        /* \"contracts/src/YieldOptimizer.sol\":9358:9372  totalWithdrawn */\n      dup4\n        /* \"contracts/src/YieldOptimizer.sol\":9358:9390  totalWithdrawn > contractBalance */\n      gt\n        /* \"contracts/src/YieldOptimizer.sol\":9358:9425  totalWithdrawn > contractBalance ? contractBalance : totalWithdrawn */\n      tag_210\n      jumpi\n        /* \"contracts/src/YieldOptimizer.sol\":9411:9425  totalWithdrawn */\n      dup3\n        /* \"contracts/src/YieldOptimizer.sol\":9358:9425  totalWithdrawn > contractBalance ? contractBalance : totalWithdrawn */\n      jump(tag_211)\n    tag_210:\n        /* \"contracts/src/YieldOptimizer.sol\":9393:9408  contractBalance */\n      dup2\n        /* \"contracts/src/YieldOptimizer.sol\":9358:9425  totalWithdrawn > contractBalance ? contractBalance : totalWithdrawn */\n    tag_211:\n        /* \"contracts/src/YieldOptimizer.sol\":9337:9425  uint256 toTransfer = totalWithdrawn > contractBalance ? contractBalance : totalWithdrawn */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":9505:9506  0 */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":9492:9502  toTransfer */\n      dup2\n        /* \"contracts/src/YieldOptimizer.sol\":9492:9506  toTransfer > 0 */\n      gt\n        /* \"contracts/src/YieldOptimizer.sol\":9488:9625  if (toTransfer > 0) {... */\n      iszero\n      tag_212\n      jumpi\n        /* \"contracts/src/YieldOptimizer.sol\":9530:9540  msg.sender */\n      caller\n        /* \"contracts/src/YieldOptimizer.sol\":9522:9550  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/src/YieldOptimizer.sol\":9522:9562  payable(msg.sender).transfer(toTransfer) */\n      0x08fc\n        /* \"contracts/src/YieldOptimizer.sol\":9551:9561  toTransfer */\n      dup3\n        /* \"contracts/src/YieldOptimizer.sol\":9522:9562  payable(msg.sender).transfer(toTransfer) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_214\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_214:\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":9591:9601  msg.sender */\n      caller\n        /* \"contracts/src/YieldOptimizer.sol\":9581:9614  Withdrawn(msg.sender, toTransfer) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n        /* \"contracts/src/YieldOptimizer.sol\":9603:9613  toTransfer */\n      dup3\n        /* \"contracts/src/YieldOptimizer.sol\":9581:9614  Withdrawn(msg.sender, toTransfer) */\n      mload(0x40)\n      tag_215\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/src/YieldOptimizer.sol\":9488:9625  if (toTransfer > 0) {... */\n    tag_212:\n        /* \"contracts/src/YieldOptimizer.sol\":8416:9631  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_216\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2560  _nonReentrantAfter */\n      tag_133\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      jump\t// in\n    tag_216:\n        /* \"contracts/src/YieldOptimizer.sol\":8365:9631  function emergencyWithdraw() external nonReentrant {... */\n      jump\t// out\n        /* \"contracts/src/YieldOptimizer.sol\":1702:1750  uint256 public constant MIN_DEPOSIT = 0.01 ether */\n    tag_106:\n        /* \"contracts/src/YieldOptimizer.sol\":1740:1750  0.01 ether */\n      0x2386f26fc10000\n        /* \"contracts/src/YieldOptimizer.sol\":1702:1750  uint256 public constant MIN_DEPOSIT = 0.01 ether */\n      dup2\n      jump\t// out\n        /* \"contracts/src/YieldOptimizer.sol\":1865:1909  uint256 public constant BASIS_POINTS = 10000 */\n    tag_110:\n        /* \"contracts/src/YieldOptimizer.sol\":1904:1909  10000 */\n      0x2710\n        /* \"contracts/src/YieldOptimizer.sol\":1865:1909  uint256 public constant BASIS_POINTS = 10000 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_222\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2709  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2720  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n      tag_224\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2743:2773  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      0x3ee5aeb500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n    tag_224:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2865  _status */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2875  _status = ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"contracts/src/YieldOptimizer.sol\":3706:5412  function _allocateFunds(address user, uint256 amount, uint8 riskScore) internal {... */\n    tag_129:\n        /* \"contracts/src/YieldOptimizer.sol\":3796:3833  ProtocolAllocation storage allocation */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":3836:3851  userAllocations */\n      0x03\n        /* \"contracts/src/YieldOptimizer.sol\":3836:3857  userAllocations[user] */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":3852:3856  user */\n      dup6\n        /* \"contracts/src/YieldOptimizer.sol\":3836:3857  userAllocations[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/src/YieldOptimizer.sol\":3796:3857  ProtocolAllocation storage allocation = userAllocations[user] */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":3876:3899  uint256 benqiAllocation */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":3909:3936  uint256 traderJoeAllocation */\n      dup1\n        /* \"contracts/src/YieldOptimizer.sol\":3946:3972  uint256 yieldYakAllocation */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":4000:4002  33 */\n      0x21\n        /* \"contracts/src/YieldOptimizer.sol\":3987:3996  riskScore */\n      dup6\n        /* \"contracts/src/YieldOptimizer.sol\":3987:4002  riskScore <= 33 */\n      0xff\n      and\n      gt\n        /* \"contracts/src/YieldOptimizer.sol\":3983:4846  if (riskScore <= 33) {... */\n      tag_226\n      jumpi\n        /* \"contracts/src/YieldOptimizer.sol\":1904:1909  10000 */\n      0x2710\n        /* \"contracts/src/YieldOptimizer.sol\":4085:4089  7000 */\n      0x1b58\n        /* \"contracts/src/YieldOptimizer.sol\":4076:4082  amount */\n      dup8\n        /* \"contracts/src/YieldOptimizer.sol\":4076:4089  amount * 7000 */\n      tag_227\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"contracts/src/YieldOptimizer.sol\":4075:4105  (amount * 7000) / BASIS_POINTS */\n      tag_229\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"contracts/src/YieldOptimizer.sol\":4057:4105  benqiAllocation = (amount * 7000) / BASIS_POINTS */\n      swap3\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":1904:1909  10000 */\n      0x2710\n        /* \"contracts/src/YieldOptimizer.sol\":4163:4167  3000 */\n      0x0bb8\n        /* \"contracts/src/YieldOptimizer.sol\":4154:4160  amount */\n      dup8\n        /* \"contracts/src/YieldOptimizer.sol\":4154:4167  amount * 3000 */\n      tag_231\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_231:\n        /* \"contracts/src/YieldOptimizer.sol\":4153:4183  (amount * 3000) / BASIS_POINTS */\n      tag_232\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_232:\n        /* \"contracts/src/YieldOptimizer.sol\":4131:4183  traderJoeAllocation = (amount * 3000) / BASIS_POINTS */\n      swap2\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":4226:4227  0 */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":4205:4227  yieldYakAllocation = 0 */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":3983:4846  if (riskScore <= 33) {... */\n      jump(tag_233)\n    tag_226:\n        /* \"contracts/src/YieldOptimizer.sol\":4298:4300  66 */\n      0x42\n        /* \"contracts/src/YieldOptimizer.sol\":4285:4294  riskScore */\n      dup6\n        /* \"contracts/src/YieldOptimizer.sol\":4285:4300  riskScore <= 66 */\n      0xff\n      and\n      gt\n        /* \"contracts/src/YieldOptimizer.sol\":4281:4846  if (riskScore <= 66) {... */\n      tag_234\n      jumpi\n        /* \"contracts/src/YieldOptimizer.sol\":1904:1909  10000 */\n      0x2710\n        /* \"contracts/src/YieldOptimizer.sol\":4379:4383  4000 */\n      0x0fa0\n        /* \"contracts/src/YieldOptimizer.sol\":4370:4376  amount */\n      dup8\n        /* \"contracts/src/YieldOptimizer.sol\":4370:4383  amount * 4000 */\n      tag_235\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_235:\n        /* \"contracts/src/YieldOptimizer.sol\":4369:4399  (amount * 4000) / BASIS_POINTS */\n      tag_236\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_236:\n        /* \"contracts/src/YieldOptimizer.sol\":4351:4399  benqiAllocation = (amount * 4000) / BASIS_POINTS */\n      swap3\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":1904:1909  10000 */\n      0x2710\n        /* \"contracts/src/YieldOptimizer.sol\":4457:4461  4000 */\n      0x0fa0\n        /* \"contracts/src/YieldOptimizer.sol\":4448:4454  amount */\n      dup8\n        /* \"contracts/src/YieldOptimizer.sol\":4448:4461  amount * 4000 */\n      tag_237\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_237:\n        /* \"contracts/src/YieldOptimizer.sol\":4447:4477  (amount * 4000) / BASIS_POINTS */\n      tag_238\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_238:\n        /* \"contracts/src/YieldOptimizer.sol\":4425:4477  traderJoeAllocation = (amount * 4000) / BASIS_POINTS */\n      swap2\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":1904:1909  10000 */\n      0x2710\n        /* \"contracts/src/YieldOptimizer.sol\":4530:4534  2000 */\n      0x07d0\n        /* \"contracts/src/YieldOptimizer.sol\":4521:4527  amount */\n      dup8\n        /* \"contracts/src/YieldOptimizer.sol\":4521:4534  amount * 2000 */\n      tag_239\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_239:\n        /* \"contracts/src/YieldOptimizer.sol\":4520:4550  (amount * 2000) / BASIS_POINTS */\n      tag_240\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_240:\n        /* \"contracts/src/YieldOptimizer.sol\":4499:4550  yieldYakAllocation = (amount * 2000) / BASIS_POINTS */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":4281:4846  if (riskScore <= 66) {... */\n      jump(tag_241)\n    tag_234:\n        /* \"contracts/src/YieldOptimizer.sol\":1904:1909  10000 */\n      0x2710\n        /* \"contracts/src/YieldOptimizer.sol\":4655:4659  2000 */\n      0x07d0\n        /* \"contracts/src/YieldOptimizer.sol\":4646:4652  amount */\n      dup8\n        /* \"contracts/src/YieldOptimizer.sol\":4646:4659  amount * 2000 */\n      tag_242\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_242:\n        /* \"contracts/src/YieldOptimizer.sol\":4645:4675  (amount * 2000) / BASIS_POINTS */\n      tag_243\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_243:\n        /* \"contracts/src/YieldOptimizer.sol\":4627:4675  benqiAllocation = (amount * 2000) / BASIS_POINTS */\n      swap3\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":1904:1909  10000 */\n      0x2710\n        /* \"contracts/src/YieldOptimizer.sol\":4733:4737  3000 */\n      0x0bb8\n        /* \"contracts/src/YieldOptimizer.sol\":4724:4730  amount */\n      dup8\n        /* \"contracts/src/YieldOptimizer.sol\":4724:4737  amount * 3000 */\n      tag_244\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_244:\n        /* \"contracts/src/YieldOptimizer.sol\":4723:4753  (amount * 3000) / BASIS_POINTS */\n      tag_245\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_245:\n        /* \"contracts/src/YieldOptimizer.sol\":4701:4753  traderJoeAllocation = (amount * 3000) / BASIS_POINTS */\n      swap2\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":1904:1909  10000 */\n      0x2710\n        /* \"contracts/src/YieldOptimizer.sol\":4806:4810  5000 */\n      0x1388\n        /* \"contracts/src/YieldOptimizer.sol\":4797:4803  amount */\n      dup8\n        /* \"contracts/src/YieldOptimizer.sol\":4797:4810  amount * 5000 */\n      tag_246\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_246:\n        /* \"contracts/src/YieldOptimizer.sol\":4796:4826  (amount * 5000) / BASIS_POINTS */\n      tag_247\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_247:\n        /* \"contracts/src/YieldOptimizer.sol\":4775:4826  yieldYakAllocation = (amount * 5000) / BASIS_POINTS */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":4281:4846  if (riskScore <= 66) {... */\n    tag_241:\n        /* \"contracts/src/YieldOptimizer.sol\":3983:4846  if (riskScore <= 33) {... */\n    tag_233:\n        /* \"contracts/src/YieldOptimizer.sol\":4927:4942  benqiAllocation */\n      dup3\n        /* \"contracts/src/YieldOptimizer.sol\":4901:4911  allocation */\n      dup5\n        /* \"contracts/src/YieldOptimizer.sol\":4901:4923  allocation.benqiAmount */\n      0x00\n      add\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":4901:4942  allocation.benqiAmount += benqiAllocation */\n      dup3\n      dup3\n      sload\n      tag_248\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_248:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":4982:5001  traderJoeAllocation */\n      dup2\n        /* \"contracts/src/YieldOptimizer.sol\":4952:4962  allocation */\n      dup5\n        /* \"contracts/src/YieldOptimizer.sol\":4952:4978  allocation.traderJoeAmount */\n      0x01\n      add\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":4952:5001  allocation.traderJoeAmount += traderJoeAllocation */\n      dup3\n      dup3\n      sload\n      tag_249\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_249:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":5040:5058  yieldYakAllocation */\n      dup1\n        /* \"contracts/src/YieldOptimizer.sol\":5011:5021  allocation */\n      dup5\n        /* \"contracts/src/YieldOptimizer.sol\":5011:5036  allocation.yieldYakAmount */\n      0x02\n      add\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":5011:5058  allocation.yieldYakAmount += yieldYakAllocation */\n      dup3\n      dup3\n      sload\n      tag_250\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_250:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":5143:5144  0 */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":5125:5140  benqiAllocation */\n      dup4\n        /* \"contracts/src/YieldOptimizer.sol\":5125:5144  benqiAllocation > 0 */\n      gt\n        /* \"contracts/src/YieldOptimizer.sol\":5121:5203  if (benqiAllocation > 0) {... */\n      iszero\n      tag_251\n      jumpi\n        /* \"contracts/src/YieldOptimizer.sol\":5160:5192  _depositToBenqi(benqiAllocation) */\n      tag_252\n        /* \"contracts/src/YieldOptimizer.sol\":5176:5191  benqiAllocation */\n      dup4\n        /* \"contracts/src/YieldOptimizer.sol\":5160:5175  _depositToBenqi */\n      tag_253\n        /* \"contracts/src/YieldOptimizer.sol\":5160:5192  _depositToBenqi(benqiAllocation) */\n      jump\t// in\n    tag_252:\n        /* \"contracts/src/YieldOptimizer.sol\":5121:5203  if (benqiAllocation > 0) {... */\n    tag_251:\n        /* \"contracts/src/YieldOptimizer.sol\":5238:5239  0 */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":5216:5235  traderJoeAllocation */\n      dup3\n        /* \"contracts/src/YieldOptimizer.sol\":5216:5239  traderJoeAllocation > 0 */\n      gt\n        /* \"contracts/src/YieldOptimizer.sol\":5212:5306  if (traderJoeAllocation > 0) {... */\n      iszero\n      tag_254\n      jumpi\n        /* \"contracts/src/YieldOptimizer.sol\":5255:5295  _depositToTraderJoe(traderJoeAllocation) */\n      tag_255\n        /* \"contracts/src/YieldOptimizer.sol\":5275:5294  traderJoeAllocation */\n      dup3\n        /* \"contracts/src/YieldOptimizer.sol\":5255:5274  _depositToTraderJoe */\n      tag_256\n        /* \"contracts/src/YieldOptimizer.sol\":5255:5295  _depositToTraderJoe(traderJoeAllocation) */\n      jump\t// in\n    tag_255:\n        /* \"contracts/src/YieldOptimizer.sol\":5212:5306  if (traderJoeAllocation > 0) {... */\n    tag_254:\n        /* \"contracts/src/YieldOptimizer.sol\":5340:5341  0 */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":5319:5337  yieldYakAllocation */\n      dup2\n        /* \"contracts/src/YieldOptimizer.sol\":5319:5341  yieldYakAllocation > 0 */\n      gt\n        /* \"contracts/src/YieldOptimizer.sol\":5315:5406  if (yieldYakAllocation > 0) {... */\n      iszero\n      tag_257\n      jumpi\n        /* \"contracts/src/YieldOptimizer.sol\":5357:5395  _depositToYieldYak(yieldYakAllocation) */\n      tag_258\n        /* \"contracts/src/YieldOptimizer.sol\":5376:5394  yieldYakAllocation */\n      dup2\n        /* \"contracts/src/YieldOptimizer.sol\":5357:5375  _depositToYieldYak */\n      tag_259\n        /* \"contracts/src/YieldOptimizer.sol\":5357:5395  _depositToYieldYak(yieldYakAllocation) */\n      jump\t// in\n    tag_258:\n        /* \"contracts/src/YieldOptimizer.sol\":5315:5406  if (yieldYakAllocation > 0) {... */\n    tag_257:\n        /* \"contracts/src/YieldOptimizer.sol\":3786:5412  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":3706:5412  function _allocateFunds(address user, uint256 amount, uint8 riskScore) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3075  _status */\n      dup1\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"contracts/src/YieldOptimizer.sol\":11502:12287  function _calculateOptimalAllocation(uint256 totalAmount, uint8 riskScore) ... */\n    tag_147:\n        /* \"contracts/src/YieldOptimizer.sol\":11627:11640  uint256 benqi */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":11642:11659  uint256 traderJoe */\n      dup1\n        /* \"contracts/src/YieldOptimizer.sol\":11661:11677  uint256 yieldYak */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":11711:11713  33 */\n      0x21\n        /* \"contracts/src/YieldOptimizer.sol\":11698:11707  riskScore */\n      dup5\n        /* \"contracts/src/YieldOptimizer.sol\":11698:11713  riskScore <= 33 */\n      0xff\n      and\n      gt\n        /* \"contracts/src/YieldOptimizer.sol\":11694:12281  if (riskScore <= 33) {... */\n      tag_262\n      jumpi\n        /* \"contracts/src/YieldOptimizer.sol\":1904:1909  10000 */\n      0x2710\n        /* \"contracts/src/YieldOptimizer.sol\":11752:11756  7000 */\n      0x1b58\n        /* \"contracts/src/YieldOptimizer.sol\":11738:11749  totalAmount */\n      dup7\n        /* \"contracts/src/YieldOptimizer.sol\":11738:11756  totalAmount * 7000 */\n      tag_263\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_263:\n        /* \"contracts/src/YieldOptimizer.sol\":11737:11772  (totalAmount * 7000) / BASIS_POINTS */\n      tag_264\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_264:\n        /* \"contracts/src/YieldOptimizer.sol\":11729:11772  benqi = (totalAmount * 7000) / BASIS_POINTS */\n      swap3\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":1904:1909  10000 */\n      0x2710\n        /* \"contracts/src/YieldOptimizer.sol\":11813:11817  3000 */\n      0x0bb8\n        /* \"contracts/src/YieldOptimizer.sol\":11799:11810  totalAmount */\n      dup7\n        /* \"contracts/src/YieldOptimizer.sol\":11799:11817  totalAmount * 3000 */\n      tag_265\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_265:\n        /* \"contracts/src/YieldOptimizer.sol\":11798:11833  (totalAmount * 3000) / BASIS_POINTS */\n      tag_266\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_266:\n        /* \"contracts/src/YieldOptimizer.sol\":11786:11833  traderJoe = (totalAmount * 3000) / BASIS_POINTS */\n      swap2\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":11858:11859  0 */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":11847:11859  yieldYak = 0 */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":11694:12281  if (riskScore <= 33) {... */\n      jump(tag_267)\n    tag_262:\n        /* \"contracts/src/YieldOptimizer.sol\":11893:11895  66 */\n      0x42\n        /* \"contracts/src/YieldOptimizer.sol\":11880:11889  riskScore */\n      dup5\n        /* \"contracts/src/YieldOptimizer.sol\":11880:11895  riskScore <= 66 */\n      0xff\n      and\n      gt\n        /* \"contracts/src/YieldOptimizer.sol\":11876:12281  if (riskScore <= 66) {... */\n      tag_268\n      jumpi\n        /* \"contracts/src/YieldOptimizer.sol\":1904:1909  10000 */\n      0x2710\n        /* \"contracts/src/YieldOptimizer.sol\":11934:11938  4000 */\n      0x0fa0\n        /* \"contracts/src/YieldOptimizer.sol\":11920:11931  totalAmount */\n      dup7\n        /* \"contracts/src/YieldOptimizer.sol\":11920:11938  totalAmount * 4000 */\n      tag_269\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_269:\n        /* \"contracts/src/YieldOptimizer.sol\":11919:11954  (totalAmount * 4000) / BASIS_POINTS */\n      tag_270\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_270:\n        /* \"contracts/src/YieldOptimizer.sol\":11911:11954  benqi = (totalAmount * 4000) / BASIS_POINTS */\n      swap3\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":1904:1909  10000 */\n      0x2710\n        /* \"contracts/src/YieldOptimizer.sol\":11995:11999  4000 */\n      0x0fa0\n        /* \"contracts/src/YieldOptimizer.sol\":11981:11992  totalAmount */\n      dup7\n        /* \"contracts/src/YieldOptimizer.sol\":11981:11999  totalAmount * 4000 */\n      tag_271\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_271:\n        /* \"contracts/src/YieldOptimizer.sol\":11980:12015  (totalAmount * 4000) / BASIS_POINTS */\n      tag_272\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_272:\n        /* \"contracts/src/YieldOptimizer.sol\":11968:12015  traderJoe = (totalAmount * 4000) / BASIS_POINTS */\n      swap2\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":1904:1909  10000 */\n      0x2710\n        /* \"contracts/src/YieldOptimizer.sol\":12055:12059  2000 */\n      0x07d0\n        /* \"contracts/src/YieldOptimizer.sol\":12041:12052  totalAmount */\n      dup7\n        /* \"contracts/src/YieldOptimizer.sol\":12041:12059  totalAmount * 2000 */\n      tag_273\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_273:\n        /* \"contracts/src/YieldOptimizer.sol\":12040:12075  (totalAmount * 2000) / BASIS_POINTS */\n      tag_274\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_274:\n        /* \"contracts/src/YieldOptimizer.sol\":12029:12075  yieldYak = (totalAmount * 2000) / BASIS_POINTS */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":11876:12281  if (riskScore <= 66) {... */\n      jump(tag_275)\n    tag_268:\n        /* \"contracts/src/YieldOptimizer.sol\":1904:1909  10000 */\n      0x2710\n        /* \"contracts/src/YieldOptimizer.sol\":12129:12133  2000 */\n      0x07d0\n        /* \"contracts/src/YieldOptimizer.sol\":12115:12126  totalAmount */\n      dup7\n        /* \"contracts/src/YieldOptimizer.sol\":12115:12133  totalAmount * 2000 */\n      tag_276\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_276:\n        /* \"contracts/src/YieldOptimizer.sol\":12114:12149  (totalAmount * 2000) / BASIS_POINTS */\n      tag_277\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_277:\n        /* \"contracts/src/YieldOptimizer.sol\":12106:12149  benqi = (totalAmount * 2000) / BASIS_POINTS */\n      swap3\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":1904:1909  10000 */\n      0x2710\n        /* \"contracts/src/YieldOptimizer.sol\":12190:12194  3000 */\n      0x0bb8\n        /* \"contracts/src/YieldOptimizer.sol\":12176:12187  totalAmount */\n      dup7\n        /* \"contracts/src/YieldOptimizer.sol\":12176:12194  totalAmount * 3000 */\n      tag_278\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_278:\n        /* \"contracts/src/YieldOptimizer.sol\":12175:12210  (totalAmount * 3000) / BASIS_POINTS */\n      tag_279\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_279:\n        /* \"contracts/src/YieldOptimizer.sol\":12163:12210  traderJoe = (totalAmount * 3000) / BASIS_POINTS */\n      swap2\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":1904:1909  10000 */\n      0x2710\n        /* \"contracts/src/YieldOptimizer.sol\":12250:12254  5000 */\n      0x1388\n        /* \"contracts/src/YieldOptimizer.sol\":12236:12247  totalAmount */\n      dup7\n        /* \"contracts/src/YieldOptimizer.sol\":12236:12254  totalAmount * 5000 */\n      tag_280\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_280:\n        /* \"contracts/src/YieldOptimizer.sol\":12235:12270  (totalAmount * 5000) / BASIS_POINTS */\n      tag_281\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_281:\n        /* \"contracts/src/YieldOptimizer.sol\":12224:12270  yieldYak = (totalAmount * 5000) / BASIS_POINTS */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":11876:12281  if (riskScore <= 66) {... */\n    tag_275:\n        /* \"contracts/src/YieldOptimizer.sol\":11694:12281  if (riskScore <= 33) {... */\n    tag_267:\n        /* \"contracts/src/YieldOptimizer.sol\":11502:12287  function _calculateOptimalAllocation(uint256 totalAmount, uint8 riskScore) ... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"contracts/src/YieldOptimizer.sol\":12293:12822  function _shouldRebalance(... */\n    tag_149:\n        /* \"contracts/src/YieldOptimizer.sol\":12513:12517  bool */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":12529:12546  uint256 benqiDiff */\n      dup1\n        /* \"contracts/src/YieldOptimizer.sol\":12571:12582  targetBenqi */\n      dup6\n        /* \"contracts/src/YieldOptimizer.sol\":12549:12556  current */\n      dup8\n        /* \"contracts/src/YieldOptimizer.sol\":12549:12568  current.benqiAmount */\n      0x00\n      add\n      mload\n        /* \"contracts/src/YieldOptimizer.sol\":12549:12582  current.benqiAmount > targetBenqi */\n      gt\n        /* \"contracts/src/YieldOptimizer.sol\":12549:12680  current.benqiAmount > targetBenqi ? ... */\n      tag_283\n      jumpi\n        /* \"contracts/src/YieldOptimizer.sol\":12661:12668  current */\n      dup7\n        /* \"contracts/src/YieldOptimizer.sol\":12661:12680  current.benqiAmount */\n      0x00\n      add\n      mload\n        /* \"contracts/src/YieldOptimizer.sol\":12647:12658  targetBenqi */\n      dup7\n        /* \"contracts/src/YieldOptimizer.sol\":12647:12680  targetBenqi - current.benqiAmount */\n      tag_284\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_284:\n        /* \"contracts/src/YieldOptimizer.sol\":12549:12680  current.benqiAmount > targetBenqi ? ... */\n      jump(tag_286)\n    tag_283:\n        /* \"contracts/src/YieldOptimizer.sol\":12620:12631  targetBenqi */\n      dup6\n        /* \"contracts/src/YieldOptimizer.sol\":12598:12605  current */\n      dup8\n        /* \"contracts/src/YieldOptimizer.sol\":12598:12617  current.benqiAmount */\n      0x00\n      add\n      mload\n        /* \"contracts/src/YieldOptimizer.sol\":12598:12631  current.benqiAmount - targetBenqi */\n      tag_287\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_287:\n        /* \"contracts/src/YieldOptimizer.sol\":12549:12680  current.benqiAmount > targetBenqi ? ... */\n    tag_286:\n        /* \"contracts/src/YieldOptimizer.sol\":12529:12680  uint256 benqiDiff = current.benqiAmount > targetBenqi ? ... */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":12699:12716  uint256 threshold */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":1904:1909  10000 */\n      0x2710\n        /* \"contracts/src/YieldOptimizer.sol\":1824:1827  500 */\n      0x01f4\n        /* \"contracts/src/YieldOptimizer.sol\":12720:12730  totalValue */\n      dup6\n        /* \"contracts/src/YieldOptimizer.sol\":12720:12752  totalValue * REBALANCE_THRESHOLD */\n      tag_288\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_288:\n        /* \"contracts/src/YieldOptimizer.sol\":12719:12768  (totalValue * REBALANCE_THRESHOLD) / BASIS_POINTS */\n      tag_289\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_289:\n        /* \"contracts/src/YieldOptimizer.sol\":12699:12768  uint256 threshold = (totalValue * REBALANCE_THRESHOLD) / BASIS_POINTS */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":12806:12815  threshold */\n      dup1\n        /* \"contracts/src/YieldOptimizer.sol\":12794:12803  benqiDiff */\n      dup3\n        /* \"contracts/src/YieldOptimizer.sol\":12794:12815  benqiDiff > threshold */\n      gt\n        /* \"contracts/src/YieldOptimizer.sol\":12787:12815  return benqiDiff > threshold */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":12293:12822  function _shouldRebalance(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_291\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_292\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_293\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_295\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_292\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/src/YieldOptimizer.sol\":12828:14539  function _executeRebalance(... */\n    tag_166:\n        /* \"contracts/src/YieldOptimizer.sol\":13112:13128  int256 benqiDiff */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":13160:13167  current */\n      dup5\n        /* \"contracts/src/YieldOptimizer.sol\":13160:13179  current.benqiAmount */\n      0x00\n      add\n      sload\n        /* \"contracts/src/YieldOptimizer.sol\":13138:13149  targetBenqi */\n      dup5\n        /* \"contracts/src/YieldOptimizer.sol\":13131:13180  int256(targetBenqi) - int256(current.benqiAmount) */\n      tag_299\n      swap2\n      swap1\n      tag_300\n      jump\t// in\n    tag_299:\n        /* \"contracts/src/YieldOptimizer.sol\":13112:13180  int256 benqiDiff = int256(targetBenqi) - int256(current.benqiAmount) */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":13190:13210  int256 traderJoeDiff */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":13246:13253  current */\n      dup6\n        /* \"contracts/src/YieldOptimizer.sol\":13246:13269  current.traderJoeAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/src/YieldOptimizer.sol\":13220:13235  targetTraderJoe */\n      dup5\n        /* \"contracts/src/YieldOptimizer.sol\":13213:13270  int256(targetTraderJoe) - int256(current.traderJoeAmount) */\n      tag_301\n      swap2\n      swap1\n      tag_300\n      jump\t// in\n    tag_301:\n        /* \"contracts/src/YieldOptimizer.sol\":13190:13270  int256 traderJoeDiff = int256(targetTraderJoe) - int256(current.traderJoeAmount) */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":13280:13299  int256 yieldYakDiff */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":13334:13341  current */\n      dup7\n        /* \"contracts/src/YieldOptimizer.sol\":13334:13356  current.yieldYakAmount */\n      0x02\n      add\n      sload\n        /* \"contracts/src/YieldOptimizer.sol\":13309:13323  targetYieldYak */\n      dup5\n        /* \"contracts/src/YieldOptimizer.sol\":13302:13357  int256(targetYieldYak) - int256(current.yieldYakAmount) */\n      tag_302\n      swap2\n      swap1\n      tag_300\n      jump\t// in\n    tag_302:\n        /* \"contracts/src/YieldOptimizer.sol\":13280:13357  int256 yieldYakDiff = int256(targetYieldYak) - int256(current.yieldYakAmount) */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":13376:13398  uint256 totalWithdrawn */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":13495:13496  0 */\n      dup1\n        /* \"contracts/src/YieldOptimizer.sol\":13483:13492  benqiDiff */\n      dup5\n        /* \"contracts/src/YieldOptimizer.sol\":13483:13496  benqiDiff < 0 */\n      slt\n        /* \"contracts/src/YieldOptimizer.sol\":13479:13633  if (benqiDiff < 0) {... */\n      iszero\n      tag_303\n      jumpi\n        /* \"contracts/src/YieldOptimizer.sol\":13512:13534  uint256 withdrawAmount */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":13546:13555  benqiDiff */\n      dup5\n        /* \"contracts/src/YieldOptimizer.sol\":13545:13555  -benqiDiff */\n      tag_304\n      swap1\n      tag_305\n      jump\t// in\n    tag_304:\n        /* \"contracts/src/YieldOptimizer.sol\":13512:13556  uint256 withdrawAmount = uint256(-benqiDiff) */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":13588:13622  _withdrawFromBenqi(withdrawAmount) */\n      tag_306\n        /* \"contracts/src/YieldOptimizer.sol\":13607:13621  withdrawAmount */\n      dup2\n        /* \"contracts/src/YieldOptimizer.sol\":13588:13606  _withdrawFromBenqi */\n      tag_200\n        /* \"contracts/src/YieldOptimizer.sol\":13588:13622  _withdrawFromBenqi(withdrawAmount) */\n      jump\t// in\n    tag_306:\n        /* \"contracts/src/YieldOptimizer.sol\":13570:13622  totalWithdrawn += _withdrawFromBenqi(withdrawAmount) */\n      dup3\n      tag_307\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_307:\n      swap2\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":13498:13633  {... */\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":13479:13633  if (benqiDiff < 0) {... */\n    tag_303:\n        /* \"contracts/src/YieldOptimizer.sol\":13662:13663  0 */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":13646:13659  traderJoeDiff */\n      dup4\n        /* \"contracts/src/YieldOptimizer.sol\":13646:13663  traderJoeDiff < 0 */\n      slt\n        /* \"contracts/src/YieldOptimizer.sol\":13642:13808  if (traderJoeDiff < 0) {... */\n      iszero\n      tag_308\n      jumpi\n        /* \"contracts/src/YieldOptimizer.sol\":13679:13701  uint256 withdrawAmount */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":13713:13726  traderJoeDiff */\n      dup4\n        /* \"contracts/src/YieldOptimizer.sol\":13712:13726  -traderJoeDiff */\n      tag_309\n      swap1\n      tag_305\n      jump\t// in\n    tag_309:\n        /* \"contracts/src/YieldOptimizer.sol\":13679:13727  uint256 withdrawAmount = uint256(-traderJoeDiff) */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":13759:13797  _withdrawFromTraderJoe(withdrawAmount) */\n      tag_310\n        /* \"contracts/src/YieldOptimizer.sol\":13782:13796  withdrawAmount */\n      dup2\n        /* \"contracts/src/YieldOptimizer.sol\":13759:13781  _withdrawFromTraderJoe */\n      tag_204\n        /* \"contracts/src/YieldOptimizer.sol\":13759:13797  _withdrawFromTraderJoe(withdrawAmount) */\n      jump\t// in\n    tag_310:\n        /* \"contracts/src/YieldOptimizer.sol\":13741:13797  totalWithdrawn += _withdrawFromTraderJoe(withdrawAmount) */\n      dup3\n      tag_311\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_311:\n      swap2\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":13665:13808  {... */\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":13642:13808  if (traderJoeDiff < 0) {... */\n    tag_308:\n        /* \"contracts/src/YieldOptimizer.sol\":13836:13837  0 */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":13821:13833  yieldYakDiff */\n      dup3\n        /* \"contracts/src/YieldOptimizer.sol\":13821:13837  yieldYakDiff < 0 */\n      slt\n        /* \"contracts/src/YieldOptimizer.sol\":13817:13980  if (yieldYakDiff < 0) {... */\n      iszero\n      tag_312\n      jumpi\n        /* \"contracts/src/YieldOptimizer.sol\":13853:13875  uint256 withdrawAmount */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":13887:13899  yieldYakDiff */\n      dup3\n        /* \"contracts/src/YieldOptimizer.sol\":13886:13899  -yieldYakDiff */\n      tag_313\n      swap1\n      tag_305\n      jump\t// in\n    tag_313:\n        /* \"contracts/src/YieldOptimizer.sol\":13853:13900  uint256 withdrawAmount = uint256(-yieldYakDiff) */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":13932:13969  _withdrawFromYieldYak(withdrawAmount) */\n      tag_314\n        /* \"contracts/src/YieldOptimizer.sol\":13954:13968  withdrawAmount */\n      dup2\n        /* \"contracts/src/YieldOptimizer.sol\":13932:13953  _withdrawFromYieldYak */\n      tag_208\n        /* \"contracts/src/YieldOptimizer.sol\":13932:13969  _withdrawFromYieldYak(withdrawAmount) */\n      jump\t// in\n    tag_314:\n        /* \"contracts/src/YieldOptimizer.sol\":13914:13969  totalWithdrawn += _withdrawFromYieldYak(withdrawAmount) */\n      dup3\n      tag_315\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_315:\n      swap2\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":13839:13980  {... */\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":13817:13980  if (yieldYakDiff < 0) {... */\n    tag_312:\n        /* \"contracts/src/YieldOptimizer.sol\":14070:14071  0 */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":14058:14067  benqiDiff */\n      dup5\n        /* \"contracts/src/YieldOptimizer.sol\":14058:14071  benqiDiff > 0 */\n      sgt\n        /* \"contracts/src/YieldOptimizer.sol\":14054:14133  if (benqiDiff > 0) {... */\n      iszero\n      tag_316\n      jumpi\n        /* \"contracts/src/YieldOptimizer.sol\":14087:14122  _depositToBenqi(uint256(benqiDiff)) */\n      tag_317\n        /* \"contracts/src/YieldOptimizer.sol\":14111:14120  benqiDiff */\n      dup5\n        /* \"contracts/src/YieldOptimizer.sol\":14087:14102  _depositToBenqi */\n      tag_253\n        /* \"contracts/src/YieldOptimizer.sol\":14087:14122  _depositToBenqi(uint256(benqiDiff)) */\n      jump\t// in\n    tag_317:\n        /* \"contracts/src/YieldOptimizer.sol\":14054:14133  if (benqiDiff > 0) {... */\n    tag_316:\n        /* \"contracts/src/YieldOptimizer.sol\":14162:14163  0 */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":14146:14159  traderJoeDiff */\n      dup4\n        /* \"contracts/src/YieldOptimizer.sol\":14146:14163  traderJoeDiff > 0 */\n      sgt\n        /* \"contracts/src/YieldOptimizer.sol\":14142:14233  if (traderJoeDiff > 0) {... */\n      iszero\n      tag_318\n      jumpi\n        /* \"contracts/src/YieldOptimizer.sol\":14179:14222  _depositToTraderJoe(uint256(traderJoeDiff)) */\n      tag_319\n        /* \"contracts/src/YieldOptimizer.sol\":14207:14220  traderJoeDiff */\n      dup4\n        /* \"contracts/src/YieldOptimizer.sol\":14179:14198  _depositToTraderJoe */\n      tag_256\n        /* \"contracts/src/YieldOptimizer.sol\":14179:14222  _depositToTraderJoe(uint256(traderJoeDiff)) */\n      jump\t// in\n    tag_319:\n        /* \"contracts/src/YieldOptimizer.sol\":14142:14233  if (traderJoeDiff > 0) {... */\n    tag_318:\n        /* \"contracts/src/YieldOptimizer.sol\":14261:14262  0 */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":14246:14258  yieldYakDiff */\n      dup3\n        /* \"contracts/src/YieldOptimizer.sol\":14246:14262  yieldYakDiff > 0 */\n      sgt\n        /* \"contracts/src/YieldOptimizer.sol\":14242:14330  if (yieldYakDiff > 0) {... */\n      iszero\n      tag_320\n      jumpi\n        /* \"contracts/src/YieldOptimizer.sol\":14278:14319  _depositToYieldYak(uint256(yieldYakDiff)) */\n      tag_321\n        /* \"contracts/src/YieldOptimizer.sol\":14305:14317  yieldYakDiff */\n      dup3\n        /* \"contracts/src/YieldOptimizer.sol\":14278:14296  _depositToYieldYak */\n      tag_259\n        /* \"contracts/src/YieldOptimizer.sol\":14278:14319  _depositToYieldYak(uint256(yieldYakDiff)) */\n      jump\t// in\n    tag_321:\n        /* \"contracts/src/YieldOptimizer.sol\":14242:14330  if (yieldYakDiff > 0) {... */\n    tag_320:\n        /* \"contracts/src/YieldOptimizer.sol\":14421:14432  targetBenqi */\n      dup7\n        /* \"contracts/src/YieldOptimizer.sol\":14399:14406  current */\n      dup9\n        /* \"contracts/src/YieldOptimizer.sol\":14399:14418  current.benqiAmount */\n      0x00\n      add\n        /* \"contracts/src/YieldOptimizer.sol\":14399:14432  current.benqiAmount = targetBenqi */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":14468:14483  targetTraderJoe */\n      dup6\n        /* \"contracts/src/YieldOptimizer.sol\":14442:14449  current */\n      dup9\n        /* \"contracts/src/YieldOptimizer.sol\":14442:14465  current.traderJoeAmount */\n      0x01\n      add\n        /* \"contracts/src/YieldOptimizer.sol\":14442:14483  current.traderJoeAmount = targetTraderJoe */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":14518:14532  targetYieldYak */\n      dup5\n        /* \"contracts/src/YieldOptimizer.sol\":14493:14500  current */\n      dup9\n        /* \"contracts/src/YieldOptimizer.sol\":14493:14515  current.yieldYakAmount */\n      0x02\n      add\n        /* \"contracts/src/YieldOptimizer.sol\":14493:14532  current.yieldYakAmount = targetYieldYak */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":13030:14539  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":12828:14539  function _executeRebalance(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/src/YieldOptimizer.sol\":10221:10635  function _withdrawFromBenqi(uint256 amount) view  internal returns (uint256) {... */\n    tag_200:\n        /* \"contracts/src/YieldOptimizer.sol\":10289:10296  uint256 */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":10513:10536  uint256 withdrawnAmount */\n      dup1\n        /* \"contracts/src/YieldOptimizer.sol\":10591:10596  10000 */\n      0x2710\n        /* \"contracts/src/YieldOptimizer.sol\":10583:10586  365 */\n      0x016d\n        /* \"contracts/src/YieldOptimizer.sol\":10558:10571  currentYields */\n      0x04\n        /* \"contracts/src/YieldOptimizer.sol\":10558:10580  currentYields.benqiAPY */\n      0x00\n      add\n      sload\n        /* \"contracts/src/YieldOptimizer.sol\":10558:10586  currentYields.benqiAPY / 365 */\n      tag_323\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_323:\n        /* \"contracts/src/YieldOptimizer.sol\":10550:10555  10000 */\n      0x2710\n        /* \"contracts/src/YieldOptimizer.sol\":10550:10586  10000 + currentYields.benqiAPY / 365 */\n      tag_324\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_324:\n        /* \"contracts/src/YieldOptimizer.sol\":10540:10546  amount */\n      dup5\n        /* \"contracts/src/YieldOptimizer.sol\":10540:10587  amount * (10000 + currentYields.benqiAPY / 365) */\n      tag_325\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_325:\n        /* \"contracts/src/YieldOptimizer.sol\":10539:10596  (amount * (10000 + currentYields.benqiAPY / 365)) / 10000 */\n      tag_326\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_326:\n        /* \"contracts/src/YieldOptimizer.sol\":10513:10596  uint256 withdrawnAmount = (amount * (10000 + currentYields.benqiAPY / 365)) / 10000 */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":10613:10628  withdrawnAmount */\n      dup1\n        /* \"contracts/src/YieldOptimizer.sol\":10606:10628  return withdrawnAmount */\n      swap2\n      pop\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":10221:10635  function _withdrawFromBenqi(uint256 amount) view  internal returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/src/YieldOptimizer.sol\":10641:11064  function _withdrawFromTraderJoe(uint256 amount) view  internal returns (uint256) {... */\n    tag_204:\n        /* \"contracts/src/YieldOptimizer.sol\":10713:10720  uint256 */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":10938:10961  uint256 withdrawnAmount */\n      dup1\n        /* \"contracts/src/YieldOptimizer.sol\":11020:11025  10000 */\n      0x2710\n        /* \"contracts/src/YieldOptimizer.sol\":11012:11015  365 */\n      0x016d\n        /* \"contracts/src/YieldOptimizer.sol\":10983:10996  currentYields */\n      0x04\n        /* \"contracts/src/YieldOptimizer.sol\":10983:11009  currentYields.traderJoeAPY */\n      0x01\n      add\n      sload\n        /* \"contracts/src/YieldOptimizer.sol\":10983:11015  currentYields.traderJoeAPY / 365 */\n      tag_328\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_328:\n        /* \"contracts/src/YieldOptimizer.sol\":10975:10980  10000 */\n      0x2710\n        /* \"contracts/src/YieldOptimizer.sol\":10975:11015  10000 + currentYields.traderJoeAPY / 365 */\n      tag_329\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_329:\n        /* \"contracts/src/YieldOptimizer.sol\":10965:10971  amount */\n      dup5\n        /* \"contracts/src/YieldOptimizer.sol\":10965:11016  amount * (10000 + currentYields.traderJoeAPY / 365) */\n      tag_330\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_330:\n        /* \"contracts/src/YieldOptimizer.sol\":10964:11025  (amount * (10000 + currentYields.traderJoeAPY / 365)) / 10000 */\n      tag_331\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_331:\n        /* \"contracts/src/YieldOptimizer.sol\":10938:11025  uint256 withdrawnAmount = (amount * (10000 + currentYields.traderJoeAPY / 365)) / 10000 */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":11042:11057  withdrawnAmount */\n      dup1\n        /* \"contracts/src/YieldOptimizer.sol\":11035:11057  return withdrawnAmount */\n      swap2\n      pop\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":10641:11064  function _withdrawFromTraderJoe(uint256 amount) view  internal returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/src/YieldOptimizer.sol\":11070:11496  function _withdrawFromYieldYak(uint256 amount) view  internal returns (uint256) {... */\n    tag_208:\n        /* \"contracts/src/YieldOptimizer.sol\":11141:11148  uint256 */\n      0x00\n        /* \"contracts/src/YieldOptimizer.sol\":11371:11394  uint256 withdrawnAmount */\n      dup1\n        /* \"contracts/src/YieldOptimizer.sol\":11452:11457  10000 */\n      0x2710\n        /* \"contracts/src/YieldOptimizer.sol\":11444:11447  365 */\n      0x016d\n        /* \"contracts/src/YieldOptimizer.sol\":11416:11429  currentYields */\n      0x04\n        /* \"contracts/src/YieldOptimizer.sol\":11416:11441  currentYields.yieldYakAPY */\n      0x02\n      add\n      sload\n        /* \"contracts/src/YieldOptimizer.sol\":11416:11447  currentYields.yieldYakAPY / 365 */\n      tag_333\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_333:\n        /* \"contracts/src/YieldOptimizer.sol\":11408:11413  10000 */\n      0x2710\n        /* \"contracts/src/YieldOptimizer.sol\":11408:11447  10000 + currentYields.yieldYakAPY / 365 */\n      tag_334\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_334:\n        /* \"contracts/src/YieldOptimizer.sol\":11398:11404  amount */\n      dup5\n        /* \"contracts/src/YieldOptimizer.sol\":11398:11448  amount * (10000 + currentYields.yieldYakAPY / 365) */\n      tag_335\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_335:\n        /* \"contracts/src/YieldOptimizer.sol\":11397:11457  (amount * (10000 + currentYields.yieldYakAPY / 365)) / 10000 */\n      tag_336\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_336:\n        /* \"contracts/src/YieldOptimizer.sol\":11371:11457  uint256 withdrawnAmount = (amount * (10000 + currentYields.yieldYakAPY / 365)) / 10000 */\n      swap1\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":11474:11489  withdrawnAmount */\n      dup1\n        /* \"contracts/src/YieldOptimizer.sol\":11467:11489  return withdrawnAmount */\n      swap2\n      pop\n      pop\n        /* \"contracts/src/YieldOptimizer.sol\":11070:11496  function _withdrawFromYieldYak(uint256 amount) view  internal returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/src/YieldOptimizer.sol\":9696:9860  function _depositToBenqi(uint256 amount) internal {... */\n    tag_253:\n      pop\n      jump\t// out\n        /* \"contracts/src/YieldOptimizer.sol\":9866:10035  function _depositToTraderJoe(uint256 amount) internal {... */\n    tag_256:\n      pop\n      jump\t// out\n        /* \"contracts/src/YieldOptimizer.sol\":10041:10215  function _depositToYieldYak(uint256 amount) internal {... */\n    tag_259:\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n    tag_135:\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      and(0xff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_137:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_342:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_343:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:420   */\n    tag_344:\n        /* \"#utility.yul\":369:376   */\n      0x00\n        /* \"#utility.yul\":409:413   */\n      0xff\n        /* \"#utility.yul\":402:407   */\n      dup3\n        /* \"#utility.yul\":398:414   */\n      and\n        /* \"#utility.yul\":387:414   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:420   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":426:544   */\n    tag_345:\n        /* \"#utility.yul\":497:519   */\n      tag_397\n        /* \"#utility.yul\":513:518   */\n      dup2\n        /* \"#utility.yul\":497:519   */\n      tag_344\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":490:495   */\n      dup2\n        /* \"#utility.yul\":487:520   */\n      eq\n        /* \"#utility.yul\":477:538   */\n      tag_398\n      jumpi\n        /* \"#utility.yul\":534:535   */\n      0x00\n        /* \"#utility.yul\":531:532   */\n      dup1\n        /* \"#utility.yul\":524:536   */\n      revert\n        /* \"#utility.yul\":477:538   */\n    tag_398:\n        /* \"#utility.yul\":426:544   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":550:685   */\n    tag_346:\n        /* \"#utility.yul\":594:599   */\n      0x00\n        /* \"#utility.yul\":632:638   */\n      dup2\n        /* \"#utility.yul\":619:639   */\n      calldataload\n        /* \"#utility.yul\":610:639   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:679   */\n      tag_400\n        /* \"#utility.yul\":673:678   */\n      dup2\n        /* \"#utility.yul\":648:679   */\n      tag_345\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":550:685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":691:1016   */\n    tag_27:\n        /* \"#utility.yul\":748:754   */\n      0x00\n        /* \"#utility.yul\":797:799   */\n      0x20\n        /* \"#utility.yul\":785:794   */\n      dup3\n        /* \"#utility.yul\":776:783   */\n      dup5\n        /* \"#utility.yul\":772:795   */\n      sub\n        /* \"#utility.yul\":768:800   */\n      slt\n        /* \"#utility.yul\":765:884   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":803:882   */\n      tag_403\n      tag_342\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":765:884   */\n    tag_402:\n        /* \"#utility.yul\":923:924   */\n      0x00\n        /* \"#utility.yul\":948:999   */\n      tag_404\n        /* \"#utility.yul\":991:998   */\n      dup5\n        /* \"#utility.yul\":982:988   */\n      dup3\n        /* \"#utility.yul\":971:980   */\n      dup6\n        /* \"#utility.yul\":967:989   */\n      add\n        /* \"#utility.yul\":948:999   */\n      tag_346\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":938:999   */\n      swap2\n      pop\n        /* \"#utility.yul\":894:1009   */\n      pop\n        /* \"#utility.yul\":691:1016   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1022:1148   */\n    tag_347:\n        /* \"#utility.yul\":1059:1066   */\n      0x00\n        /* \"#utility.yul\":1099:1141   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1092:1097   */\n      dup3\n        /* \"#utility.yul\":1088:1142   */\n      and\n        /* \"#utility.yul\":1077:1142   */\n      swap1\n      pop\n        /* \"#utility.yul\":1022:1148   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1154:1250   */\n    tag_348:\n        /* \"#utility.yul\":1191:1198   */\n      0x00\n        /* \"#utility.yul\":1220:1244   */\n      tag_407\n        /* \"#utility.yul\":1238:1243   */\n      dup3\n        /* \"#utility.yul\":1220:1244   */\n      tag_347\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":1209:1244   */\n      swap1\n      pop\n        /* \"#utility.yul\":1154:1250   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1256:1374   */\n    tag_349:\n        /* \"#utility.yul\":1343:1367   */\n      tag_409\n        /* \"#utility.yul\":1361:1366   */\n      dup2\n        /* \"#utility.yul\":1343:1367   */\n      tag_348\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":1338:1341   */\n      dup3\n        /* \"#utility.yul\":1331:1368   */\n      mstore\n        /* \"#utility.yul\":1256:1374   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1380:1602   */\n    tag_33:\n        /* \"#utility.yul\":1473:1477   */\n      0x00\n        /* \"#utility.yul\":1511:1513   */\n      0x20\n        /* \"#utility.yul\":1500:1509   */\n      dup3\n        /* \"#utility.yul\":1496:1514   */\n      add\n        /* \"#utility.yul\":1488:1514   */\n      swap1\n      pop\n        /* \"#utility.yul\":1524:1595   */\n      tag_411\n        /* \"#utility.yul\":1592:1593   */\n      0x00\n        /* \"#utility.yul\":1581:1590   */\n      dup4\n        /* \"#utility.yul\":1577:1594   */\n      add\n        /* \"#utility.yul\":1568:1574   */\n      dup5\n        /* \"#utility.yul\":1524:1595   */\n      tag_349\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":1380:1602   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1608:1730   */\n    tag_350:\n        /* \"#utility.yul\":1681:1705   */\n      tag_413\n        /* \"#utility.yul\":1699:1704   */\n      dup2\n        /* \"#utility.yul\":1681:1705   */\n      tag_348\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":1674:1679   */\n      dup2\n        /* \"#utility.yul\":1671:1706   */\n      eq\n        /* \"#utility.yul\":1661:1724   */\n      tag_414\n      jumpi\n        /* \"#utility.yul\":1720:1721   */\n      0x00\n        /* \"#utility.yul\":1717:1718   */\n      dup1\n        /* \"#utility.yul\":1710:1722   */\n      revert\n        /* \"#utility.yul\":1661:1724   */\n    tag_414:\n        /* \"#utility.yul\":1608:1730   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1736:1875   */\n    tag_351:\n        /* \"#utility.yul\":1782:1787   */\n      0x00\n        /* \"#utility.yul\":1820:1826   */\n      dup2\n        /* \"#utility.yul\":1807:1827   */\n      calldataload\n        /* \"#utility.yul\":1798:1827   */\n      swap1\n      pop\n        /* \"#utility.yul\":1836:1869   */\n      tag_416\n        /* \"#utility.yul\":1863:1868   */\n      dup2\n        /* \"#utility.yul\":1836:1869   */\n      tag_350\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":1736:1875   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1881:2210   */\n    tag_37:\n        /* \"#utility.yul\":1940:1946   */\n      0x00\n        /* \"#utility.yul\":1989:1991   */\n      0x20\n        /* \"#utility.yul\":1977:1986   */\n      dup3\n        /* \"#utility.yul\":1968:1975   */\n      dup5\n        /* \"#utility.yul\":1964:1987   */\n      sub\n        /* \"#utility.yul\":1960:1992   */\n      slt\n        /* \"#utility.yul\":1957:2076   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":1995:2074   */\n      tag_419\n      tag_342\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":1957:2076   */\n    tag_418:\n        /* \"#utility.yul\":2115:2116   */\n      0x00\n        /* \"#utility.yul\":2140:2193   */\n      tag_420\n        /* \"#utility.yul\":2185:2192   */\n      dup5\n        /* \"#utility.yul\":2176:2182   */\n      dup3\n        /* \"#utility.yul\":2165:2174   */\n      dup6\n        /* \"#utility.yul\":2161:2183   */\n      add\n        /* \"#utility.yul\":2140:2193   */\n      tag_351\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":2130:2193   */\n      swap2\n      pop\n        /* \"#utility.yul\":2086:2203   */\n      pop\n        /* \"#utility.yul\":1881:2210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2216:2318   */\n    tag_352:\n        /* \"#utility.yul\":2289:2311   */\n      tag_422\n        /* \"#utility.yul\":2305:2310   */\n      dup2\n        /* \"#utility.yul\":2289:2311   */\n      tag_344\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":2284:2287   */\n      dup3\n        /* \"#utility.yul\":2277:2312   */\n      mstore\n        /* \"#utility.yul\":2216:2318   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2324:2401   */\n    tag_353:\n        /* \"#utility.yul\":2361:2368   */\n      0x00\n        /* \"#utility.yul\":2390:2395   */\n      dup2\n        /* \"#utility.yul\":2379:2395   */\n      swap1\n      pop\n        /* \"#utility.yul\":2324:2401   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2407:2515   */\n    tag_354:\n        /* \"#utility.yul\":2484:2508   */\n      tag_425\n        /* \"#utility.yul\":2502:2507   */\n      dup2\n        /* \"#utility.yul\":2484:2508   */\n      tag_353\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":2479:2482   */\n      dup3\n        /* \"#utility.yul\":2472:2509   */\n      mstore\n        /* \"#utility.yul\":2407:2515   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2521:2611   */\n    tag_355:\n        /* \"#utility.yul\":2555:2562   */\n      0x00\n        /* \"#utility.yul\":2598:2603   */\n      dup2\n        /* \"#utility.yul\":2591:2604   */\n      iszero\n        /* \"#utility.yul\":2584:2605   */\n      iszero\n        /* \"#utility.yul\":2573:2605   */\n      swap1\n      pop\n        /* \"#utility.yul\":2521:2611   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2617:2716   */\n    tag_356:\n        /* \"#utility.yul\":2688:2709   */\n      tag_428\n        /* \"#utility.yul\":2703:2708   */\n      dup2\n        /* \"#utility.yul\":2688:2709   */\n      tag_355\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":2683:2686   */\n      dup3\n        /* \"#utility.yul\":2676:2710   */\n      mstore\n        /* \"#utility.yul\":2617:2716   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2800:3684   */\n    tag_357:\n        /* \"#utility.yul\":2953:2957   */\n      0x80\n        /* \"#utility.yul\":2948:2951   */\n      dup3\n        /* \"#utility.yul\":2944:2958   */\n      add\n        /* \"#utility.yul\":3045:3049   */\n      0x00\n        /* \"#utility.yul\":3038:3043   */\n      dup3\n        /* \"#utility.yul\":3034:3050   */\n      add\n        /* \"#utility.yul\":3028:3051   */\n      mload\n        /* \"#utility.yul\":3064:3123   */\n      tag_430\n        /* \"#utility.yul\":3117:3121   */\n      0x00\n        /* \"#utility.yul\":3112:3115   */\n      dup6\n        /* \"#utility.yul\":3108:3122   */\n      add\n        /* \"#utility.yul\":3094:3106   */\n      dup3\n        /* \"#utility.yul\":3064:3123   */\n      tag_352\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":2968:3133   */\n      pop\n        /* \"#utility.yul\":3225:3229   */\n      0x20\n        /* \"#utility.yul\":3218:3223   */\n      dup3\n        /* \"#utility.yul\":3214:3230   */\n      add\n        /* \"#utility.yul\":3208:3231   */\n      mload\n        /* \"#utility.yul\":3244:3307   */\n      tag_431\n        /* \"#utility.yul\":3301:3305   */\n      0x20\n        /* \"#utility.yul\":3296:3299   */\n      dup6\n        /* \"#utility.yul\":3292:3306   */\n      add\n        /* \"#utility.yul\":3278:3290   */\n      dup3\n        /* \"#utility.yul\":3244:3307   */\n      tag_354\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":3143:3317   */\n      pop\n        /* \"#utility.yul\":3408:3412   */\n      0x40\n        /* \"#utility.yul\":3401:3406   */\n      dup3\n        /* \"#utility.yul\":3397:3413   */\n      add\n        /* \"#utility.yul\":3391:3414   */\n      mload\n        /* \"#utility.yul\":3427:3490   */\n      tag_432\n        /* \"#utility.yul\":3484:3488   */\n      0x40\n        /* \"#utility.yul\":3479:3482   */\n      dup6\n        /* \"#utility.yul\":3475:3489   */\n      add\n        /* \"#utility.yul\":3461:3473   */\n      dup3\n        /* \"#utility.yul\":3427:3490   */\n      tag_354\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":3327:3500   */\n      pop\n        /* \"#utility.yul\":3591:3595   */\n      0x60\n        /* \"#utility.yul\":3584:3589   */\n      dup3\n        /* \"#utility.yul\":3580:3596   */\n      add\n        /* \"#utility.yul\":3574:3597   */\n      mload\n        /* \"#utility.yul\":3610:3667   */\n      tag_433\n        /* \"#utility.yul\":3661:3665   */\n      0x60\n        /* \"#utility.yul\":3656:3659   */\n      dup6\n        /* \"#utility.yul\":3652:3666   */\n      add\n        /* \"#utility.yul\":3638:3650   */\n      dup3\n        /* \"#utility.yul\":3610:3667   */\n      tag_356\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":3510:3677   */\n      pop\n        /* \"#utility.yul\":2922:3684   */\n      pop\n        /* \"#utility.yul\":2800:3684   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3782:4511   */\n    tag_358:\n        /* \"#utility.yul\":3949:3953   */\n      0x60\n        /* \"#utility.yul\":3944:3947   */\n      dup3\n        /* \"#utility.yul\":3940:3954   */\n      add\n        /* \"#utility.yul\":4043:4047   */\n      0x00\n        /* \"#utility.yul\":4036:4041   */\n      dup3\n        /* \"#utility.yul\":4032:4048   */\n      add\n        /* \"#utility.yul\":4026:4049   */\n      mload\n        /* \"#utility.yul\":4062:4125   */\n      tag_435\n        /* \"#utility.yul\":4119:4123   */\n      0x00\n        /* \"#utility.yul\":4114:4117   */\n      dup6\n        /* \"#utility.yul\":4110:4124   */\n      add\n        /* \"#utility.yul\":4096:4108   */\n      dup3\n        /* \"#utility.yul\":4062:4125   */\n      tag_354\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":3964:4135   */\n      pop\n        /* \"#utility.yul\":4228:4232   */\n      0x20\n        /* \"#utility.yul\":4221:4226   */\n      dup3\n        /* \"#utility.yul\":4217:4233   */\n      add\n        /* \"#utility.yul\":4211:4234   */\n      mload\n        /* \"#utility.yul\":4247:4310   */\n      tag_436\n        /* \"#utility.yul\":4304:4308   */\n      0x20\n        /* \"#utility.yul\":4299:4302   */\n      dup6\n        /* \"#utility.yul\":4295:4309   */\n      add\n        /* \"#utility.yul\":4281:4293   */\n      dup3\n        /* \"#utility.yul\":4247:4310   */\n      tag_354\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":4145:4320   */\n      pop\n        /* \"#utility.yul\":4412:4416   */\n      0x40\n        /* \"#utility.yul\":4405:4410   */\n      dup3\n        /* \"#utility.yul\":4401:4417   */\n      add\n        /* \"#utility.yul\":4395:4418   */\n      mload\n        /* \"#utility.yul\":4431:4494   */\n      tag_437\n        /* \"#utility.yul\":4488:4492   */\n      0x40\n        /* \"#utility.yul\":4483:4486   */\n      dup6\n        /* \"#utility.yul\":4479:4493   */\n      add\n        /* \"#utility.yul\":4465:4477   */\n      dup3\n        /* \"#utility.yul\":4431:4494   */\n      tag_354\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":4330:4504   */\n      pop\n        /* \"#utility.yul\":3918:4511   */\n      pop\n        /* \"#utility.yul\":3782:4511   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4517:4635   */\n    tag_359:\n        /* \"#utility.yul\":4604:4628   */\n      tag_439\n        /* \"#utility.yul\":4622:4627   */\n      dup2\n        /* \"#utility.yul\":4604:4628   */\n      tag_353\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":4599:4602   */\n      dup3\n        /* \"#utility.yul\":4592:4629   */\n      mstore\n        /* \"#utility.yul\":4517:4635   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4641:5338   */\n    tag_40:\n        /* \"#utility.yul\":4916:4920   */\n      0x00\n        /* \"#utility.yul\":4954:4957   */\n      0x0100\n        /* \"#utility.yul\":4943:4952   */\n      dup3\n        /* \"#utility.yul\":4939:4958   */\n      add\n        /* \"#utility.yul\":4931:4958   */\n      swap1\n      pop\n        /* \"#utility.yul\":4968:5095   */\n      tag_441\n        /* \"#utility.yul\":5092:5093   */\n      0x00\n        /* \"#utility.yul\":5081:5090   */\n      dup4\n        /* \"#utility.yul\":5077:5094   */\n      add\n        /* \"#utility.yul\":5068:5074   */\n      dup7\n        /* \"#utility.yul\":4968:5095   */\n      tag_357\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":5105:5248   */\n      tag_442\n        /* \"#utility.yul\":5243:5246   */\n      0x80\n        /* \"#utility.yul\":5232:5241   */\n      dup4\n        /* \"#utility.yul\":5228:5247   */\n      add\n        /* \"#utility.yul\":5219:5225   */\n      dup6\n        /* \"#utility.yul\":5105:5248   */\n      tag_358\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":5258:5331   */\n      tag_443\n        /* \"#utility.yul\":5326:5329   */\n      0xe0\n        /* \"#utility.yul\":5315:5324   */\n      dup4\n        /* \"#utility.yul\":5311:5330   */\n      add\n        /* \"#utility.yul\":5302:5308   */\n      dup5\n        /* \"#utility.yul\":5258:5331   */\n      tag_359\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":4641:5338   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5344:5897   */\n    tag_45:\n        /* \"#utility.yul\":5521:5525   */\n      0x00\n        /* \"#utility.yul\":5559:5562   */\n      0x80\n        /* \"#utility.yul\":5548:5557   */\n      dup3\n        /* \"#utility.yul\":5544:5563   */\n      add\n        /* \"#utility.yul\":5536:5563   */\n      swap1\n      pop\n        /* \"#utility.yul\":5573:5644   */\n      tag_445\n        /* \"#utility.yul\":5641:5642   */\n      0x00\n        /* \"#utility.yul\":5630:5639   */\n      dup4\n        /* \"#utility.yul\":5626:5643   */\n      add\n        /* \"#utility.yul\":5617:5623   */\n      dup8\n        /* \"#utility.yul\":5573:5644   */\n      tag_359\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":5654:5726   */\n      tag_446\n        /* \"#utility.yul\":5722:5724   */\n      0x20\n        /* \"#utility.yul\":5711:5720   */\n      dup4\n        /* \"#utility.yul\":5707:5725   */\n      add\n        /* \"#utility.yul\":5698:5704   */\n      dup7\n        /* \"#utility.yul\":5654:5726   */\n      tag_359\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":5736:5808   */\n      tag_447\n        /* \"#utility.yul\":5804:5806   */\n      0x40\n        /* \"#utility.yul\":5793:5802   */\n      dup4\n        /* \"#utility.yul\":5789:5807   */\n      add\n        /* \"#utility.yul\":5780:5786   */\n      dup6\n        /* \"#utility.yul\":5736:5808   */\n      tag_359\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":5818:5890   */\n      tag_448\n        /* \"#utility.yul\":5886:5888   */\n      0x60\n        /* \"#utility.yul\":5875:5884   */\n      dup4\n        /* \"#utility.yul\":5871:5889   */\n      add\n        /* \"#utility.yul\":5862:5868   */\n      dup5\n        /* \"#utility.yul\":5818:5890   */\n      tag_359\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":5344:5897   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5903:6012   */\n    tag_360:\n        /* \"#utility.yul\":5984:6005   */\n      tag_450\n        /* \"#utility.yul\":5999:6004   */\n      dup2\n        /* \"#utility.yul\":5984:6005   */\n      tag_355\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":5979:5982   */\n      dup3\n        /* \"#utility.yul\":5972:6006   */\n      mstore\n        /* \"#utility.yul\":5903:6012   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6018:6559   */\n    tag_51:\n        /* \"#utility.yul\":6189:6193   */\n      0x00\n        /* \"#utility.yul\":6227:6230   */\n      0x80\n        /* \"#utility.yul\":6216:6225   */\n      dup3\n        /* \"#utility.yul\":6212:6231   */\n      add\n        /* \"#utility.yul\":6204:6231   */\n      swap1\n      pop\n        /* \"#utility.yul\":6241:6306   */\n      tag_452\n        /* \"#utility.yul\":6303:6304   */\n      0x00\n        /* \"#utility.yul\":6292:6301   */\n      dup4\n        /* \"#utility.yul\":6288:6305   */\n      add\n        /* \"#utility.yul\":6279:6285   */\n      dup8\n        /* \"#utility.yul\":6241:6306   */\n      tag_360\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":6316:6388   */\n      tag_453\n        /* \"#utility.yul\":6384:6386   */\n      0x20\n        /* \"#utility.yul\":6373:6382   */\n      dup4\n        /* \"#utility.yul\":6369:6387   */\n      add\n        /* \"#utility.yul\":6360:6366   */\n      dup7\n        /* \"#utility.yul\":6316:6388   */\n      tag_359\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":6398:6470   */\n      tag_454\n        /* \"#utility.yul\":6466:6468   */\n      0x40\n        /* \"#utility.yul\":6455:6464   */\n      dup4\n        /* \"#utility.yul\":6451:6469   */\n      add\n        /* \"#utility.yul\":6442:6448   */\n      dup6\n        /* \"#utility.yul\":6398:6470   */\n      tag_359\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":6480:6552   */\n      tag_455\n        /* \"#utility.yul\":6548:6550   */\n      0x60\n        /* \"#utility.yul\":6537:6546   */\n      dup4\n        /* \"#utility.yul\":6533:6551   */\n      add\n        /* \"#utility.yul\":6524:6530   */\n      dup5\n        /* \"#utility.yul\":6480:6552   */\n      tag_359\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":6018:6559   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6565:6677   */\n    tag_361:\n        /* \"#utility.yul\":6648:6670   */\n      tag_457\n        /* \"#utility.yul\":6664:6669   */\n      dup2\n        /* \"#utility.yul\":6648:6670   */\n      tag_344\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":6643:6646   */\n      dup3\n        /* \"#utility.yul\":6636:6671   */\n      mstore\n        /* \"#utility.yul\":6565:6677   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6683:7216   */\n    tag_65:\n        /* \"#utility.yul\":6850:6854   */\n      0x00\n        /* \"#utility.yul\":6888:6891   */\n      0x80\n        /* \"#utility.yul\":6877:6886   */\n      dup3\n        /* \"#utility.yul\":6873:6892   */\n      add\n        /* \"#utility.yul\":6865:6892   */\n      swap1\n      pop\n        /* \"#utility.yul\":6902:6969   */\n      tag_459\n        /* \"#utility.yul\":6966:6967   */\n      0x00\n        /* \"#utility.yul\":6955:6964   */\n      dup4\n        /* \"#utility.yul\":6951:6968   */\n      add\n        /* \"#utility.yul\":6942:6948   */\n      dup8\n        /* \"#utility.yul\":6902:6969   */\n      tag_361\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":6979:7051   */\n      tag_460\n        /* \"#utility.yul\":7047:7049   */\n      0x20\n        /* \"#utility.yul\":7036:7045   */\n      dup4\n        /* \"#utility.yul\":7032:7050   */\n      add\n        /* \"#utility.yul\":7023:7029   */\n      dup7\n        /* \"#utility.yul\":6979:7051   */\n      tag_359\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":7061:7133   */\n      tag_461\n        /* \"#utility.yul\":7129:7131   */\n      0x40\n        /* \"#utility.yul\":7118:7127   */\n      dup4\n        /* \"#utility.yul\":7114:7132   */\n      add\n        /* \"#utility.yul\":7105:7111   */\n      dup6\n        /* \"#utility.yul\":7061:7133   */\n      tag_359\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":7143:7209   */\n      tag_462\n        /* \"#utility.yul\":7205:7207   */\n      0x60\n        /* \"#utility.yul\":7194:7203   */\n      dup4\n        /* \"#utility.yul\":7190:7208   */\n      add\n        /* \"#utility.yul\":7181:7187   */\n      dup5\n        /* \"#utility.yul\":7143:7209   */\n      tag_360\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":6683:7216   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7222:7664   */\n    tag_71:\n        /* \"#utility.yul\":7371:7375   */\n      0x00\n        /* \"#utility.yul\":7409:7411   */\n      0x60\n        /* \"#utility.yul\":7398:7407   */\n      dup3\n        /* \"#utility.yul\":7394:7412   */\n      add\n        /* \"#utility.yul\":7386:7412   */\n      swap1\n      pop\n        /* \"#utility.yul\":7422:7493   */\n      tag_464\n        /* \"#utility.yul\":7490:7491   */\n      0x00\n        /* \"#utility.yul\":7479:7488   */\n      dup4\n        /* \"#utility.yul\":7475:7492   */\n      add\n        /* \"#utility.yul\":7466:7472   */\n      dup7\n        /* \"#utility.yul\":7422:7493   */\n      tag_359\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":7503:7575   */\n      tag_465\n        /* \"#utility.yul\":7571:7573   */\n      0x20\n        /* \"#utility.yul\":7560:7569   */\n      dup4\n        /* \"#utility.yul\":7556:7574   */\n      add\n        /* \"#utility.yul\":7547:7553   */\n      dup6\n        /* \"#utility.yul\":7503:7575   */\n      tag_359\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":7585:7657   */\n      tag_466\n        /* \"#utility.yul\":7653:7655   */\n      0x40\n        /* \"#utility.yul\":7642:7651   */\n      dup4\n        /* \"#utility.yul\":7638:7656   */\n      add\n        /* \"#utility.yul\":7629:7635   */\n      dup5\n        /* \"#utility.yul\":7585:7657   */\n      tag_359\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":7222:7664   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7670:7792   */\n    tag_362:\n        /* \"#utility.yul\":7743:7767   */\n      tag_468\n        /* \"#utility.yul\":7761:7766   */\n      dup2\n        /* \"#utility.yul\":7743:7767   */\n      tag_353\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":7736:7741   */\n      dup2\n        /* \"#utility.yul\":7733:7768   */\n      eq\n        /* \"#utility.yul\":7723:7786   */\n      tag_469\n      jumpi\n        /* \"#utility.yul\":7782:7783   */\n      0x00\n        /* \"#utility.yul\":7779:7780   */\n      dup1\n        /* \"#utility.yul\":7772:7784   */\n      revert\n        /* \"#utility.yul\":7723:7786   */\n    tag_469:\n        /* \"#utility.yul\":7670:7792   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7798:7937   */\n    tag_363:\n        /* \"#utility.yul\":7844:7849   */\n      0x00\n        /* \"#utility.yul\":7882:7888   */\n      dup2\n        /* \"#utility.yul\":7869:7889   */\n      calldataload\n        /* \"#utility.yul\":7860:7889   */\n      swap1\n      pop\n        /* \"#utility.yul\":7898:7931   */\n      tag_471\n        /* \"#utility.yul\":7925:7930   */\n      dup2\n        /* \"#utility.yul\":7898:7931   */\n      tag_362\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":7798:7937   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7943:8562   */\n    tag_89:\n        /* \"#utility.yul\":8020:8026   */\n      0x00\n        /* \"#utility.yul\":8028:8034   */\n      dup1\n        /* \"#utility.yul\":8036:8042   */\n      0x00\n        /* \"#utility.yul\":8085:8087   */\n      0x60\n        /* \"#utility.yul\":8073:8082   */\n      dup5\n        /* \"#utility.yul\":8064:8071   */\n      dup7\n        /* \"#utility.yul\":8060:8083   */\n      sub\n        /* \"#utility.yul\":8056:8088   */\n      slt\n        /* \"#utility.yul\":8053:8172   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":8091:8170   */\n      tag_474\n      tag_342\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":8053:8172   */\n    tag_473:\n        /* \"#utility.yul\":8211:8212   */\n      0x00\n        /* \"#utility.yul\":8236:8289   */\n      tag_475\n        /* \"#utility.yul\":8281:8288   */\n      dup7\n        /* \"#utility.yul\":8272:8278   */\n      dup3\n        /* \"#utility.yul\":8261:8270   */\n      dup8\n        /* \"#utility.yul\":8257:8279   */\n      add\n        /* \"#utility.yul\":8236:8289   */\n      tag_363\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":8226:8289   */\n      swap4\n      pop\n        /* \"#utility.yul\":8182:8299   */\n      pop\n        /* \"#utility.yul\":8338:8340   */\n      0x20\n        /* \"#utility.yul\":8364:8417   */\n      tag_476\n        /* \"#utility.yul\":8409:8416   */\n      dup7\n        /* \"#utility.yul\":8400:8406   */\n      dup3\n        /* \"#utility.yul\":8389:8398   */\n      dup8\n        /* \"#utility.yul\":8385:8407   */\n      add\n        /* \"#utility.yul\":8364:8417   */\n      tag_363\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":8354:8417   */\n      swap3\n      pop\n        /* \"#utility.yul\":8309:8427   */\n      pop\n        /* \"#utility.yul\":8466:8468   */\n      0x40\n        /* \"#utility.yul\":8492:8545   */\n      tag_477\n        /* \"#utility.yul\":8537:8544   */\n      dup7\n        /* \"#utility.yul\":8528:8534   */\n      dup3\n        /* \"#utility.yul\":8517:8526   */\n      dup8\n        /* \"#utility.yul\":8513:8535   */\n      add\n        /* \"#utility.yul\":8492:8545   */\n      tag_363\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":8482:8545   */\n      swap2\n      pop\n        /* \"#utility.yul\":8437:8555   */\n      pop\n        /* \"#utility.yul\":7943:8562   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8568:8790   */\n    tag_95:\n        /* \"#utility.yul\":8661:8665   */\n      0x00\n        /* \"#utility.yul\":8699:8701   */\n      0x20\n        /* \"#utility.yul\":8688:8697   */\n      dup3\n        /* \"#utility.yul\":8684:8702   */\n      add\n        /* \"#utility.yul\":8676:8702   */\n      swap1\n      pop\n        /* \"#utility.yul\":8712:8783   */\n      tag_479\n        /* \"#utility.yul\":8780:8781   */\n      0x00\n        /* \"#utility.yul\":8769:8778   */\n      dup4\n        /* \"#utility.yul\":8765:8782   */\n      add\n        /* \"#utility.yul\":8756:8762   */\n      dup5\n        /* \"#utility.yul\":8712:8783   */\n      tag_359\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":8568:8790   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8796:8913   */\n    tag_364:\n        /* \"#utility.yul\":8905:8906   */\n      0x00\n        /* \"#utility.yul\":8902:8903   */\n      dup1\n        /* \"#utility.yul\":8895:8907   */\n      revert\n        /* \"#utility.yul\":8919:9036   */\n    tag_365:\n        /* \"#utility.yul\":9028:9029   */\n      0x00\n        /* \"#utility.yul\":9025:9026   */\n      dup1\n        /* \"#utility.yul\":9018:9030   */\n      revert\n        /* \"#utility.yul\":9042:9159   */\n    tag_366:\n        /* \"#utility.yul\":9151:9152   */\n      0x00\n        /* \"#utility.yul\":9148:9149   */\n      dup1\n        /* \"#utility.yul\":9141:9153   */\n      revert\n        /* \"#utility.yul\":9179:9732   */\n    tag_367:\n        /* \"#utility.yul\":9237:9245   */\n      0x00\n        /* \"#utility.yul\":9247:9253   */\n      dup1\n        /* \"#utility.yul\":9297:9300   */\n      dup4\n        /* \"#utility.yul\":9290:9294   */\n      0x1f\n        /* \"#utility.yul\":9282:9288   */\n      dup5\n        /* \"#utility.yul\":9278:9295   */\n      add\n        /* \"#utility.yul\":9274:9301   */\n      slt\n        /* \"#utility.yul\":9264:9386   */\n      tag_484\n      jumpi\n        /* \"#utility.yul\":9305:9384   */\n      tag_485\n      tag_364\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":9264:9386   */\n    tag_484:\n        /* \"#utility.yul\":9418:9424   */\n      dup3\n        /* \"#utility.yul\":9405:9425   */\n      calldataload\n        /* \"#utility.yul\":9395:9425   */\n      swap1\n      pop\n        /* \"#utility.yul\":9448:9466   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9440:9446   */\n      dup2\n        /* \"#utility.yul\":9437:9467   */\n      gt\n        /* \"#utility.yul\":9434:9551   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":9470:9549   */\n      tag_487\n      tag_365\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":9434:9551   */\n    tag_486:\n        /* \"#utility.yul\":9584:9588   */\n      0x20\n        /* \"#utility.yul\":9576:9582   */\n      dup4\n        /* \"#utility.yul\":9572:9589   */\n      add\n        /* \"#utility.yul\":9560:9589   */\n      swap2\n      pop\n        /* \"#utility.yul\":9638:9641   */\n      dup4\n        /* \"#utility.yul\":9630:9634   */\n      0x01\n        /* \"#utility.yul\":9622:9628   */\n      dup3\n        /* \"#utility.yul\":9618:9635   */\n      mul\n        /* \"#utility.yul\":9608:9616   */\n      dup4\n        /* \"#utility.yul\":9604:9636   */\n      add\n        /* \"#utility.yul\":9601:9642   */\n      gt\n        /* \"#utility.yul\":9598:9726   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":9645:9724   */\n      tag_489\n      tag_366\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":9598:9726   */\n    tag_488:\n        /* \"#utility.yul\":9179:9732   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9738:10412   */\n    tag_99:\n        /* \"#utility.yul\":9818:9824   */\n      0x00\n        /* \"#utility.yul\":9826:9832   */\n      dup1\n        /* \"#utility.yul\":9834:9840   */\n      0x00\n        /* \"#utility.yul\":9883:9885   */\n      0x40\n        /* \"#utility.yul\":9871:9880   */\n      dup5\n        /* \"#utility.yul\":9862:9869   */\n      dup7\n        /* \"#utility.yul\":9858:9881   */\n      sub\n        /* \"#utility.yul\":9854:9886   */\n      slt\n        /* \"#utility.yul\":9851:9970   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":9889:9968   */\n      tag_492\n      tag_342\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":9851:9970   */\n    tag_491:\n        /* \"#utility.yul\":10037:10038   */\n      0x00\n        /* \"#utility.yul\":10026:10035   */\n      dup5\n        /* \"#utility.yul\":10022:10039   */\n      add\n        /* \"#utility.yul\":10009:10040   */\n      calldataload\n        /* \"#utility.yul\":10067:10085   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10059:10065   */\n      dup2\n        /* \"#utility.yul\":10056:10086   */\n      gt\n        /* \"#utility.yul\":10053:10170   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":10089:10168   */\n      tag_494\n      tag_343\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":10053:10170   */\n    tag_493:\n        /* \"#utility.yul\":10202:10267   */\n      tag_495\n        /* \"#utility.yul\":10259:10266   */\n      dup7\n        /* \"#utility.yul\":10250:10256   */\n      dup3\n        /* \"#utility.yul\":10239:10248   */\n      dup8\n        /* \"#utility.yul\":10235:10257   */\n      add\n        /* \"#utility.yul\":10202:10267   */\n      tag_367\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":10184:10267   */\n      swap4\n      pop\n      swap4\n      pop\n        /* \"#utility.yul\":9980:10277   */\n      pop\n        /* \"#utility.yul\":10316:10318   */\n      0x20\n        /* \"#utility.yul\":10342:10395   */\n      tag_496\n        /* \"#utility.yul\":10387:10394   */\n      dup7\n        /* \"#utility.yul\":10378:10384   */\n      dup3\n        /* \"#utility.yul\":10367:10376   */\n      dup8\n        /* \"#utility.yul\":10363:10385   */\n      add\n        /* \"#utility.yul\":10342:10395   */\n      tag_351\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":10332:10395   */\n      swap2\n      pop\n        /* \"#utility.yul\":10287:10405   */\n      pop\n        /* \"#utility.yul\":9738:10412   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":10418:10587   */\n    tag_368:\n        /* \"#utility.yul\":10502:10513   */\n      0x00\n        /* \"#utility.yul\":10536:10542   */\n      dup3\n        /* \"#utility.yul\":10531:10534   */\n      dup3\n        /* \"#utility.yul\":10524:10543   */\n      mstore\n        /* \"#utility.yul\":10576:10580   */\n      0x20\n        /* \"#utility.yul\":10571:10574   */\n      dup3\n        /* \"#utility.yul\":10567:10581   */\n      add\n        /* \"#utility.yul\":10552:10581   */\n      swap1\n      pop\n        /* \"#utility.yul\":10418:10587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10593:10760   */\n    tag_369:\n        /* \"#utility.yul\":10733:10752   */\n      0x4465706f73697420746f6f20736d616c6c000000000000000000000000000000\n        /* \"#utility.yul\":10729:10730   */\n      0x00\n        /* \"#utility.yul\":10721:10727   */\n      dup3\n        /* \"#utility.yul\":10717:10731   */\n      add\n        /* \"#utility.yul\":10710:10753   */\n      mstore\n        /* \"#utility.yul\":10593:10760   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10766:11132   */\n    tag_370:\n        /* \"#utility.yul\":10908:10911   */\n      0x00\n        /* \"#utility.yul\":10929:10996   */\n      tag_500\n        /* \"#utility.yul\":10993:10995   */\n      0x11\n        /* \"#utility.yul\":10988:10991   */\n      dup4\n        /* \"#utility.yul\":10929:10996   */\n      tag_368\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":10922:10996   */\n      swap2\n      pop\n        /* \"#utility.yul\":11005:11098   */\n      tag_501\n        /* \"#utility.yul\":11094:11097   */\n      dup3\n        /* \"#utility.yul\":11005:11098   */\n      tag_369\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":11123:11125   */\n      0x20\n        /* \"#utility.yul\":11118:11121   */\n      dup3\n        /* \"#utility.yul\":11114:11126   */\n      add\n        /* \"#utility.yul\":11107:11126   */\n      swap1\n      pop\n        /* \"#utility.yul\":10766:11132   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11138:11557   */\n    tag_122:\n        /* \"#utility.yul\":11304:11308   */\n      0x00\n        /* \"#utility.yul\":11342:11344   */\n      0x20\n        /* \"#utility.yul\":11331:11340   */\n      dup3\n        /* \"#utility.yul\":11327:11345   */\n      add\n        /* \"#utility.yul\":11319:11345   */\n      swap1\n      pop\n        /* \"#utility.yul\":11391:11400   */\n      dup2\n        /* \"#utility.yul\":11385:11389   */\n      dup2\n        /* \"#utility.yul\":11381:11401   */\n      sub\n        /* \"#utility.yul\":11377:11378   */\n      0x00\n        /* \"#utility.yul\":11366:11375   */\n      dup4\n        /* \"#utility.yul\":11362:11379   */\n      add\n        /* \"#utility.yul\":11355:11402   */\n      mstore\n        /* \"#utility.yul\":11419:11550   */\n      tag_503\n        /* \"#utility.yul\":11545:11549   */\n      dup2\n        /* \"#utility.yul\":11419:11550   */\n      tag_370\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":11411:11550   */\n      swap1\n      pop\n        /* \"#utility.yul\":11138:11557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11563:11731   */\n    tag_371:\n        /* \"#utility.yul\":11703:11723   */\n      0x496e76616c6964207269736b2073636f72650000000000000000000000000000\n        /* \"#utility.yul\":11699:11700   */\n      0x00\n        /* \"#utility.yul\":11691:11697   */\n      dup3\n        /* \"#utility.yul\":11687:11701   */\n      add\n        /* \"#utility.yul\":11680:11724   */\n      mstore\n        /* \"#utility.yul\":11563:11731   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11737:12103   */\n    tag_372:\n        /* \"#utility.yul\":11879:11882   */\n      0x00\n        /* \"#utility.yul\":11900:11967   */\n      tag_506\n        /* \"#utility.yul\":11964:11966   */\n      0x12\n        /* \"#utility.yul\":11959:11962   */\n      dup4\n        /* \"#utility.yul\":11900:11967   */\n      tag_368\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":11893:11967   */\n      swap2\n      pop\n        /* \"#utility.yul\":11976:12069   */\n      tag_507\n        /* \"#utility.yul\":12065:12068   */\n      dup3\n        /* \"#utility.yul\":11976:12069   */\n      tag_371\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":12094:12096   */\n      0x20\n        /* \"#utility.yul\":12089:12092   */\n      dup3\n        /* \"#utility.yul\":12085:12097   */\n      add\n        /* \"#utility.yul\":12078:12097   */\n      swap1\n      pop\n        /* \"#utility.yul\":11737:12103   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12109:12528   */\n    tag_125:\n        /* \"#utility.yul\":12275:12279   */\n      0x00\n        /* \"#utility.yul\":12313:12315   */\n      0x20\n        /* \"#utility.yul\":12302:12311   */\n      dup3\n        /* \"#utility.yul\":12298:12316   */\n      add\n        /* \"#utility.yul\":12290:12316   */\n      swap1\n      pop\n        /* \"#utility.yul\":12362:12371   */\n      dup2\n        /* \"#utility.yul\":12356:12360   */\n      dup2\n        /* \"#utility.yul\":12352:12372   */\n      sub\n        /* \"#utility.yul\":12348:12349   */\n      0x00\n        /* \"#utility.yul\":12337:12346   */\n      dup4\n        /* \"#utility.yul\":12333:12350   */\n      add\n        /* \"#utility.yul\":12326:12373   */\n      mstore\n        /* \"#utility.yul\":12390:12521   */\n      tag_509\n        /* \"#utility.yul\":12516:12520   */\n      dup2\n        /* \"#utility.yul\":12390:12521   */\n      tag_372\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":12382:12521   */\n      swap1\n      pop\n        /* \"#utility.yul\":12109:12528   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12534:12714   */\n    tag_373:\n        /* \"#utility.yul\":12582:12659   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12579:12580   */\n      0x00\n        /* \"#utility.yul\":12572:12660   */\n      mstore\n        /* \"#utility.yul\":12679:12683   */\n      0x11\n        /* \"#utility.yul\":12676:12677   */\n      0x04\n        /* \"#utility.yul\":12669:12684   */\n      mstore\n        /* \"#utility.yul\":12703:12707   */\n      0x24\n        /* \"#utility.yul\":12700:12701   */\n      0x00\n        /* \"#utility.yul\":12693:12708   */\n      revert\n        /* \"#utility.yul\":12720:12911   */\n    tag_127:\n        /* \"#utility.yul\":12760:12763   */\n      0x00\n        /* \"#utility.yul\":12779:12799   */\n      tag_512\n        /* \"#utility.yul\":12797:12798   */\n      dup3\n        /* \"#utility.yul\":12779:12799   */\n      tag_353\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":12774:12799   */\n      swap2\n      pop\n        /* \"#utility.yul\":12813:12833   */\n      tag_513\n        /* \"#utility.yul\":12831:12832   */\n      dup4\n        /* \"#utility.yul\":12813:12833   */\n      tag_353\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":12808:12833   */\n      swap3\n      pop\n        /* \"#utility.yul\":12856:12857   */\n      dup3\n        /* \"#utility.yul\":12853:12854   */\n      dup3\n        /* \"#utility.yul\":12849:12858   */\n      add\n        /* \"#utility.yul\":12842:12858   */\n      swap1\n      pop\n        /* \"#utility.yul\":12877:12880   */\n      dup1\n        /* \"#utility.yul\":12874:12875   */\n      dup3\n        /* \"#utility.yul\":12871:12881   */\n      gt\n        /* \"#utility.yul\":12868:12904   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":12884:12902   */\n      tag_515\n      tag_373\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":12868:12904   */\n    tag_514:\n        /* \"#utility.yul\":12720:12911   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12917:13241   */\n    tag_131:\n        /* \"#utility.yul\":13034:13038   */\n      0x00\n        /* \"#utility.yul\":13072:13074   */\n      0x40\n        /* \"#utility.yul\":13061:13070   */\n      dup3\n        /* \"#utility.yul\":13057:13075   */\n      add\n        /* \"#utility.yul\":13049:13075   */\n      swap1\n      pop\n        /* \"#utility.yul\":13085:13156   */\n      tag_517\n        /* \"#utility.yul\":13153:13154   */\n      0x00\n        /* \"#utility.yul\":13142:13151   */\n      dup4\n        /* \"#utility.yul\":13138:13155   */\n      add\n        /* \"#utility.yul\":13129:13135   */\n      dup6\n        /* \"#utility.yul\":13085:13156   */\n      tag_359\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":13166:13234   */\n      tag_518\n        /* \"#utility.yul\":13230:13232   */\n      0x20\n        /* \"#utility.yul\":13219:13228   */\n      dup4\n        /* \"#utility.yul\":13215:13233   */\n      add\n        /* \"#utility.yul\":13206:13212   */\n      dup5\n        /* \"#utility.yul\":13166:13234   */\n      tag_361\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":12917:13241   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13247:13421   */\n    tag_374:\n        /* \"#utility.yul\":13387:13413   */\n      0x4e6f206465706f7369747320746f20726562616c616e63650000000000000000\n        /* \"#utility.yul\":13383:13384   */\n      0x00\n        /* \"#utility.yul\":13375:13381   */\n      dup3\n        /* \"#utility.yul\":13371:13385   */\n      add\n        /* \"#utility.yul\":13364:13414   */\n      mstore\n        /* \"#utility.yul\":13247:13421   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13427:13793   */\n    tag_375:\n        /* \"#utility.yul\":13569:13572   */\n      0x00\n        /* \"#utility.yul\":13590:13657   */\n      tag_521\n        /* \"#utility.yul\":13654:13656   */\n      0x18\n        /* \"#utility.yul\":13649:13652   */\n      dup4\n        /* \"#utility.yul\":13590:13657   */\n      tag_368\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":13583:13657   */\n      swap2\n      pop\n        /* \"#utility.yul\":13666:13759   */\n      tag_522\n        /* \"#utility.yul\":13755:13758   */\n      dup3\n        /* \"#utility.yul\":13666:13759   */\n      tag_374\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":13784:13786   */\n      0x20\n        /* \"#utility.yul\":13779:13782   */\n      dup3\n        /* \"#utility.yul\":13775:13787   */\n      add\n        /* \"#utility.yul\":13768:13787   */\n      swap1\n      pop\n        /* \"#utility.yul\":13427:13793   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13799:14218   */\n    tag_161:\n        /* \"#utility.yul\":13965:13969   */\n      0x00\n        /* \"#utility.yul\":14003:14005   */\n      0x20\n        /* \"#utility.yul\":13992:14001   */\n      dup3\n        /* \"#utility.yul\":13988:14006   */\n      add\n        /* \"#utility.yul\":13980:14006   */\n      swap1\n      pop\n        /* \"#utility.yul\":14052:14061   */\n      dup2\n        /* \"#utility.yul\":14046:14050   */\n      dup2\n        /* \"#utility.yul\":14042:14062   */\n      sub\n        /* \"#utility.yul\":14038:14039   */\n      0x00\n        /* \"#utility.yul\":14027:14036   */\n      dup4\n        /* \"#utility.yul\":14023:14040   */\n      add\n        /* \"#utility.yul\":14016:14063   */\n      mstore\n        /* \"#utility.yul\":14080:14211   */\n      tag_524\n        /* \"#utility.yul\":14206:14210   */\n      dup2\n        /* \"#utility.yul\":14080:14211   */\n      tag_375\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":14072:14211   */\n      swap1\n      pop\n        /* \"#utility.yul\":13799:14218   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14224:14372   */\n    tag_376:\n        /* \"#utility.yul\":14326:14337   */\n      0x00\n        /* \"#utility.yul\":14363:14366   */\n      dup2\n        /* \"#utility.yul\":14348:14366   */\n      swap1\n      pop\n        /* \"#utility.yul\":14224:14372   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14378:14524   */\n    tag_377:\n        /* \"#utility.yul\":14475:14481   */\n      dup3\n        /* \"#utility.yul\":14470:14473   */\n      dup2\n        /* \"#utility.yul\":14465:14468   */\n      dup4\n        /* \"#utility.yul\":14452:14482   */\n      calldatacopy\n        /* \"#utility.yul\":14516:14517   */\n      0x00\n        /* \"#utility.yul\":14507:14513   */\n      dup4\n        /* \"#utility.yul\":14502:14505   */\n      dup4\n        /* \"#utility.yul\":14498:14514   */\n      add\n        /* \"#utility.yul\":14491:14518   */\n      mstore\n        /* \"#utility.yul\":14378:14524   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14554:14884   */\n    tag_378:\n        /* \"#utility.yul\":14670:14673   */\n      0x00\n        /* \"#utility.yul\":14691:14780   */\n      tag_528\n        /* \"#utility.yul\":14773:14779   */\n      dup4\n        /* \"#utility.yul\":14768:14771   */\n      dup6\n        /* \"#utility.yul\":14691:14780   */\n      tag_376\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":14684:14780   */\n      swap4\n      pop\n        /* \"#utility.yul\":14790:14846   */\n      tag_529\n        /* \"#utility.yul\":14839:14845   */\n      dup4\n        /* \"#utility.yul\":14834:14837   */\n      dup6\n        /* \"#utility.yul\":14827:14832   */\n      dup5\n        /* \"#utility.yul\":14790:14846   */\n      tag_377\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":14871:14877   */\n      dup3\n        /* \"#utility.yul\":14866:14869   */\n      dup5\n        /* \"#utility.yul\":14862:14878   */\n      add\n        /* \"#utility.yul\":14855:14878   */\n      swap1\n      pop\n        /* \"#utility.yul\":14554:14884   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14890:15185   */\n    tag_178:\n        /* \"#utility.yul\":15032:15035   */\n      0x00\n        /* \"#utility.yul\":15054:15159   */\n      tag_531\n        /* \"#utility.yul\":15155:15158   */\n      dup3\n        /* \"#utility.yul\":15146:15152   */\n      dup5\n        /* \"#utility.yul\":15138:15144   */\n      dup7\n        /* \"#utility.yul\":15054:15159   */\n      tag_378\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":15047:15159   */\n      swap2\n      pop\n        /* \"#utility.yul\":15176:15179   */\n      dup2\n        /* \"#utility.yul\":15169:15179   */\n      swap1\n      pop\n        /* \"#utility.yul\":14890:15185   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15191:15350   */\n    tag_379:\n        /* \"#utility.yul\":15331:15342   */\n      0x7472616465726a6f650000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15327:15328   */\n      0x00\n        /* \"#utility.yul\":15319:15325   */\n      dup3\n        /* \"#utility.yul\":15315:15329   */\n      add\n        /* \"#utility.yul\":15308:15343   */\n      mstore\n        /* \"#utility.yul\":15191:15350   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15356:15756   */\n    tag_380:\n        /* \"#utility.yul\":15516:15519   */\n      0x00\n        /* \"#utility.yul\":15537:15621   */\n      tag_534\n        /* \"#utility.yul\":15619:15620   */\n      0x09\n        /* \"#utility.yul\":15614:15617   */\n      dup4\n        /* \"#utility.yul\":15537:15621   */\n      tag_376\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":15530:15621   */\n      swap2\n      pop\n        /* \"#utility.yul\":15630:15723   */\n      tag_535\n        /* \"#utility.yul\":15719:15722   */\n      dup3\n        /* \"#utility.yul\":15630:15723   */\n      tag_379\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":15748:15749   */\n      0x09\n        /* \"#utility.yul\":15743:15746   */\n      dup3\n        /* \"#utility.yul\":15739:15750   */\n      add\n        /* \"#utility.yul\":15732:15750   */\n      swap1\n      pop\n        /* \"#utility.yul\":15356:15756   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15762:16143   */\n    tag_180:\n        /* \"#utility.yul\":15947:15950   */\n      0x00\n        /* \"#utility.yul\":15969:16117   */\n      tag_537\n        /* \"#utility.yul\":16113:16116   */\n      dup3\n        /* \"#utility.yul\":15969:16117   */\n      tag_380\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":15962:16117   */\n      swap2\n      pop\n        /* \"#utility.yul\":16134:16137   */\n      dup2\n        /* \"#utility.yul\":16127:16137   */\n      swap1\n      pop\n        /* \"#utility.yul\":15762:16143   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16149:16304   */\n    tag_381:\n        /* \"#utility.yul\":16289:16296   */\n      0x62656e7169000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16285:16286   */\n      0x00\n        /* \"#utility.yul\":16277:16283   */\n      dup3\n        /* \"#utility.yul\":16273:16287   */\n      add\n        /* \"#utility.yul\":16266:16297   */\n      mstore\n        /* \"#utility.yul\":16149:16304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16310:16710   */\n    tag_382:\n        /* \"#utility.yul\":16470:16473   */\n      0x00\n        /* \"#utility.yul\":16491:16575   */\n      tag_540\n        /* \"#utility.yul\":16573:16574   */\n      0x05\n        /* \"#utility.yul\":16568:16571   */\n      dup4\n        /* \"#utility.yul\":16491:16575   */\n      tag_376\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":16484:16575   */\n      swap2\n      pop\n        /* \"#utility.yul\":16584:16677   */\n      tag_541\n        /* \"#utility.yul\":16673:16676   */\n      dup3\n        /* \"#utility.yul\":16584:16677   */\n      tag_381\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":16702:16703   */\n      0x05\n        /* \"#utility.yul\":16697:16700   */\n      dup3\n        /* \"#utility.yul\":16693:16704   */\n      add\n        /* \"#utility.yul\":16686:16704   */\n      swap1\n      pop\n        /* \"#utility.yul\":16310:16710   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16716:17097   */\n    tag_184:\n        /* \"#utility.yul\":16901:16904   */\n      0x00\n        /* \"#utility.yul\":16923:17071   */\n      tag_543\n        /* \"#utility.yul\":17067:17070   */\n      dup3\n        /* \"#utility.yul\":16923:17071   */\n      tag_382\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":16916:17071   */\n      swap2\n      pop\n        /* \"#utility.yul\":17088:17091   */\n      dup2\n        /* \"#utility.yul\":17081:17091   */\n      swap1\n      pop\n        /* \"#utility.yul\":16716:17097   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17103:17261   */\n    tag_383:\n        /* \"#utility.yul\":17243:17253   */\n      0x7969656c6479616b000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17239:17240   */\n      0x00\n        /* \"#utility.yul\":17231:17237   */\n      dup3\n        /* \"#utility.yul\":17227:17241   */\n      add\n        /* \"#utility.yul\":17220:17254   */\n      mstore\n        /* \"#utility.yul\":17103:17261   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17267:17667   */\n    tag_384:\n        /* \"#utility.yul\":17427:17430   */\n      0x00\n        /* \"#utility.yul\":17448:17532   */\n      tag_546\n        /* \"#utility.yul\":17530:17531   */\n      0x08\n        /* \"#utility.yul\":17525:17528   */\n      dup4\n        /* \"#utility.yul\":17448:17532   */\n      tag_376\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":17441:17532   */\n      swap2\n      pop\n        /* \"#utility.yul\":17541:17634   */\n      tag_547\n        /* \"#utility.yul\":17630:17633   */\n      dup3\n        /* \"#utility.yul\":17541:17634   */\n      tag_383\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":17659:17660   */\n      0x08\n        /* \"#utility.yul\":17654:17657   */\n      dup3\n        /* \"#utility.yul\":17650:17661   */\n      add\n        /* \"#utility.yul\":17643:17661   */\n      swap1\n      pop\n        /* \"#utility.yul\":17267:17667   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17673:18054   */\n    tag_188:\n        /* \"#utility.yul\":17858:17861   */\n      0x00\n        /* \"#utility.yul\":17880:18028   */\n      tag_549\n        /* \"#utility.yul\":18024:18027   */\n      dup3\n        /* \"#utility.yul\":17880:18028   */\n      tag_384\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":17873:18028   */\n      swap2\n      pop\n        /* \"#utility.yul\":18045:18048   */\n      dup2\n        /* \"#utility.yul\":18038:18048   */\n      swap1\n      pop\n        /* \"#utility.yul\":17673:18054   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18060:18226   */\n    tag_385:\n        /* \"#utility.yul\":18200:18218   */\n      0x496e76616c69642070726f746f636f6c00000000000000000000000000000000\n        /* \"#utility.yul\":18196:18197   */\n      0x00\n        /* \"#utility.yul\":18188:18194   */\n      dup3\n        /* \"#utility.yul\":18184:18198   */\n      add\n        /* \"#utility.yul\":18177:18219   */\n      mstore\n        /* \"#utility.yul\":18060:18226   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18232:18598   */\n    tag_386:\n        /* \"#utility.yul\":18374:18377   */\n      0x00\n        /* \"#utility.yul\":18395:18462   */\n      tag_552\n        /* \"#utility.yul\":18459:18461   */\n      0x10\n        /* \"#utility.yul\":18454:18457   */\n      dup4\n        /* \"#utility.yul\":18395:18462   */\n      tag_368\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":18388:18462   */\n      swap2\n      pop\n        /* \"#utility.yul\":18471:18564   */\n      tag_553\n        /* \"#utility.yul\":18560:18563   */\n      dup3\n        /* \"#utility.yul\":18471:18564   */\n      tag_385\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":18589:18591   */\n      0x20\n        /* \"#utility.yul\":18584:18587   */\n      dup3\n        /* \"#utility.yul\":18580:18592   */\n      add\n        /* \"#utility.yul\":18573:18592   */\n      swap1\n      pop\n        /* \"#utility.yul\":18232:18598   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18604:19023   */\n    tag_192:\n        /* \"#utility.yul\":18770:18774   */\n      0x00\n        /* \"#utility.yul\":18808:18810   */\n      0x20\n        /* \"#utility.yul\":18797:18806   */\n      dup3\n        /* \"#utility.yul\":18793:18811   */\n      add\n        /* \"#utility.yul\":18785:18811   */\n      swap1\n      pop\n        /* \"#utility.yul\":18857:18866   */\n      dup2\n        /* \"#utility.yul\":18851:18855   */\n      dup2\n        /* \"#utility.yul\":18847:18867   */\n      sub\n        /* \"#utility.yul\":18843:18844   */\n      0x00\n        /* \"#utility.yul\":18832:18841   */\n      dup4\n        /* \"#utility.yul\":18828:18845   */\n      add\n        /* \"#utility.yul\":18821:18868   */\n      mstore\n        /* \"#utility.yul\":18885:19016   */\n      tag_555\n        /* \"#utility.yul\":19011:19015   */\n      dup2\n        /* \"#utility.yul\":18885:19016   */\n      tag_386\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":18877:19016   */\n      swap1\n      pop\n        /* \"#utility.yul\":18604:19023   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19029:19131   */\n    tag_387:\n        /* \"#utility.yul\":19070:19076   */\n      0x00\n        /* \"#utility.yul\":19121:19123   */\n      0x1f\n        /* \"#utility.yul\":19117:19124   */\n      not\n        /* \"#utility.yul\":19112:19114   */\n      0x1f\n        /* \"#utility.yul\":19105:19110   */\n      dup4\n        /* \"#utility.yul\":19101:19115   */\n      add\n        /* \"#utility.yul\":19097:19125   */\n      and\n        /* \"#utility.yul\":19087:19125   */\n      swap1\n      pop\n        /* \"#utility.yul\":19029:19131   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19161:19478   */\n    tag_388:\n        /* \"#utility.yul\":19259:19262   */\n      0x00\n        /* \"#utility.yul\":19280:19351   */\n      tag_558\n        /* \"#utility.yul\":19344:19350   */\n      dup4\n        /* \"#utility.yul\":19339:19342   */\n      dup6\n        /* \"#utility.yul\":19280:19351   */\n      tag_368\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":19273:19351   */\n      swap4\n      pop\n        /* \"#utility.yul\":19361:19417   */\n      tag_559\n        /* \"#utility.yul\":19410:19416   */\n      dup4\n        /* \"#utility.yul\":19405:19408   */\n      dup6\n        /* \"#utility.yul\":19398:19403   */\n      dup5\n        /* \"#utility.yul\":19361:19417   */\n      tag_377\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":19442:19471   */\n      tag_560\n        /* \"#utility.yul\":19464:19470   */\n      dup4\n        /* \"#utility.yul\":19442:19471   */\n      tag_387\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":19437:19440   */\n      dup5\n        /* \"#utility.yul\":19433:19472   */\n      add\n        /* \"#utility.yul\":19426:19472   */\n      swap1\n      pop\n        /* \"#utility.yul\":19161:19478   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19484:19927   */\n    tag_194:\n        /* \"#utility.yul\":19635:19639   */\n      0x00\n        /* \"#utility.yul\":19673:19675   */\n      0x40\n        /* \"#utility.yul\":19662:19671   */\n      dup3\n        /* \"#utility.yul\":19658:19676   */\n      add\n        /* \"#utility.yul\":19650:19676   */\n      swap1\n      pop\n        /* \"#utility.yul\":19722:19731   */\n      dup2\n        /* \"#utility.yul\":19716:19720   */\n      dup2\n        /* \"#utility.yul\":19712:19732   */\n      sub\n        /* \"#utility.yul\":19708:19709   */\n      0x00\n        /* \"#utility.yul\":19697:19706   */\n      dup4\n        /* \"#utility.yul\":19693:19710   */\n      add\n        /* \"#utility.yul\":19686:19733   */\n      mstore\n        /* \"#utility.yul\":19750:19838   */\n      tag_562\n        /* \"#utility.yul\":19833:19837   */\n      dup2\n        /* \"#utility.yul\":19824:19830   */\n      dup6\n        /* \"#utility.yul\":19816:19822   */\n      dup8\n        /* \"#utility.yul\":19750:19838   */\n      tag_388\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":19742:19838   */\n      swap1\n      pop\n        /* \"#utility.yul\":19848:19920   */\n      tag_563\n        /* \"#utility.yul\":19916:19918   */\n      0x20\n        /* \"#utility.yul\":19905:19914   */\n      dup4\n        /* \"#utility.yul\":19901:19919   */\n      add\n        /* \"#utility.yul\":19892:19898   */\n      dup5\n        /* \"#utility.yul\":19848:19920   */\n      tag_349\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":19484:19927   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19933:20343   */\n    tag_228:\n        /* \"#utility.yul\":19973:19980   */\n      0x00\n        /* \"#utility.yul\":19996:20016   */\n      tag_565\n        /* \"#utility.yul\":20014:20015   */\n      dup3\n        /* \"#utility.yul\":19996:20016   */\n      tag_353\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":19991:20016   */\n      swap2\n      pop\n        /* \"#utility.yul\":20030:20050   */\n      tag_566\n        /* \"#utility.yul\":20048:20049   */\n      dup4\n        /* \"#utility.yul\":20030:20050   */\n      tag_353\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":20025:20050   */\n      swap3\n      pop\n        /* \"#utility.yul\":20085:20086   */\n      dup3\n        /* \"#utility.yul\":20082:20083   */\n      dup3\n        /* \"#utility.yul\":20078:20087   */\n      mul\n        /* \"#utility.yul\":20107:20137   */\n      tag_567\n        /* \"#utility.yul\":20125:20136   */\n      dup2\n        /* \"#utility.yul\":20107:20137   */\n      tag_353\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":20096:20137   */\n      swap2\n      pop\n        /* \"#utility.yul\":20286:20287   */\n      dup3\n        /* \"#utility.yul\":20277:20284   */\n      dup3\n        /* \"#utility.yul\":20273:20288   */\n      div\n        /* \"#utility.yul\":20270:20271   */\n      dup5\n        /* \"#utility.yul\":20267:20289   */\n      eq\n        /* \"#utility.yul\":20247:20248   */\n      dup4\n        /* \"#utility.yul\":20240:20249   */\n      iszero\n        /* \"#utility.yul\":20220:20303   */\n      or\n        /* \"#utility.yul\":20197:20336   */\n      tag_568\n      jumpi\n        /* \"#utility.yul\":20316:20334   */\n      tag_569\n      tag_373\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":20197:20336   */\n    tag_568:\n        /* \"#utility.yul\":19981:20343   */\n      pop\n        /* \"#utility.yul\":19933:20343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20349:20529   */\n    tag_389:\n        /* \"#utility.yul\":20397:20474   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20394:20395   */\n      0x00\n        /* \"#utility.yul\":20387:20475   */\n      mstore\n        /* \"#utility.yul\":20494:20498   */\n      0x12\n        /* \"#utility.yul\":20491:20492   */\n      0x04\n        /* \"#utility.yul\":20484:20499   */\n      mstore\n        /* \"#utility.yul\":20518:20522   */\n      0x24\n        /* \"#utility.yul\":20515:20516   */\n      0x00\n        /* \"#utility.yul\":20508:20523   */\n      revert\n        /* \"#utility.yul\":20535:20720   */\n    tag_230:\n        /* \"#utility.yul\":20575:20576   */\n      0x00\n        /* \"#utility.yul\":20592:20612   */\n      tag_572\n        /* \"#utility.yul\":20610:20611   */\n      dup3\n        /* \"#utility.yul\":20592:20612   */\n      tag_353\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":20587:20612   */\n      swap2\n      pop\n        /* \"#utility.yul\":20626:20646   */\n      tag_573\n        /* \"#utility.yul\":20644:20645   */\n      dup4\n        /* \"#utility.yul\":20626:20646   */\n      tag_353\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":20621:20646   */\n      swap3\n      pop\n        /* \"#utility.yul\":20665:20666   */\n      dup3\n        /* \"#utility.yul\":20655:20690   */\n      tag_574\n      jumpi\n        /* \"#utility.yul\":20670:20688   */\n      tag_575\n      tag_389\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":20655:20690   */\n    tag_574:\n        /* \"#utility.yul\":20712:20713   */\n      dup3\n        /* \"#utility.yul\":20709:20710   */\n      dup3\n        /* \"#utility.yul\":20705:20714   */\n      div\n        /* \"#utility.yul\":20700:20714   */\n      swap1\n      pop\n        /* \"#utility.yul\":20535:20720   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20726:20920   */\n    tag_285:\n        /* \"#utility.yul\":20766:20770   */\n      0x00\n        /* \"#utility.yul\":20786:20806   */\n      tag_577\n        /* \"#utility.yul\":20804:20805   */\n      dup3\n        /* \"#utility.yul\":20786:20806   */\n      tag_353\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":20781:20806   */\n      swap2\n      pop\n        /* \"#utility.yul\":20820:20840   */\n      tag_578\n        /* \"#utility.yul\":20838:20839   */\n      dup4\n        /* \"#utility.yul\":20820:20840   */\n      tag_353\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":20815:20840   */\n      swap3\n      pop\n        /* \"#utility.yul\":20864:20865   */\n      dup3\n        /* \"#utility.yul\":20861:20862   */\n      dup3\n        /* \"#utility.yul\":20857:20866   */\n      sub\n        /* \"#utility.yul\":20849:20866   */\n      swap1\n      pop\n        /* \"#utility.yul\":20888:20889   */\n      dup2\n        /* \"#utility.yul\":20882:20886   */\n      dup2\n        /* \"#utility.yul\":20879:20890   */\n      gt\n        /* \"#utility.yul\":20876:20913   */\n      iszero\n      tag_579\n      jumpi\n        /* \"#utility.yul\":20893:20911   */\n      tag_580\n      tag_373\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":20876:20913   */\n    tag_579:\n        /* \"#utility.yul\":20726:20920   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20926:21002   */\n    tag_390:\n        /* \"#utility.yul\":20962:20969   */\n      0x00\n        /* \"#utility.yul\":20991:20996   */\n      dup2\n        /* \"#utility.yul\":20980:20996   */\n      swap1\n      pop\n        /* \"#utility.yul\":20926:21002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21008:21380   */\n    tag_300:\n        /* \"#utility.yul\":21047:21051   */\n      0x00\n        /* \"#utility.yul\":21067:21086   */\n      tag_583\n        /* \"#utility.yul\":21084:21085   */\n      dup3\n        /* \"#utility.yul\":21067:21086   */\n      tag_390\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":21062:21086   */\n      swap2\n      pop\n        /* \"#utility.yul\":21100:21119   */\n      tag_584\n        /* \"#utility.yul\":21117:21118   */\n      dup4\n        /* \"#utility.yul\":21100:21119   */\n      tag_390\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":21095:21119   */\n      swap3\n      pop\n        /* \"#utility.yul\":21143:21144   */\n      dup3\n        /* \"#utility.yul\":21140:21141   */\n      dup3\n        /* \"#utility.yul\":21136:21145   */\n      sub\n        /* \"#utility.yul\":21128:21145   */\n      swap1\n      pop\n        /* \"#utility.yul\":21337:21338   */\n      dup2\n        /* \"#utility.yul\":21331:21335   */\n      dup2\n        /* \"#utility.yul\":21327:21339   */\n      slt\n        /* \"#utility.yul\":21323:21324   */\n      0x00\n        /* \"#utility.yul\":21320:21321   */\n      dup5\n        /* \"#utility.yul\":21316:21325   */\n      slt\n        /* \"#utility.yul\":21312:21340   */\n      and\n        /* \"#utility.yul\":21295:21296   */\n      dup3\n        /* \"#utility.yul\":21289:21293   */\n      dup3\n        /* \"#utility.yul\":21285:21297   */\n      sgt\n        /* \"#utility.yul\":21280:21281   */\n      0x00\n        /* \"#utility.yul\":21277:21278   */\n      dup6\n        /* \"#utility.yul\":21273:21282   */\n      slt\n        /* \"#utility.yul\":21266:21283   */\n      iszero\n        /* \"#utility.yul\":21262:21298   */\n      and\n        /* \"#utility.yul\":21246:21350   */\n      or\n        /* \"#utility.yul\":21243:21373   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":21353:21371   */\n      tag_586\n      tag_373\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":21243:21373   */\n    tag_585:\n        /* \"#utility.yul\":21008:21380   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21386:21614   */\n    tag_305:\n        /* \"#utility.yul\":21421:21424   */\n      0x00\n        /* \"#utility.yul\":21444:21467   */\n      tag_588\n        /* \"#utility.yul\":21461:21466   */\n      dup3\n        /* \"#utility.yul\":21444:21467   */\n      tag_390\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":21435:21467   */\n      swap2\n      pop\n        /* \"#utility.yul\":21489:21555   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21482:21487   */\n      dup3\n        /* \"#utility.yul\":21479:21556   */\n      sub\n        /* \"#utility.yul\":21476:21579   */\n      tag_589\n      jumpi\n        /* \"#utility.yul\":21559:21577   */\n      tag_590\n      tag_373\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":21476:21579   */\n    tag_589:\n        /* \"#utility.yul\":21602:21607   */\n      dup2\n        /* \"#utility.yul\":21599:21600   */\n      0x00\n        /* \"#utility.yul\":21595:21608   */\n      sub\n        /* \"#utility.yul\":21588:21608   */\n      swap1\n      pop\n        /* \"#utility.yul\":21386:21614   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204a5c8aa158035cca3c72094780a69ffce4d89a1998c0e19f6f1a3562c247690164736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1012": {
									"entryPoint": null,
									"id": 1012,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_831": {
									"entryPoint": null,
									"id": 831,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 246,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:13",
										"nodeType": "YulBlock",
										"src": "0:590:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:13",
													"nodeType": "YulBlock",
													"src": "52:81:13",
													"statements": [
														{
															"nativeSrc": "62:65:13",
															"nodeType": "YulAssignment",
															"src": "62:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:13",
																		"nodeType": "YulLiteral",
																		"src": "84:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:13"
																},
																"nativeSrc": "73:54:13",
																"nodeType": "YulFunctionCall",
																"src": "73:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:13",
														"nodeType": "YulTypedName",
														"src": "34:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:13",
														"nodeType": "YulTypedName",
														"src": "44:7:13",
														"type": ""
													}
												],
												"src": "7:126:13"
											},
											{
												"body": {
													"nativeSrc": "184:51:13",
													"nodeType": "YulBlock",
													"src": "184:51:13",
													"statements": [
														{
															"nativeSrc": "194:35:13",
															"nodeType": "YulAssignment",
															"src": "194:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:13"
																},
																"nativeSrc": "205:24:13",
																"nodeType": "YulFunctionCall",
																"src": "205:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:13",
														"nodeType": "YulTypedName",
														"src": "166:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:13",
														"nodeType": "YulTypedName",
														"src": "176:7:13",
														"type": ""
													}
												],
												"src": "139:96:13"
											},
											{
												"body": {
													"nativeSrc": "306:53:13",
													"nodeType": "YulBlock",
													"src": "306:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:13"
																		},
																		"nativeSrc": "328:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:13"
																},
																"nativeSrc": "316:37:13",
																"nodeType": "YulFunctionCall",
																"src": "316:37:13"
															},
															"nativeSrc": "316:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:13",
														"nodeType": "YulTypedName",
														"src": "294:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:13",
														"nodeType": "YulTypedName",
														"src": "301:3:13",
														"type": ""
													}
												],
												"src": "241:118:13"
											},
											{
												"body": {
													"nativeSrc": "463:124:13",
													"nodeType": "YulBlock",
													"src": "463:124:13",
													"statements": [
														{
															"nativeSrc": "473:26:13",
															"nodeType": "YulAssignment",
															"src": "473:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:13",
																		"nodeType": "YulLiteral",
																		"src": "496:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:13"
																},
																"nativeSrc": "481:18:13",
																"nodeType": "YulFunctionCall",
																"src": "481:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:13",
																				"nodeType": "YulLiteral",
																				"src": "577:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:13"
																		},
																		"nativeSrc": "562:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:13"
																},
																"nativeSrc": "509:71:13",
																"nodeType": "YulFunctionCall",
																"src": "509:71:13"
															},
															"nativeSrc": "509:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:13",
														"nodeType": "YulTypedName",
														"src": "435:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:13",
														"nodeType": "YulTypedName",
														"src": "447:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:13",
														"nodeType": "YulTypedName",
														"src": "458:4:13",
														"type": ""
													}
												],
												"src": "365:222:13"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000085575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200007c9190620001fa565b60405180910390fd5b6200009681620000f660201b60201c565b506001808190555060405180608001604052806101f4815260200161032081526020016104b081526020014281525060045f820151815f015560208201518160010155604082015181600201556060820151816003015590505062000215565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620001e282620001b7565b9050919050565b620001f481620001d6565b82525050565b5f6020820190506200020f5f830184620001e9565b92915050565b6121d580620002235f395ff3fe60806040526004361061011d575f3560e01c80637d7c2a1c1161009f578063d076e8b411610063578063d076e8b4146103b7578063db2e21bc146103df578063e1e158a5146103f5578063e1f1c4a71461041f578063f2fde38b146104495761011d565b80637d7c2a1c146102f85780638ccbe9f51461030e5780638da5cb5b1461033b57806399e3228714610365578063c85b967d1461038d5761011d565b80632faff427116100e65780632faff42714610211578063324be9ef1461023b578063332d56d7146102655780634c0c87ff146102a4578063715018a6146102e25761011d565b8062349f3a14610121578063071a8ef51461013d5780631edb27e91461016757806322a16952146101a55780632ab8895f146101d2575b5f80fd5b61013b600480360381019061013691906117d0565b610471565b005b348015610148575f80fd5b506101516105ef565b60405161015e919061183a565b60405180910390f35b348015610172575f80fd5b5061018d6004803603810190610188919061187d565b610614565b60405161019c9392919061198b565b60405180910390f35b3480156101b0575f80fd5b506101b961074a565b6040516101c994939291906119c1565b60405180910390f35b3480156101dd575f80fd5b506101f860048036038101906101f3919061187d565b610773565b6040516102089493929190611a13565b60405180910390f35b34801561021c575f80fd5b506102256108e9565b604051610232919061183a565b60405180910390f35b348015610246575f80fd5b5061024f61090e565b60405161025c919061183a565b60405180910390f35b348015610270575f80fd5b5061028b6004803603810190610286919061187d565b610933565b60405161029b9493929190611a65565b60405180910390f35b3480156102af575f80fd5b506102ca60048036038101906102c5919061187d565b610977565b6040516102d993929190611aa8565b60405180910390f35b3480156102ed575f80fd5b506102f661099d565b005b348015610303575f80fd5b5061030c6109b0565b005b348015610319575f80fd5b50610322610b39565b60405161033294939291906119c1565b60405180910390f35b348015610346575f80fd5b5061034f610b56565b60405161035c919061183a565b60405180910390f35b348015610370575f80fd5b5061038b60048036038101906103869190611b07565b610b7d565b005b348015610398575f80fd5b506103a1610bec565b6040516103ae9190611b57565b60405180910390f35b3480156103c2575f80fd5b506103dd60048036038101906103d89190611bd1565b610bf2565b005b3480156103ea575f80fd5b506103f3610df4565b005b348015610400575f80fd5b50610409610fd3565b6040516104169190611b57565b60405180910390f35b34801561042a575f80fd5b50610433610fde565b6040516104409190611b57565b60405180910390f35b348015610454575f80fd5b5061046f600480360381019061046a919061187d565b610fe4565b005b610479611068565b662386f26fc100003410156104c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ba90611c88565b60405180910390fd5b60648160ff16111561050a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050190611cf0565b60405180910390fd5b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905081815f015f6101000a81548160ff021916908360ff16021790555034816001015f8282546105789190611d3b565b925050819055504281600201819055506105933334846110ae565b3373ffffffffffffffffffffffffffffffffffffffff167f0ffa6b713fe8ff42bd695a98451844fdf6abd6dd3999ab520f344f84aff7d2a034846040516105db929190611d6e565b60405180910390a2506105ec61128a565b50565b600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61061c61174b565b610624611774565b5f60025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060800160405290815f82015f9054906101000a900460ff1660ff1660ff1681526020016001820154815260200160028201548152602001600382015f9054906101000a900460ff161515151581525050925060035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060600160405290815f820154815260200160018201548152602001600282015481525050915081604001518260200151835f01516107379190611d3b565b6107419190611d3b565b90509193909250565b5f805f8060045f0154600460010154600460020154600460030154935093509350935090919293565b5f805f805f60025f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060800160405290815f82015f9054906101000a900460ff1660ff1660ff1681526020016001820154815260200160028201548152602001600382015f9054906101000a900460ff16151515158152505090505f60035f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060600160405290815f82015481526020016001820154815260200160028201548152505090505f826020015103610891575f805f80955095509550955050506108e2565b5f81604001518260200151835f01516108aa9190611d3b565b6108b49190611d3b565b90506108c381845f0151611293565b8096508197508298505050506108dc82878787856113aa565b96505050505b9193509193565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002602052805f5260405f205f91509050805f015f9054906101000a900460ff1690806001015490806002015490806003015f9054906101000a900460ff16905084565b6003602052805f5260405f205f91509050805f0154908060010154908060020154905083565b6109a561140a565b6109ae5f611491565b565b6109b8611068565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f816001015411610a3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3590611ddf565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f81600201548260010154835f0154610a979190611d3b565b610aa19190611d3b565b90505f805f610abf84875f015f9054906101000a900460ff16611293565b925092509250610ad23386858585611552565b4286600201819055503373ffffffffffffffffffffffffffffffffffffffff167f1427d1942829759938581ce754fd0f7f116bfb7a4b77f80f0cb32cd62c2138c785604051610b219190611b57565b60405180910390a2505050505050610b3761128a565b565b6004805f0154908060010154908060020154908060030154905084565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610b8561140a565b8260045f01819055508160046001018190555080600460020181905550426004600301819055507feb5e818d5254a980eae621ccdcf791eb702d2f526caf4d0833b622e27964d549838383604051610bdf93929190611aa8565b60405180910390a1505050565b6101f481565b610bfa61140a565b5f8383604051602001610c0e929190611e39565b604051602081830303815290604052805190602001209050604051602001610c3590611e9b565b604051602081830303815290604052805190602001208103610c96578160085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610db3565b604051602001610ca590611ef9565b604051602081830303815290604052805190602001208103610d06578160095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610db2565b604051602001610d1590611f57565b604051602081830303815290604052805190602001208103610d765781600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610db1565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da890611fb5565b60405180910390fd5b5b5b7f50df56c33b3bd3dac7a2db51a3f7c8bdaabf78a57ff1fab3a72992006a77e69e848484604051610de69392919061200f565b60405180910390a150505050565b610dfc611068565b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f80835f01541115610eaa57610e94835f015461166d565b81610e9f9190611d3b565b90505f835f01819055505b5f83600101541115610eda57610ec383600101546116b1565b81610ece9190611d3b565b90505f83600101819055505b5f83600201541115610f0a57610ef383600201546116f6565b81610efe9190611d3b565b90505f83600201819055505b5f82600101819055505f4790505f818311610f255782610f27565b815b90505f811115610fc4573373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610f74573d5f803e3d5ffd5b503373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d582604051610fbb9190611b57565b60405180910390a25b5050505050610fd161128a565b565b662386f26fc1000081565b61271081565b610fec61140a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361105c575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611053919061183a565b60405180910390fd5b61106581611491565b50565b6002600154036110a4576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b5f60035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f805f60218560ff161161113e57612710611b588761110d919061203f565b61111791906120ad565b9250612710610bb88761112a919061203f565b61113491906120ad565b91505f90506111fe565b60428560ff16116111a557612710610fa08761115a919061203f565b61116491906120ad565b9250612710610fa087611177919061203f565b61118191906120ad565b91506127106107d087611194919061203f565b61119e91906120ad565b90506111fd565b6127106107d0876111b6919061203f565b6111c091906120ad565b9250612710610bb8876111d3919061203f565b6111dd91906120ad565b9150612710611388876111f0919061203f565b6111fa91906120ad565b90505b5b82845f015f8282546112109190611d3b565b9250508190555081846001015f82825461122a9190611d3b565b9250508190555080846002015f8282546112449190611d3b565b925050819055505f83111561125d5761125c8361173b565b5b5f82111561126f5761126e8261173e565b5b5f8111156112815761128081611741565b5b50505050505050565b60018081905550565b5f805f60218460ff16116112e357612710611b58866112b2919061203f565b6112bc91906120ad565b9250612710610bb8866112cf919061203f565b6112d991906120ad565b91505f90506113a3565b60428460ff161161134a57612710610fa0866112ff919061203f565b61130991906120ad565b9250612710610fa08661131c919061203f565b61132691906120ad565b91506127106107d086611339919061203f565b61134391906120ad565b90506113a2565b6127106107d08661135b919061203f565b61136591906120ad565b9250612710610bb886611378919061203f565b61138291906120ad565b915061271061138886611395919061203f565b61139f91906120ad565b90505b5b9250925092565b5f8085875f0151116113ca57865f0151866113c591906120dd565b6113da565b85875f01516113d991906120dd565b5b90505f6127106101f4856113ee919061203f565b6113f891906120ad565b90508082119250505095945050505050565b611412611744565b73ffffffffffffffffffffffffffffffffffffffff16611430610b56565b73ffffffffffffffffffffffffffffffffffffffff161461148f57611453611744565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611486919061183a565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f845f0154846115629190612119565b90505f8560010154846115759190612119565b90505f8660020154846115889190612119565b90505f808412156115b8575f8461159e90612159565b90506115a98161166d565b826115b49190611d3b565b9150505b5f8312156115e5575f836115cb90612159565b90506115d6816116b1565b826115e19190611d3b565b9150505b5f821215611612575f826115f890612159565b9050611603816116f6565b8261160e9190611d3b565b9150505b5f841315611624576116238461173b565b5b5f831315611636576116358361173e565b5b5f8213156116485761164782611741565b5b86885f0181905550858860010181905550848860020181905550505050505050505050565b5f8061271061016d60045f015461168491906120ad565b6127106116919190611d3b565b8461169c919061203f565b6116a691906120ad565b905080915050919050565b5f8061271061016d6004600101546116c991906120ad565b6127106116d69190611d3b565b846116e1919061203f565b6116eb91906120ad565b905080915050919050565b5f8061271061016d60046002015461170e91906120ad565b61271061171b9190611d3b565b84611726919061203f565b61173091906120ad565b905080915050919050565b50565b50565b50565b5f33905090565b60405180608001604052805f60ff1681526020015f81526020015f81526020015f151581525090565b60405180606001604052805f81526020015f81526020015f81525090565b5f80fd5b5f80fd5b5f60ff82169050919050565b6117af8161179a565b81146117b9575f80fd5b50565b5f813590506117ca816117a6565b92915050565b5f602082840312156117e5576117e4611792565b5b5f6117f2848285016117bc565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611824826117fb565b9050919050565b6118348161181a565b82525050565b5f60208201905061184d5f83018461182b565b92915050565b61185c8161181a565b8114611866575f80fd5b50565b5f8135905061187781611853565b92915050565b5f6020828403121561189257611891611792565b5b5f61189f84828501611869565b91505092915050565b6118b18161179a565b82525050565b5f819050919050565b6118c9816118b7565b82525050565b5f8115159050919050565b6118e3816118cf565b82525050565b608082015f8201516118fd5f8501826118a8565b50602082015161191060208501826118c0565b50604082015161192360408501826118c0565b50606082015161193660608501826118da565b50505050565b606082015f8201516119505f8501826118c0565b50602082015161196360208501826118c0565b50604082015161197660408501826118c0565b50505050565b611985816118b7565b82525050565b5f6101008201905061199f5f8301866118e9565b6119ac608083018561193c565b6119b960e083018461197c565b949350505050565b5f6080820190506119d45f83018761197c565b6119e1602083018661197c565b6119ee604083018561197c565b6119fb606083018461197c565b95945050505050565b611a0d816118cf565b82525050565b5f608082019050611a265f830187611a04565b611a33602083018661197c565b611a40604083018561197c565b611a4d606083018461197c565b95945050505050565b611a5f8161179a565b82525050565b5f608082019050611a785f830187611a56565b611a85602083018661197c565b611a92604083018561197c565b611a9f6060830184611a04565b95945050505050565b5f606082019050611abb5f83018661197c565b611ac8602083018561197c565b611ad5604083018461197c565b949350505050565b611ae6816118b7565b8114611af0575f80fd5b50565b5f81359050611b0181611add565b92915050565b5f805f60608486031215611b1e57611b1d611792565b5b5f611b2b86828701611af3565b9350506020611b3c86828701611af3565b9250506040611b4d86828701611af3565b9150509250925092565b5f602082019050611b6a5f83018461197c565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112611b9157611b90611b70565b5b8235905067ffffffffffffffff811115611bae57611bad611b74565b5b602083019150836001820283011115611bca57611bc9611b78565b5b9250929050565b5f805f60408486031215611be857611be7611792565b5b5f84013567ffffffffffffffff811115611c0557611c04611796565b5b611c1186828701611b7c565b93509350506020611c2486828701611869565b9150509250925092565b5f82825260208201905092915050565b7f4465706f73697420746f6f20736d616c6c0000000000000000000000000000005f82015250565b5f611c72601183611c2e565b9150611c7d82611c3e565b602082019050919050565b5f6020820190508181035f830152611c9f81611c66565b9050919050565b7f496e76616c6964207269736b2073636f726500000000000000000000000000005f82015250565b5f611cda601283611c2e565b9150611ce582611ca6565b602082019050919050565b5f6020820190508181035f830152611d0781611cce565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611d45826118b7565b9150611d50836118b7565b9250828201905080821115611d6857611d67611d0e565b5b92915050565b5f604082019050611d815f83018561197c565b611d8e6020830184611a56565b9392505050565b7f4e6f206465706f7369747320746f20726562616c616e636500000000000000005f82015250565b5f611dc9601883611c2e565b9150611dd482611d95565b602082019050919050565b5f6020820190508181035f830152611df681611dbd565b9050919050565b5f81905092915050565b828183375f83830152505050565b5f611e208385611dfd565b9350611e2d838584611e07565b82840190509392505050565b5f611e45828486611e15565b91508190509392505050565b7f7472616465726a6f6500000000000000000000000000000000000000000000005f82015250565b5f611e85600983611dfd565b9150611e9082611e51565b600982019050919050565b5f611ea582611e79565b9150819050919050565b7f62656e71690000000000000000000000000000000000000000000000000000005f82015250565b5f611ee3600583611dfd565b9150611eee82611eaf565b600582019050919050565b5f611f0382611ed7565b9150819050919050565b7f7969656c6479616b0000000000000000000000000000000000000000000000005f82015250565b5f611f41600883611dfd565b9150611f4c82611f0d565b600882019050919050565b5f611f6182611f35565b9150819050919050565b7f496e76616c69642070726f746f636f6c000000000000000000000000000000005f82015250565b5f611f9f601083611c2e565b9150611faa82611f6b565b602082019050919050565b5f6020820190508181035f830152611fcc81611f93565b9050919050565b5f601f19601f8301169050919050565b5f611fee8385611c2e565b9350611ffb838584611e07565b61200483611fd3565b840190509392505050565b5f6040820190508181035f830152612028818587611fe3565b9050612037602083018461182b565b949350505050565b5f612049826118b7565b9150612054836118b7565b9250828202612062816118b7565b9150828204841483151761207957612078611d0e565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6120b7826118b7565b91506120c2836118b7565b9250826120d2576120d1612080565b5b828204905092915050565b5f6120e7826118b7565b91506120f2836118b7565b925082820390508181111561210a57612109611d0e565b5b92915050565b5f819050919050565b5f61212382612110565b915061212e83612110565b925082820390508181125f8412168282135f85121516171561215357612152611d0e565b5b92915050565b5f61216382612110565b91507f8000000000000000000000000000000000000000000000000000000000000000820361219557612194611d0e565b5b815f03905091905056fea26469706673582212204a5c8aa158035cca3c72094780a69ffce4d89a1998c0e19f6f1a3562c247690164736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x85 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7C SWAP2 SWAP1 PUSH3 0x1FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x96 DUP2 PUSH3 0xF6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1F4 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x320 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4B0 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x4 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH3 0x215 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x1E2 DUP3 PUSH3 0x1B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1F4 DUP2 PUSH3 0x1D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x20F PUSH0 DUP4 ADD DUP5 PUSH3 0x1E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21D5 DUP1 PUSH3 0x223 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D7C2A1C GT PUSH2 0x9F JUMPI DUP1 PUSH4 0xD076E8B4 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD076E8B4 EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0xE1E158A5 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0xE1F1C4A7 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x449 JUMPI PUSH2 0x11D JUMP JUMPDEST DUP1 PUSH4 0x7D7C2A1C EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x8CCBE9F5 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x99E32287 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0xC85B967D EQ PUSH2 0x38D JUMPI PUSH2 0x11D JUMP JUMPDEST DUP1 PUSH4 0x2FAFF427 GT PUSH2 0xE6 JUMPI DUP1 PUSH4 0x2FAFF427 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x324BE9EF EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x332D56D7 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x4C0C87FF EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E2 JUMPI PUSH2 0x11D JUMP JUMPDEST DUP1 PUSH3 0x349F3A EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x71A8EF5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x1EDB27E9 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x22A16952 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x2AB8895F EQ PUSH2 0x1D2 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x17D0 JUMP JUMPDEST PUSH2 0x471 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x148 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x5EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x187D JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x74A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x187D JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x225 PUSH2 0x8E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x246 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24F PUSH2 0x90E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x187D JUMP JUMPDEST PUSH2 0x933 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x187D JUMP JUMPDEST PUSH2 0x977 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH2 0x99D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30C PUSH2 0x9B0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x319 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH2 0xB39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x332 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34F PUSH2 0xB56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x370 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x38B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x1B07 JUMP JUMPDEST PUSH2 0xB7D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x398 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A1 PUSH2 0xBEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x1BD1 JUMP JUMPDEST PUSH2 0xBF2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F3 PUSH2 0xDF4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x409 PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x416 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x433 PUSH2 0xFDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x454 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x187D JUMP JUMPDEST PUSH2 0xFE4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x479 PUSH2 0x1068 JUMP JUMPDEST PUSH7 0x2386F26FC10000 CALLVALUE LT ISZERO PUSH2 0x4C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BA SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP2 PUSH1 0xFF AND GT ISZERO PUSH2 0x50A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x501 SWAP1 PUSH2 0x1CF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP2 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x578 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x593 CALLER CALLVALUE DUP5 PUSH2 0x10AE JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFA6B713FE8FF42BD695A98451844FDF6ABD6DD3999AB520F344F84AFF7D2A0 CALLVALUE DUP5 PUSH1 0x40 MLOAD PUSH2 0x5DB SWAP3 SWAP2 SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x5EC PUSH2 0x128A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x61C PUSH2 0x174B JUMP JUMPDEST PUSH2 0x624 PUSH2 0x1774 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP3 POP PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP2 POP DUP2 PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH0 ADD MLOAD PUSH2 0x737 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST PUSH2 0x741 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x4 PUSH0 ADD SLOAD PUSH1 0x4 PUSH1 0x1 ADD SLOAD PUSH1 0x4 PUSH1 0x2 ADD SLOAD PUSH1 0x4 PUSH1 0x3 ADD SLOAD SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x2 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD MLOAD SUB PUSH2 0x891 JUMPI PUSH0 DUP1 PUSH0 DUP1 SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP POP PUSH2 0x8E2 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH0 ADD MLOAD PUSH2 0x8AA SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST PUSH2 0x8B4 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST SWAP1 POP PUSH2 0x8C3 DUP2 DUP5 PUSH0 ADD MLOAD PUSH2 0x1293 JUMP JUMPDEST DUP1 SWAP7 POP DUP2 SWAP8 POP DUP3 SWAP9 POP POP POP POP PUSH2 0x8DC DUP3 DUP8 DUP8 DUP8 DUP6 PUSH2 0x13AA JUMP JUMPDEST SWAP7 POP POP POP POP JUMPDEST SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x9A5 PUSH2 0x140A JUMP JUMPDEST PUSH2 0x9AE PUSH0 PUSH2 0x1491 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9B8 PUSH2 0x1068 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x1 ADD SLOAD GT PUSH2 0xA3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA35 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD DUP3 PUSH1 0x1 ADD SLOAD DUP4 PUSH0 ADD SLOAD PUSH2 0xA97 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST PUSH2 0xAA1 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH0 PUSH2 0xABF DUP5 DUP8 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1293 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xAD2 CALLER DUP7 DUP6 DUP6 DUP6 PUSH2 0x1552 JUMP JUMPDEST TIMESTAMP DUP7 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1427D1942829759938581CE754FD0F7F116BFB7A4B77F80F0CB32CD62C2138C7 DUP6 PUSH1 0x40 MLOAD PUSH2 0xB21 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP PUSH2 0xB37 PUSH2 0x128A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB85 PUSH2 0x140A JUMP JUMPDEST DUP3 PUSH1 0x4 PUSH0 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x4 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xEB5E818D5254A980EAE621CCDCF791EB702D2F526CAF4D0833B622E27964D549 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xBDF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x1F4 DUP2 JUMP JUMPDEST PUSH2 0xBFA PUSH2 0x140A JUMP JUMPDEST PUSH0 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC0E SWAP3 SWAP2 SWAP1 PUSH2 0x1E39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC35 SWAP1 PUSH2 0x1E9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 SUB PUSH2 0xC96 JUMPI DUP2 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xDB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCA5 SWAP1 PUSH2 0x1EF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 SUB PUSH2 0xD06 JUMPI DUP2 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xDB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD15 SWAP1 PUSH2 0x1F57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 SUB PUSH2 0xD76 JUMPI DUP2 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xDB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA8 SWAP1 PUSH2 0x1FB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST PUSH32 0x50DF56C33B3BD3DAC7A2DB51A3F7C8BDAABF78A57FF1FAB3A72992006A77E69E DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDE6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x200F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0xDFC PUSH2 0x1068 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP1 DUP4 PUSH0 ADD SLOAD GT ISZERO PUSH2 0xEAA JUMPI PUSH2 0xE94 DUP4 PUSH0 ADD SLOAD PUSH2 0x166D JUMP JUMPDEST DUP2 PUSH2 0xE9F SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 DUP4 PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0xEDA JUMPI PUSH2 0xEC3 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x16B1 JUMP JUMPDEST DUP2 PUSH2 0xECE SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 DUP4 PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0xF0A JUMPI PUSH2 0xEF3 DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0x16F6 JUMP JUMPDEST DUP2 PUSH2 0xEFE SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH0 SELFBALANCE SWAP1 POP PUSH0 DUP2 DUP4 GT PUSH2 0xF25 JUMPI DUP3 PUSH2 0xF27 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xFC4 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF74 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP3 PUSH1 0x40 MLOAD PUSH2 0xFBB SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP POP PUSH2 0xFD1 PUSH2 0x128A JUMP JUMPDEST JUMP JUMPDEST PUSH7 0x2386F26FC10000 DUP2 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0xFEC PUSH2 0x140A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x105C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1053 SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1065 DUP2 PUSH2 0x1491 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x10A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP1 PUSH0 PUSH1 0x21 DUP6 PUSH1 0xFF AND GT PUSH2 0x113E JUMPI PUSH2 0x2710 PUSH2 0x1B58 DUP8 PUSH2 0x110D SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x1117 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP3 POP PUSH2 0x2710 PUSH2 0xBB8 DUP8 PUSH2 0x112A SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x1134 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH0 SWAP1 POP PUSH2 0x11FE JUMP JUMPDEST PUSH1 0x42 DUP6 PUSH1 0xFF AND GT PUSH2 0x11A5 JUMPI PUSH2 0x2710 PUSH2 0xFA0 DUP8 PUSH2 0x115A SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x1164 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP3 POP PUSH2 0x2710 PUSH2 0xFA0 DUP8 PUSH2 0x1177 SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x1181 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH2 0x2710 PUSH2 0x7D0 DUP8 PUSH2 0x1194 SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x119E SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP1 POP PUSH2 0x11FD JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x7D0 DUP8 PUSH2 0x11B6 SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x11C0 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP3 POP PUSH2 0x2710 PUSH2 0xBB8 DUP8 PUSH2 0x11D3 SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x11DD SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH2 0x2710 PUSH2 0x1388 DUP8 PUSH2 0x11F0 SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x11FA SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST DUP3 DUP5 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1210 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 DUP5 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x122A SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP5 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1244 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP4 GT ISZERO PUSH2 0x125D JUMPI PUSH2 0x125C DUP4 PUSH2 0x173B JUMP JUMPDEST JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0x126F JUMPI PUSH2 0x126E DUP3 PUSH2 0x173E JUMP JUMPDEST JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x1281 JUMPI PUSH2 0x1280 DUP2 PUSH2 0x1741 JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x21 DUP5 PUSH1 0xFF AND GT PUSH2 0x12E3 JUMPI PUSH2 0x2710 PUSH2 0x1B58 DUP7 PUSH2 0x12B2 SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x12BC SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP3 POP PUSH2 0x2710 PUSH2 0xBB8 DUP7 PUSH2 0x12CF SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x12D9 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH0 SWAP1 POP PUSH2 0x13A3 JUMP JUMPDEST PUSH1 0x42 DUP5 PUSH1 0xFF AND GT PUSH2 0x134A JUMPI PUSH2 0x2710 PUSH2 0xFA0 DUP7 PUSH2 0x12FF SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x1309 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP3 POP PUSH2 0x2710 PUSH2 0xFA0 DUP7 PUSH2 0x131C SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x1326 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH2 0x2710 PUSH2 0x7D0 DUP7 PUSH2 0x1339 SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x1343 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP1 POP PUSH2 0x13A2 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x7D0 DUP7 PUSH2 0x135B SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x1365 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP3 POP PUSH2 0x2710 PUSH2 0xBB8 DUP7 PUSH2 0x1378 SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x1382 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH2 0x2710 PUSH2 0x1388 DUP7 PUSH2 0x1395 SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x139F SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 DUP6 DUP8 PUSH0 ADD MLOAD GT PUSH2 0x13CA JUMPI DUP7 PUSH0 ADD MLOAD DUP7 PUSH2 0x13C5 SWAP2 SWAP1 PUSH2 0x20DD JUMP JUMPDEST PUSH2 0x13DA JUMP JUMPDEST DUP6 DUP8 PUSH0 ADD MLOAD PUSH2 0x13D9 SWAP2 SWAP1 PUSH2 0x20DD JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 PUSH2 0x1F4 DUP6 PUSH2 0x13EE SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x13F8 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1412 PUSH2 0x1744 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1430 PUSH2 0xB56 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x148F JUMPI PUSH2 0x1453 PUSH2 0x1744 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1486 SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH0 ADD SLOAD DUP5 PUSH2 0x1562 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST SWAP1 POP PUSH0 DUP6 PUSH1 0x1 ADD SLOAD DUP5 PUSH2 0x1575 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST SWAP1 POP PUSH0 DUP7 PUSH1 0x2 ADD SLOAD DUP5 PUSH2 0x1588 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 DUP5 SLT ISZERO PUSH2 0x15B8 JUMPI PUSH0 DUP5 PUSH2 0x159E SWAP1 PUSH2 0x2159 JUMP JUMPDEST SWAP1 POP PUSH2 0x15A9 DUP2 PUSH2 0x166D JUMP JUMPDEST DUP3 PUSH2 0x15B4 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH0 DUP4 SLT ISZERO PUSH2 0x15E5 JUMPI PUSH0 DUP4 PUSH2 0x15CB SWAP1 PUSH2 0x2159 JUMP JUMPDEST SWAP1 POP PUSH2 0x15D6 DUP2 PUSH2 0x16B1 JUMP JUMPDEST DUP3 PUSH2 0x15E1 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH0 DUP3 SLT ISZERO PUSH2 0x1612 JUMPI PUSH0 DUP3 PUSH2 0x15F8 SWAP1 PUSH2 0x2159 JUMP JUMPDEST SWAP1 POP PUSH2 0x1603 DUP2 PUSH2 0x16F6 JUMP JUMPDEST DUP3 PUSH2 0x160E SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH0 DUP5 SGT ISZERO PUSH2 0x1624 JUMPI PUSH2 0x1623 DUP5 PUSH2 0x173B JUMP JUMPDEST JUMPDEST PUSH0 DUP4 SGT ISZERO PUSH2 0x1636 JUMPI PUSH2 0x1635 DUP4 PUSH2 0x173E JUMP JUMPDEST JUMPDEST PUSH0 DUP3 SGT ISZERO PUSH2 0x1648 JUMPI PUSH2 0x1647 DUP3 PUSH2 0x1741 JUMP JUMPDEST JUMPDEST DUP7 DUP9 PUSH0 ADD DUP2 SWAP1 SSTORE POP DUP6 DUP9 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP5 DUP9 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2710 PUSH2 0x16D PUSH1 0x4 PUSH0 ADD SLOAD PUSH2 0x1684 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x1691 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST DUP5 PUSH2 0x169C SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x16A6 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2710 PUSH2 0x16D PUSH1 0x4 PUSH1 0x1 ADD SLOAD PUSH2 0x16C9 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x16D6 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST DUP5 PUSH2 0x16E1 SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x16EB SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2710 PUSH2 0x16D PUSH1 0x4 PUSH1 0x2 ADD SLOAD PUSH2 0x170E SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x171B SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST DUP5 PUSH2 0x1726 SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x1730 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP JUMP JUMPDEST POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17AF DUP2 PUSH2 0x179A JUMP JUMPDEST DUP2 EQ PUSH2 0x17B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17CA DUP2 PUSH2 0x17A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17E5 JUMPI PUSH2 0x17E4 PUSH2 0x1792 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17F2 DUP5 DUP3 DUP6 ADD PUSH2 0x17BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1824 DUP3 PUSH2 0x17FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1834 DUP2 PUSH2 0x181A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x184D PUSH0 DUP4 ADD DUP5 PUSH2 0x182B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x185C DUP2 PUSH2 0x181A JUMP JUMPDEST DUP2 EQ PUSH2 0x1866 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1877 DUP2 PUSH2 0x1853 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1892 JUMPI PUSH2 0x1891 PUSH2 0x1792 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x189F DUP5 DUP3 DUP6 ADD PUSH2 0x1869 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18B1 DUP2 PUSH2 0x179A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18C9 DUP2 PUSH2 0x18B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E3 DUP2 PUSH2 0x18CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x18FD PUSH0 DUP6 ADD DUP3 PUSH2 0x18A8 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1910 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x18C0 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1923 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x18C0 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1936 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x18DA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1950 PUSH0 DUP6 ADD DUP3 PUSH2 0x18C0 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1963 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x18C0 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1976 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x18C0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1985 DUP2 PUSH2 0x18B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x199F PUSH0 DUP4 ADD DUP7 PUSH2 0x18E9 JUMP JUMPDEST PUSH2 0x19AC PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x193C JUMP JUMPDEST PUSH2 0x19B9 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x197C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x19D4 PUSH0 DUP4 ADD DUP8 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x19E1 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x19EE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x19FB PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x197C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1A0D DUP2 PUSH2 0x18CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1A26 PUSH0 DUP4 ADD DUP8 PUSH2 0x1A04 JUMP JUMPDEST PUSH2 0x1A33 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1A40 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1A4D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x197C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1A5F DUP2 PUSH2 0x179A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1A78 PUSH0 DUP4 ADD DUP8 PUSH2 0x1A56 JUMP JUMPDEST PUSH2 0x1A85 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1A92 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1A9F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1A04 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1ABB PUSH0 DUP4 ADD DUP7 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1AC8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1AD5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x197C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1AE6 DUP2 PUSH2 0x18B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B01 DUP2 PUSH2 0x1ADD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B1E JUMPI PUSH2 0x1B1D PUSH2 0x1792 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B2B DUP7 DUP3 DUP8 ADD PUSH2 0x1AF3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B3C DUP7 DUP3 DUP8 ADD PUSH2 0x1AF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B4D DUP7 DUP3 DUP8 ADD PUSH2 0x1AF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B6A PUSH0 DUP4 ADD DUP5 PUSH2 0x197C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1B91 JUMPI PUSH2 0x1B90 PUSH2 0x1B70 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BAE JUMPI PUSH2 0x1BAD PUSH2 0x1B74 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1BCA JUMPI PUSH2 0x1BC9 PUSH2 0x1B78 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BE8 JUMPI PUSH2 0x1BE7 PUSH2 0x1792 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C05 JUMPI PUSH2 0x1C04 PUSH2 0x1796 JUMP JUMPDEST JUMPDEST PUSH2 0x1C11 DUP7 DUP3 DUP8 ADD PUSH2 0x1B7C JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C24 DUP7 DUP3 DUP8 ADD PUSH2 0x1869 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4465706F73697420746F6F20736D616C6C000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C72 PUSH1 0x11 DUP4 PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP PUSH2 0x1C7D DUP3 PUSH2 0x1C3E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C9F DUP2 PUSH2 0x1C66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207269736B2073636F72650000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CDA PUSH1 0x12 DUP4 PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE5 DUP3 PUSH2 0x1CA6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D07 DUP2 PUSH2 0x1CCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D45 DUP3 PUSH2 0x18B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D50 DUP4 PUSH2 0x18B7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D68 JUMPI PUSH2 0x1D67 PUSH2 0x1D0E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D81 PUSH0 DUP4 ADD DUP6 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1D8E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A56 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F206465706F7369747320746F20726562616C616E63650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DC9 PUSH1 0x18 DUP4 PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP PUSH2 0x1DD4 DUP3 PUSH2 0x1D95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DF6 DUP2 PUSH2 0x1DBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E20 DUP4 DUP6 PUSH2 0x1DFD JUMP JUMPDEST SWAP4 POP PUSH2 0x1E2D DUP4 DUP6 DUP5 PUSH2 0x1E07 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E45 DUP3 DUP5 DUP7 PUSH2 0x1E15 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x7472616465726A6F650000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E85 PUSH1 0x9 DUP4 PUSH2 0x1DFD JUMP JUMPDEST SWAP2 POP PUSH2 0x1E90 DUP3 PUSH2 0x1E51 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EA5 DUP3 PUSH2 0x1E79 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x62656E7169000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EE3 PUSH1 0x5 DUP4 PUSH2 0x1DFD JUMP JUMPDEST SWAP2 POP PUSH2 0x1EEE DUP3 PUSH2 0x1EAF JUMP JUMPDEST PUSH1 0x5 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F03 DUP3 PUSH2 0x1ED7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7969656C6479616B000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F41 PUSH1 0x8 DUP4 PUSH2 0x1DFD JUMP JUMPDEST SWAP2 POP PUSH2 0x1F4C DUP3 PUSH2 0x1F0D JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F61 DUP3 PUSH2 0x1F35 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642070726F746F636F6C00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F9F PUSH1 0x10 DUP4 PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAA DUP3 PUSH2 0x1F6B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FCC DUP2 PUSH2 0x1F93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FEE DUP4 DUP6 PUSH2 0x1C2E JUMP JUMPDEST SWAP4 POP PUSH2 0x1FFB DUP4 DUP6 DUP5 PUSH2 0x1E07 JUMP JUMPDEST PUSH2 0x2004 DUP4 PUSH2 0x1FD3 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2028 DUP2 DUP6 DUP8 PUSH2 0x1FE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x2037 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x182B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2049 DUP3 PUSH2 0x18B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2054 DUP4 PUSH2 0x18B7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2062 DUP2 PUSH2 0x18B7 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2079 JUMPI PUSH2 0x2078 PUSH2 0x1D0E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x20B7 DUP3 PUSH2 0x18B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x20C2 DUP4 PUSH2 0x18B7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x20D2 JUMPI PUSH2 0x20D1 PUSH2 0x2080 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20E7 DUP3 PUSH2 0x18B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F2 DUP4 PUSH2 0x18B7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x210A JUMPI PUSH2 0x2109 PUSH2 0x1D0E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2123 DUP3 PUSH2 0x2110 JUMP JUMPDEST SWAP2 POP PUSH2 0x212E DUP4 PUSH2 0x2110 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 SLT PUSH0 DUP5 SLT AND DUP3 DUP3 SGT PUSH0 DUP6 SLT ISZERO AND OR ISZERO PUSH2 0x2153 JUMPI PUSH2 0x2152 PUSH2 0x1D0E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2163 DUP3 PUSH2 0x2110 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 SUB PUSH2 0x2195 JUMPI PUSH2 0x2194 PUSH2 0x1D0E JUMP JUMPDEST JUMPDEST DUP2 PUSH0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A 0x5C DUP11 LOG1 PC SUB 0x5C 0xCA EXTCODECOPY PUSH19 0x94780A69FFCE4D89A1998C0E19F6F1A3562C2 SELFBALANCE PUSH10 0x164736F6C6343000817 STOP CALLER ",
							"sourceMap": "405:15225:9:-:0;;;2327:346;;;;;;;;;;2349:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1857:1:7;2061:7;:21;;;;2468:198:9::1;;;;;;;;2502:3;2468:198;;;;2550:3;2468:198;;;;2595:4;2468:198;;;;2640:15;2468:198;;::::0;2452:13:::1;:214;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;405:15225:::0;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:13:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;405:15225:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BASIS_POINTS_960": {
									"entryPoint": 4062,
									"id": 960,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MIN_DEPOSIT_954": {
									"entryPoint": 4051,
									"id": 954,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@REBALANCE_THRESHOLD_957": {
									"entryPoint": 3052,
									"id": 957,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_allocateFunds_1239": {
									"entryPoint": 4270,
									"id": 1239,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_calculateOptimalAllocation_1770": {
									"entryPoint": 4755,
									"id": 1770,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"@_checkOwner_84": {
									"entryPoint": 5130,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_depositToBenqi_1582": {
									"entryPoint": 5947,
									"id": 1582,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_depositToTraderJoe_1588": {
									"entryPoint": 5950,
									"id": 1588,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_depositToYieldYak_1594": {
									"entryPoint": 5953,
									"id": 1594,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_executeRebalance_1985": {
									"entryPoint": 5458,
									"id": 1985,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_msgSender_791": {
									"entryPoint": 5956,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_866": {
									"entryPoint": 4746,
									"id": 866,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_858": {
									"entryPoint": 4200,
									"id": 858,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_shouldRebalance_1816": {
									"entryPoint": 5034,
									"id": 1816,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 5265,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_withdrawFromBenqi_1619": {
									"entryPoint": 5741,
									"id": 1619,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_withdrawFromTraderJoe_1644": {
									"entryPoint": 5809,
									"id": 1644,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_withdrawFromYieldYak_1669": {
									"entryPoint": 5878,
									"id": 1669,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@benqiComptroller_949": {
									"entryPoint": 2318,
									"id": 949,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@currentYields_945": {
									"entryPoint": 2873,
									"id": 945,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@emergencyWithdraw_1576": {
									"entryPoint": 3572,
									"id": 1576,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCurrentYields_1262": {
									"entryPoint": 1866,
									"id": 1262,
									"parameterSlots": 0,
									"returnSlots": 4
								},
								"@getRebalanceRecommendation_1373": {
									"entryPoint": 1907,
									"id": 1373,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@getUserPortfolio_1300": {
									"entryPoint": 1556,
									"id": 1300,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@optimizeYield_1080": {
									"entryPoint": 1137,
									"id": 1080,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 2902,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rebalance_1449": {
									"entryPoint": 2480,
									"id": 1449,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2461,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@traderJoeRouter_947": {
									"entryPoint": 2281,
									"id": 947,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 4068,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateProtocolAddress_2056": {
									"entryPoint": 3058,
									"id": 2056,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@updateYields_2099": {
									"entryPoint": 2941,
									"id": 2099,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@userAllocations_942": {
									"entryPoint": 2423,
									"id": 942,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userProfiles_937": {
									"entryPoint": 2355,
									"id": 937,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@yieldYakFarm_951": {
									"entryPoint": 1519,
									"id": 951,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_calldata_ptr": {
									"entryPoint": 7036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 6076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_calldata_ptrt_address": {
									"entryPoint": 7121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 6919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint8": {
									"entryPoint": 6096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool": {
									"entryPoint": 6362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8163,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7701,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24f8419fdc4f6acf1200f13e6b585e241e72e1b37e4d57f20ad2da38a8f251fe_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4f3530f04718d4d533ba4472936463d898d6bb1446e605473122cb9219ca1a7a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9ddaa44d722a3a8812710279db1e7f7e441f48ae85f2dbbc1cbbd2d86fcf715a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a24808fe8020be382efbc06e3d832c10022c9007a54161bd80307f00bff0c218_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a3844f20365e6d2d8ff7b4d99e0a3b236f50e2ae8088965ed1727f40132bf411_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ca0da0a49743b95e8ea9e651d4f648be9bdc5629a2c1716e52deaa77b8602d67_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e47e4d4019fbc3201dd7924d57a3f1daa90e6a7f83fef433220dabdb84cceb65_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ProtocolAllocation_$923_memory_ptr_to_t_struct$_ProtocolAllocation_$923_memory_ptr_fromStack": {
									"entryPoint": 6460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_UserProfile_$916_memory_ptr_to_t_struct$_UserProfile_$916_memory_ptr_fromStack": {
									"entryPoint": 6377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8": {
									"entryPoint": 6312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7737,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_24f8419fdc4f6acf1200f13e6b585e241e72e1b37e4d57f20ad2da38a8f251fe__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_a24808fe8020be382efbc06e3d832c10022c9007a54161bd80307f00bff0c218__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_ca0da0a49743b95e8ea9e651d4f648be9bdc5629a2c1716e52deaa77b8602d67__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_uint256_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6675,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_calldata_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed": {
									"entryPoint": 8207,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4f3530f04718d4d533ba4472936463d898d6bb1446e605473122cb9219ca1a7a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9ddaa44d722a3a8812710279db1e7f7e441f48ae85f2dbbc1cbbd2d86fcf715a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a3844f20365e6d2d8ff7b4d99e0a3b236f50e2ae8088965ed1727f40132bf411__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e47e4d4019fbc3201dd7924d57a3f1daa90e6a7f83fef433220dabdb84cceb65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_UserProfile_$916_memory_ptr_t_struct$_ProtocolAllocation_$923_memory_ptr_t_uint256__to_t_struct$_UserProfile_$916_memory_ptr_t_struct$_ProtocolAllocation_$923_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 6539,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6824,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6593,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint8__to_t_uint256_t_uint8__fromStack_reversed": {
									"entryPoint": 7534,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8_t_uint256_t_uint256_t_bool__to_t_uint8_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 6757,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_int256": {
									"entryPoint": 8473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 8464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7687,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"negate_t_int256": {
									"entryPoint": 8537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7438,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8320,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 7028,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7024,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 7032,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6038,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6034,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_24f8419fdc4f6acf1200f13e6b585e241e72e1b37e4d57f20ad2da38a8f251fe": {
									"entryPoint": 7761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4f3530f04718d4d533ba4472936463d898d6bb1446e605473122cb9219ca1a7a": {
									"entryPoint": 7334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9ddaa44d722a3a8812710279db1e7f7e441f48ae85f2dbbc1cbbd2d86fcf715a": {
									"entryPoint": 7573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a24808fe8020be382efbc06e3d832c10022c9007a54161bd80307f00bff0c218": {
									"entryPoint": 7949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a3844f20365e6d2d8ff7b4d99e0a3b236f50e2ae8088965ed1727f40132bf411": {
									"entryPoint": 8043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ca0da0a49743b95e8ea9e651d4f648be9bdc5629a2c1716e52deaa77b8602d67": {
									"entryPoint": 7855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e47e4d4019fbc3201dd7924d57a3f1daa90e6a7f83fef433220dabdb84cceb65": {
									"entryPoint": 7230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 6054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21617:13",
										"nodeType": "YulBlock",
										"src": "0:21617:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "377:43:13",
													"nodeType": "YulBlock",
													"src": "377:43:13",
													"statements": [
														{
															"nativeSrc": "387:27:13",
															"nodeType": "YulAssignment",
															"src": "387:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "402:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "402:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "409:4:13",
																		"nodeType": "YulLiteral",
																		"src": "409:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "398:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "398:3:13"
																},
																"nativeSrc": "398:16:13",
																"nodeType": "YulFunctionCall",
																"src": "398:16:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "387:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "387:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "334:86:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "359:5:13",
														"nodeType": "YulTypedName",
														"src": "359:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "369:7:13",
														"nodeType": "YulTypedName",
														"src": "369:7:13",
														"type": ""
													}
												],
												"src": "334:86:13"
											},
											{
												"body": {
													"nativeSrc": "467:77:13",
													"nodeType": "YulBlock",
													"src": "467:77:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "522:16:13",
																"nodeType": "YulBlock",
																"src": "522:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "531:1:13",
																					"nodeType": "YulLiteral",
																					"src": "531:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "534:1:13",
																					"nodeType": "YulLiteral",
																					"src": "534:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "524:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "524:6:13"
																			},
																			"nativeSrc": "524:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "524:12:13"
																		},
																		"nativeSrc": "524:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "524:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "490:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "490:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "513:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "513:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "497:15:13",
																					"nodeType": "YulIdentifier",
																					"src": "497:15:13"
																				},
																				"nativeSrc": "497:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "497:22:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "487:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "487:2:13"
																		},
																		"nativeSrc": "487:33:13",
																		"nodeType": "YulFunctionCall",
																		"src": "487:33:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "480:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "480:6:13"
																},
																"nativeSrc": "480:41:13",
																"nodeType": "YulFunctionCall",
																"src": "480:41:13"
															},
															"nativeSrc": "477:61:13",
															"nodeType": "YulIf",
															"src": "477:61:13"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "426:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "460:5:13",
														"nodeType": "YulTypedName",
														"src": "460:5:13",
														"type": ""
													}
												],
												"src": "426:118:13"
											},
											{
												"body": {
													"nativeSrc": "600:85:13",
													"nodeType": "YulBlock",
													"src": "600:85:13",
													"statements": [
														{
															"nativeSrc": "610:29:13",
															"nodeType": "YulAssignment",
															"src": "610:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "632:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "632:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "619:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "619:12:13"
																},
																"nativeSrc": "619:20:13",
																"nodeType": "YulFunctionCall",
																"src": "619:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "610:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "610:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "673:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "673:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "648:24:13",
																	"nodeType": "YulIdentifier",
																	"src": "648:24:13"
																},
																"nativeSrc": "648:31:13",
																"nodeType": "YulFunctionCall",
																"src": "648:31:13"
															},
															"nativeSrc": "648:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "648:31:13"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nativeSrc": "550:135:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "578:6:13",
														"nodeType": "YulTypedName",
														"src": "578:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "586:3:13",
														"nodeType": "YulTypedName",
														"src": "586:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "594:5:13",
														"nodeType": "YulTypedName",
														"src": "594:5:13",
														"type": ""
													}
												],
												"src": "550:135:13"
											},
											{
												"body": {
													"nativeSrc": "755:261:13",
													"nodeType": "YulBlock",
													"src": "755:261:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "801:83:13",
																"nodeType": "YulBlock",
																"src": "801:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "803:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "803:77:13"
																			},
																			"nativeSrc": "803:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "803:79:13"
																		},
																		"nativeSrc": "803:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "803:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "776:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "776:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "785:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "785:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "772:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "772:3:13"
																		},
																		"nativeSrc": "772:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "772:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "797:2:13",
																		"nodeType": "YulLiteral",
																		"src": "797:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "768:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "768:3:13"
																},
																"nativeSrc": "768:32:13",
																"nodeType": "YulFunctionCall",
																"src": "768:32:13"
															},
															"nativeSrc": "765:119:13",
															"nodeType": "YulIf",
															"src": "765:119:13"
														},
														{
															"nativeSrc": "894:115:13",
															"nodeType": "YulBlock",
															"src": "894:115:13",
															"statements": [
																{
																	"nativeSrc": "909:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "909:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "923:1:13",
																		"nodeType": "YulLiteral",
																		"src": "923:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "913:6:13",
																			"nodeType": "YulTypedName",
																			"src": "913:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "938:61:13",
																	"nodeType": "YulAssignment",
																	"src": "938:61:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "971:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "971:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "982:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "982:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:13"
																				},
																				"nativeSrc": "967:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "967:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "991:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "991:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "948:18:13",
																			"nodeType": "YulIdentifier",
																			"src": "948:18:13"
																		},
																		"nativeSrc": "948:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "948:51:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "938:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "938:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8",
												"nativeSrc": "691:325:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "725:9:13",
														"nodeType": "YulTypedName",
														"src": "725:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "736:7:13",
														"nodeType": "YulTypedName",
														"src": "736:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "748:6:13",
														"nodeType": "YulTypedName",
														"src": "748:6:13",
														"type": ""
													}
												],
												"src": "691:325:13"
											},
											{
												"body": {
													"nativeSrc": "1067:81:13",
													"nodeType": "YulBlock",
													"src": "1067:81:13",
													"statements": [
														{
															"nativeSrc": "1077:65:13",
															"nodeType": "YulAssignment",
															"src": "1077:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1092:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1092:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1099:42:13",
																		"nodeType": "YulLiteral",
																		"src": "1099:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1088:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1088:3:13"
																},
																"nativeSrc": "1088:54:13",
																"nodeType": "YulFunctionCall",
																"src": "1088:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1077:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1077:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1022:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1049:5:13",
														"nodeType": "YulTypedName",
														"src": "1049:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1059:7:13",
														"nodeType": "YulTypedName",
														"src": "1059:7:13",
														"type": ""
													}
												],
												"src": "1022:126:13"
											},
											{
												"body": {
													"nativeSrc": "1199:51:13",
													"nodeType": "YulBlock",
													"src": "1199:51:13",
													"statements": [
														{
															"nativeSrc": "1209:35:13",
															"nodeType": "YulAssignment",
															"src": "1209:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1238:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1238:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1220:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "1220:17:13"
																},
																"nativeSrc": "1220:24:13",
																"nodeType": "YulFunctionCall",
																"src": "1220:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1209:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1209:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1154:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1181:5:13",
														"nodeType": "YulTypedName",
														"src": "1181:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1191:7:13",
														"nodeType": "YulTypedName",
														"src": "1191:7:13",
														"type": ""
													}
												],
												"src": "1154:96:13"
											},
											{
												"body": {
													"nativeSrc": "1321:53:13",
													"nodeType": "YulBlock",
													"src": "1321:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1338:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1338:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1361:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1361:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1343:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "1343:17:13"
																		},
																		"nativeSrc": "1343:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1343:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1331:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:13"
																},
																"nativeSrc": "1331:37:13",
																"nodeType": "YulFunctionCall",
																"src": "1331:37:13"
															},
															"nativeSrc": "1331:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "1331:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1256:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1309:5:13",
														"nodeType": "YulTypedName",
														"src": "1309:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1316:3:13",
														"nodeType": "YulTypedName",
														"src": "1316:3:13",
														"type": ""
													}
												],
												"src": "1256:118:13"
											},
											{
												"body": {
													"nativeSrc": "1478:124:13",
													"nodeType": "YulBlock",
													"src": "1478:124:13",
													"statements": [
														{
															"nativeSrc": "1488:26:13",
															"nodeType": "YulAssignment",
															"src": "1488:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1500:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1500:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1511:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1496:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1496:3:13"
																},
																"nativeSrc": "1496:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1496:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1488:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1488:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1568:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1568:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1581:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1581:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1592:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1592:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1577:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1577:3:13"
																		},
																		"nativeSrc": "1577:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1577:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1524:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "1524:43:13"
																},
																"nativeSrc": "1524:71:13",
																"nodeType": "YulFunctionCall",
																"src": "1524:71:13"
															},
															"nativeSrc": "1524:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "1524:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1380:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1450:9:13",
														"nodeType": "YulTypedName",
														"src": "1450:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1462:6:13",
														"nodeType": "YulTypedName",
														"src": "1462:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1473:4:13",
														"nodeType": "YulTypedName",
														"src": "1473:4:13",
														"type": ""
													}
												],
												"src": "1380:222:13"
											},
											{
												"body": {
													"nativeSrc": "1651:79:13",
													"nodeType": "YulBlock",
													"src": "1651:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1708:16:13",
																"nodeType": "YulBlock",
																"src": "1708:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1717:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1717:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1710:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1710:6:13"
																			},
																			"nativeSrc": "1710:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1710:12:13"
																		},
																		"nativeSrc": "1710:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1710:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1674:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1674:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1699:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1699:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1681:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "1681:17:13"
																				},
																				"nativeSrc": "1681:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1681:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1671:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1671:2:13"
																		},
																		"nativeSrc": "1671:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1671:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1664:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1664:6:13"
																},
																"nativeSrc": "1664:43:13",
																"nodeType": "YulFunctionCall",
																"src": "1664:43:13"
															},
															"nativeSrc": "1661:63:13",
															"nodeType": "YulIf",
															"src": "1661:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1608:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1644:5:13",
														"nodeType": "YulTypedName",
														"src": "1644:5:13",
														"type": ""
													}
												],
												"src": "1608:122:13"
											},
											{
												"body": {
													"nativeSrc": "1788:87:13",
													"nodeType": "YulBlock",
													"src": "1788:87:13",
													"statements": [
														{
															"nativeSrc": "1798:29:13",
															"nodeType": "YulAssignment",
															"src": "1798:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1820:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1820:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1807:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1807:12:13"
																},
																"nativeSrc": "1807:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1807:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1798:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1798:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1863:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1863:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1836:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "1836:26:13"
																},
																"nativeSrc": "1836:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1836:33:13"
															},
															"nativeSrc": "1836:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1836:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1736:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1766:6:13",
														"nodeType": "YulTypedName",
														"src": "1766:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1774:3:13",
														"nodeType": "YulTypedName",
														"src": "1774:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1782:5:13",
														"nodeType": "YulTypedName",
														"src": "1782:5:13",
														"type": ""
													}
												],
												"src": "1736:139:13"
											},
											{
												"body": {
													"nativeSrc": "1947:263:13",
													"nodeType": "YulBlock",
													"src": "1947:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1993:83:13",
																"nodeType": "YulBlock",
																"src": "1993:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1995:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "1995:77:13"
																			},
																			"nativeSrc": "1995:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1995:79:13"
																		},
																		"nativeSrc": "1995:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1995:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1968:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1968:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1977:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1977:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1964:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1964:3:13"
																		},
																		"nativeSrc": "1964:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1964:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1989:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1989:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1960:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1960:3:13"
																},
																"nativeSrc": "1960:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1960:32:13"
															},
															"nativeSrc": "1957:119:13",
															"nodeType": "YulIf",
															"src": "1957:119:13"
														},
														{
															"nativeSrc": "2086:117:13",
															"nodeType": "YulBlock",
															"src": "2086:117:13",
															"statements": [
																{
																	"nativeSrc": "2101:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2101:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2115:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2115:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2105:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2105:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2130:63:13",
																	"nodeType": "YulAssignment",
																	"src": "2130:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2165:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2165:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2176:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2176:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2161:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2161:3:13"
																				},
																				"nativeSrc": "2161:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2161:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2185:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2185:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2140:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "2140:20:13"
																		},
																		"nativeSrc": "2140:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2140:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2130:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2130:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1881:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1917:9:13",
														"nodeType": "YulTypedName",
														"src": "1917:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1928:7:13",
														"nodeType": "YulTypedName",
														"src": "1928:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1940:6:13",
														"nodeType": "YulTypedName",
														"src": "1940:6:13",
														"type": ""
													}
												],
												"src": "1881:329:13"
											},
											{
												"body": {
													"nativeSrc": "2267:51:13",
													"nodeType": "YulBlock",
													"src": "2267:51:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2284:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2284:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2305:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2305:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "2289:15:13",
																			"nodeType": "YulIdentifier",
																			"src": "2289:15:13"
																		},
																		"nativeSrc": "2289:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2289:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2277:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2277:6:13"
																},
																"nativeSrc": "2277:35:13",
																"nodeType": "YulFunctionCall",
																"src": "2277:35:13"
															},
															"nativeSrc": "2277:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "2277:35:13"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8",
												"nativeSrc": "2216:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2255:5:13",
														"nodeType": "YulTypedName",
														"src": "2255:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2262:3:13",
														"nodeType": "YulTypedName",
														"src": "2262:3:13",
														"type": ""
													}
												],
												"src": "2216:102:13"
											},
											{
												"body": {
													"nativeSrc": "2369:32:13",
													"nodeType": "YulBlock",
													"src": "2369:32:13",
													"statements": [
														{
															"nativeSrc": "2379:16:13",
															"nodeType": "YulAssignment",
															"src": "2379:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "2390:5:13",
																"nodeType": "YulIdentifier",
																"src": "2390:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2379:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2379:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2324:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2351:5:13",
														"nodeType": "YulTypedName",
														"src": "2351:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2361:7:13",
														"nodeType": "YulTypedName",
														"src": "2361:7:13",
														"type": ""
													}
												],
												"src": "2324:77:13"
											},
											{
												"body": {
													"nativeSrc": "2462:53:13",
													"nodeType": "YulBlock",
													"src": "2462:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2479:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2479:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2502:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2502:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2484:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "2484:17:13"
																		},
																		"nativeSrc": "2484:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2484:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2472:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2472:6:13"
																},
																"nativeSrc": "2472:37:13",
																"nodeType": "YulFunctionCall",
																"src": "2472:37:13"
															},
															"nativeSrc": "2472:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "2472:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "2407:108:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2450:5:13",
														"nodeType": "YulTypedName",
														"src": "2450:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2457:3:13",
														"nodeType": "YulTypedName",
														"src": "2457:3:13",
														"type": ""
													}
												],
												"src": "2407:108:13"
											},
											{
												"body": {
													"nativeSrc": "2563:48:13",
													"nodeType": "YulBlock",
													"src": "2563:48:13",
													"statements": [
														{
															"nativeSrc": "2573:32:13",
															"nodeType": "YulAssignment",
															"src": "2573:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2598:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2598:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2591:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2591:6:13"
																		},
																		"nativeSrc": "2591:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2591:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2584:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2584:6:13"
																},
																"nativeSrc": "2584:21:13",
																"nodeType": "YulFunctionCall",
																"src": "2584:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2573:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2573:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2521:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2545:5:13",
														"nodeType": "YulTypedName",
														"src": "2545:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2555:7:13",
														"nodeType": "YulTypedName",
														"src": "2555:7:13",
														"type": ""
													}
												],
												"src": "2521:90:13"
											},
											{
												"body": {
													"nativeSrc": "2666:50:13",
													"nodeType": "YulBlock",
													"src": "2666:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2683:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2683:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2703:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2703:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2688:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "2688:14:13"
																		},
																		"nativeSrc": "2688:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2688:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2676:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2676:6:13"
																},
																"nativeSrc": "2676:34:13",
																"nodeType": "YulFunctionCall",
																"src": "2676:34:13"
															},
															"nativeSrc": "2676:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "2676:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool",
												"nativeSrc": "2617:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2654:5:13",
														"nodeType": "YulTypedName",
														"src": "2654:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2661:3:13",
														"nodeType": "YulTypedName",
														"src": "2661:3:13",
														"type": ""
													}
												],
												"src": "2617:99:13"
											},
											{
												"body": {
													"nativeSrc": "2922:762:13",
													"nodeType": "YulBlock",
													"src": "2922:762:13",
													"statements": [
														{
															"nativeSrc": "2932:26:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2932:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2948:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2948:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2953:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2953:4:13",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2944:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2944:3:13"
																},
																"nativeSrc": "2944:14:13",
																"nodeType": "YulFunctionCall",
																"src": "2944:14:13"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "2936:4:13",
																	"nodeType": "YulTypedName",
																	"src": "2936:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2968:165:13",
															"nodeType": "YulBlock",
															"src": "2968:165:13",
															"statements": [
																{
																	"nativeSrc": "3008:43:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3008:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3038:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3038:5:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3045:4:13",
																						"nodeType": "YulLiteral",
																						"src": "3045:4:13",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3034:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3034:3:13"
																				},
																				"nativeSrc": "3034:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3034:16:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3028:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "3028:5:13"
																		},
																		"nativeSrc": "3028:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3028:23:13"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3012:12:13",
																			"nodeType": "YulTypedName",
																			"src": "3012:12:13",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3094:12:13",
																				"nodeType": "YulIdentifier",
																				"src": "3094:12:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3112:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "3112:3:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3117:4:13",
																						"nodeType": "YulLiteral",
																						"src": "3117:4:13",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3108:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3108:3:13"
																				},
																				"nativeSrc": "3108:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3108:14:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint8_to_t_uint8",
																			"nativeSrc": "3064:29:13",
																			"nodeType": "YulIdentifier",
																			"src": "3064:29:13"
																		},
																		"nativeSrc": "3064:59:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3064:59:13"
																	},
																	"nativeSrc": "3064:59:13",
																	"nodeType": "YulExpressionStatement",
																	"src": "3064:59:13"
																}
															]
														},
														{
															"nativeSrc": "3143:174:13",
															"nodeType": "YulBlock",
															"src": "3143:174:13",
															"statements": [
																{
																	"nativeSrc": "3188:43:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3188:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3218:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3218:5:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3225:4:13",
																						"nodeType": "YulLiteral",
																						"src": "3225:4:13",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3214:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3214:3:13"
																				},
																				"nativeSrc": "3214:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3214:16:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3208:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "3208:5:13"
																		},
																		"nativeSrc": "3208:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3208:23:13"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3192:12:13",
																			"nodeType": "YulTypedName",
																			"src": "3192:12:13",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3278:12:13",
																				"nodeType": "YulIdentifier",
																				"src": "3278:12:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3296:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "3296:3:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3301:4:13",
																						"nodeType": "YulLiteral",
																						"src": "3301:4:13",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3292:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3292:3:13"
																				},
																				"nativeSrc": "3292:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3292:14:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "3244:33:13",
																			"nodeType": "YulIdentifier",
																			"src": "3244:33:13"
																		},
																		"nativeSrc": "3244:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3244:63:13"
																	},
																	"nativeSrc": "3244:63:13",
																	"nodeType": "YulExpressionStatement",
																	"src": "3244:63:13"
																}
															]
														},
														{
															"nativeSrc": "3327:173:13",
															"nodeType": "YulBlock",
															"src": "3327:173:13",
															"statements": [
																{
																	"nativeSrc": "3371:43:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3371:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3401:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3401:5:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3408:4:13",
																						"nodeType": "YulLiteral",
																						"src": "3408:4:13",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3397:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3397:3:13"
																				},
																				"nativeSrc": "3397:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3397:16:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3391:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "3391:5:13"
																		},
																		"nativeSrc": "3391:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3391:23:13"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3375:12:13",
																			"nodeType": "YulTypedName",
																			"src": "3375:12:13",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3461:12:13",
																				"nodeType": "YulIdentifier",
																				"src": "3461:12:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3479:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "3479:3:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3484:4:13",
																						"nodeType": "YulLiteral",
																						"src": "3484:4:13",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3475:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3475:3:13"
																				},
																				"nativeSrc": "3475:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3475:14:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "3427:33:13",
																			"nodeType": "YulIdentifier",
																			"src": "3427:33:13"
																		},
																		"nativeSrc": "3427:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3427:63:13"
																	},
																	"nativeSrc": "3427:63:13",
																	"nodeType": "YulExpressionStatement",
																	"src": "3427:63:13"
																}
															]
														},
														{
															"nativeSrc": "3510:167:13",
															"nodeType": "YulBlock",
															"src": "3510:167:13",
															"statements": [
																{
																	"nativeSrc": "3554:43:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3554:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3584:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3584:5:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3591:4:13",
																						"nodeType": "YulLiteral",
																						"src": "3591:4:13",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3580:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3580:3:13"
																				},
																				"nativeSrc": "3580:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3580:16:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3574:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "3574:5:13"
																		},
																		"nativeSrc": "3574:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3574:23:13"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3558:12:13",
																			"nodeType": "YulTypedName",
																			"src": "3558:12:13",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3638:12:13",
																				"nodeType": "YulIdentifier",
																				"src": "3638:12:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3656:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "3656:3:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3661:4:13",
																						"nodeType": "YulLiteral",
																						"src": "3661:4:13",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3652:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3652:3:13"
																				},
																				"nativeSrc": "3652:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3652:14:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "3610:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "3610:27:13"
																		},
																		"nativeSrc": "3610:57:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3610:57:13"
																	},
																	"nativeSrc": "3610:57:13",
																	"nodeType": "YulExpressionStatement",
																	"src": "3610:57:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_UserProfile_$916_memory_ptr_to_t_struct$_UserProfile_$916_memory_ptr_fromStack",
												"nativeSrc": "2800:884:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2909:5:13",
														"nodeType": "YulTypedName",
														"src": "2909:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2916:3:13",
														"nodeType": "YulTypedName",
														"src": "2916:3:13",
														"type": ""
													}
												],
												"src": "2800:884:13"
											},
											{
												"body": {
													"nativeSrc": "3918:593:13",
													"nodeType": "YulBlock",
													"src": "3918:593:13",
													"statements": [
														{
															"nativeSrc": "3928:26:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3928:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3944:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3944:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3949:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3949:4:13",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3940:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3940:3:13"
																},
																"nativeSrc": "3940:14:13",
																"nodeType": "YulFunctionCall",
																"src": "3940:14:13"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "3932:4:13",
																	"nodeType": "YulTypedName",
																	"src": "3932:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3964:171:13",
															"nodeType": "YulBlock",
															"src": "3964:171:13",
															"statements": [
																{
																	"nativeSrc": "4006:43:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4006:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4036:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4036:5:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4043:4:13",
																						"nodeType": "YulLiteral",
																						"src": "4043:4:13",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4032:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4032:3:13"
																				},
																				"nativeSrc": "4032:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4032:16:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4026:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "4026:5:13"
																		},
																		"nativeSrc": "4026:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4026:23:13"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4010:12:13",
																			"nodeType": "YulTypedName",
																			"src": "4010:12:13",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4096:12:13",
																				"nodeType": "YulIdentifier",
																				"src": "4096:12:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4114:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "4114:3:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4119:4:13",
																						"nodeType": "YulLiteral",
																						"src": "4119:4:13",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4110:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4110:3:13"
																				},
																				"nativeSrc": "4110:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4110:14:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "4062:33:13",
																			"nodeType": "YulIdentifier",
																			"src": "4062:33:13"
																		},
																		"nativeSrc": "4062:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4062:63:13"
																	},
																	"nativeSrc": "4062:63:13",
																	"nodeType": "YulExpressionStatement",
																	"src": "4062:63:13"
																}
															]
														},
														{
															"nativeSrc": "4145:175:13",
															"nodeType": "YulBlock",
															"src": "4145:175:13",
															"statements": [
																{
																	"nativeSrc": "4191:43:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4191:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4221:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4221:5:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4228:4:13",
																						"nodeType": "YulLiteral",
																						"src": "4228:4:13",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4217:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4217:3:13"
																				},
																				"nativeSrc": "4217:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4217:16:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4211:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "4211:5:13"
																		},
																		"nativeSrc": "4211:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4211:23:13"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4195:12:13",
																			"nodeType": "YulTypedName",
																			"src": "4195:12:13",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4281:12:13",
																				"nodeType": "YulIdentifier",
																				"src": "4281:12:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4299:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "4299:3:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4304:4:13",
																						"nodeType": "YulLiteral",
																						"src": "4304:4:13",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4295:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4295:3:13"
																				},
																				"nativeSrc": "4295:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4295:14:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "4247:33:13",
																			"nodeType": "YulIdentifier",
																			"src": "4247:33:13"
																		},
																		"nativeSrc": "4247:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4247:63:13"
																	},
																	"nativeSrc": "4247:63:13",
																	"nodeType": "YulExpressionStatement",
																	"src": "4247:63:13"
																}
															]
														},
														{
															"nativeSrc": "4330:174:13",
															"nodeType": "YulBlock",
															"src": "4330:174:13",
															"statements": [
																{
																	"nativeSrc": "4375:43:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4375:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4405:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4405:5:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4412:4:13",
																						"nodeType": "YulLiteral",
																						"src": "4412:4:13",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4401:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4401:3:13"
																				},
																				"nativeSrc": "4401:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4401:16:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4395:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "4395:5:13"
																		},
																		"nativeSrc": "4395:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4395:23:13"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4379:12:13",
																			"nodeType": "YulTypedName",
																			"src": "4379:12:13",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4465:12:13",
																				"nodeType": "YulIdentifier",
																				"src": "4465:12:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4483:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "4483:3:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4488:4:13",
																						"nodeType": "YulLiteral",
																						"src": "4488:4:13",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4479:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4479:3:13"
																				},
																				"nativeSrc": "4479:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4479:14:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "4431:33:13",
																			"nodeType": "YulIdentifier",
																			"src": "4431:33:13"
																		},
																		"nativeSrc": "4431:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4431:63:13"
																	},
																	"nativeSrc": "4431:63:13",
																	"nodeType": "YulExpressionStatement",
																	"src": "4431:63:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ProtocolAllocation_$923_memory_ptr_to_t_struct$_ProtocolAllocation_$923_memory_ptr_fromStack",
												"nativeSrc": "3782:729:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3905:5:13",
														"nodeType": "YulTypedName",
														"src": "3905:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3912:3:13",
														"nodeType": "YulTypedName",
														"src": "3912:3:13",
														"type": ""
													}
												],
												"src": "3782:729:13"
											},
											{
												"body": {
													"nativeSrc": "4582:53:13",
													"nodeType": "YulBlock",
													"src": "4582:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4599:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4599:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4622:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4622:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4604:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "4604:17:13"
																		},
																		"nativeSrc": "4604:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4604:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4592:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4592:6:13"
																},
																"nativeSrc": "4592:37:13",
																"nodeType": "YulFunctionCall",
																"src": "4592:37:13"
															},
															"nativeSrc": "4592:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "4592:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4517:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4570:5:13",
														"nodeType": "YulTypedName",
														"src": "4570:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4577:3:13",
														"nodeType": "YulTypedName",
														"src": "4577:3:13",
														"type": ""
													}
												],
												"src": "4517:118:13"
											},
											{
												"body": {
													"nativeSrc": "4921:417:13",
													"nodeType": "YulBlock",
													"src": "4921:417:13",
													"statements": [
														{
															"nativeSrc": "4931:27:13",
															"nodeType": "YulAssignment",
															"src": "4931:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4943:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4943:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4954:3:13",
																		"nodeType": "YulLiteral",
																		"src": "4954:3:13",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4939:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4939:3:13"
																},
																"nativeSrc": "4939:19:13",
																"nodeType": "YulFunctionCall",
																"src": "4939:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4931:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4931:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5068:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5068:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5081:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5081:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5092:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5092:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5077:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5077:3:13"
																		},
																		"nativeSrc": "5077:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5077:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_UserProfile_$916_memory_ptr_to_t_struct$_UserProfile_$916_memory_ptr_fromStack",
																	"nativeSrc": "4968:99:13",
																	"nodeType": "YulIdentifier",
																	"src": "4968:99:13"
																},
																"nativeSrc": "4968:127:13",
																"nodeType": "YulFunctionCall",
																"src": "4968:127:13"
															},
															"nativeSrc": "4968:127:13",
															"nodeType": "YulExpressionStatement",
															"src": "4968:127:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5219:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5219:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5232:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5232:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5243:3:13",
																				"nodeType": "YulLiteral",
																				"src": "5243:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5228:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5228:3:13"
																		},
																		"nativeSrc": "5228:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5228:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ProtocolAllocation_$923_memory_ptr_to_t_struct$_ProtocolAllocation_$923_memory_ptr_fromStack",
																	"nativeSrc": "5105:113:13",
																	"nodeType": "YulIdentifier",
																	"src": "5105:113:13"
																},
																"nativeSrc": "5105:143:13",
																"nodeType": "YulFunctionCall",
																"src": "5105:143:13"
															},
															"nativeSrc": "5105:143:13",
															"nodeType": "YulExpressionStatement",
															"src": "5105:143:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5302:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5302:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5315:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5315:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5326:3:13",
																				"nodeType": "YulLiteral",
																				"src": "5326:3:13",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5311:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5311:3:13"
																		},
																		"nativeSrc": "5311:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5311:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5258:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "5258:43:13"
																},
																"nativeSrc": "5258:73:13",
																"nodeType": "YulFunctionCall",
																"src": "5258:73:13"
															},
															"nativeSrc": "5258:73:13",
															"nodeType": "YulExpressionStatement",
															"src": "5258:73:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_UserProfile_$916_memory_ptr_t_struct$_ProtocolAllocation_$923_memory_ptr_t_uint256__to_t_struct$_UserProfile_$916_memory_ptr_t_struct$_ProtocolAllocation_$923_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "4641:697:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4877:9:13",
														"nodeType": "YulTypedName",
														"src": "4877:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4889:6:13",
														"nodeType": "YulTypedName",
														"src": "4889:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4897:6:13",
														"nodeType": "YulTypedName",
														"src": "4897:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4905:6:13",
														"nodeType": "YulTypedName",
														"src": "4905:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4916:4:13",
														"nodeType": "YulTypedName",
														"src": "4916:4:13",
														"type": ""
													}
												],
												"src": "4641:697:13"
											},
											{
												"body": {
													"nativeSrc": "5526:371:13",
													"nodeType": "YulBlock",
													"src": "5526:371:13",
													"statements": [
														{
															"nativeSrc": "5536:27:13",
															"nodeType": "YulAssignment",
															"src": "5536:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5548:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5548:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5559:3:13",
																		"nodeType": "YulLiteral",
																		"src": "5559:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5544:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5544:3:13"
																},
																"nativeSrc": "5544:19:13",
																"nodeType": "YulFunctionCall",
																"src": "5544:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5536:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5536:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5617:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5617:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5630:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5630:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5641:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5641:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5626:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5626:3:13"
																		},
																		"nativeSrc": "5626:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5626:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5573:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "5573:43:13"
																},
																"nativeSrc": "5573:71:13",
																"nodeType": "YulFunctionCall",
																"src": "5573:71:13"
															},
															"nativeSrc": "5573:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "5573:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5698:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5698:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5711:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5722:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5722:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5707:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5707:3:13"
																		},
																		"nativeSrc": "5707:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5707:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5654:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "5654:43:13"
																},
																"nativeSrc": "5654:72:13",
																"nodeType": "YulFunctionCall",
																"src": "5654:72:13"
															},
															"nativeSrc": "5654:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "5654:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5780:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5804:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:13"
																		},
																		"nativeSrc": "5789:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5736:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:13"
																},
																"nativeSrc": "5736:72:13",
																"nodeType": "YulFunctionCall",
																"src": "5736:72:13"
															},
															"nativeSrc": "5736:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "5736:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "5862:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5862:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5875:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5875:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5886:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5886:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5871:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5871:3:13"
																		},
																		"nativeSrc": "5871:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5871:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5818:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "5818:43:13"
																},
																"nativeSrc": "5818:72:13",
																"nodeType": "YulFunctionCall",
																"src": "5818:72:13"
															},
															"nativeSrc": "5818:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "5818:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5344:553:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5474:9:13",
														"nodeType": "YulTypedName",
														"src": "5474:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5486:6:13",
														"nodeType": "YulTypedName",
														"src": "5486:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5494:6:13",
														"nodeType": "YulTypedName",
														"src": "5494:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5502:6:13",
														"nodeType": "YulTypedName",
														"src": "5502:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5510:6:13",
														"nodeType": "YulTypedName",
														"src": "5510:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5521:4:13",
														"nodeType": "YulTypedName",
														"src": "5521:4:13",
														"type": ""
													}
												],
												"src": "5344:553:13"
											},
											{
												"body": {
													"nativeSrc": "5962:50:13",
													"nodeType": "YulBlock",
													"src": "5962:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5979:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5979:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5999:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5999:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "5984:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "5984:14:13"
																		},
																		"nativeSrc": "5984:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5984:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5972:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5972:6:13"
																},
																"nativeSrc": "5972:34:13",
																"nodeType": "YulFunctionCall",
																"src": "5972:34:13"
															},
															"nativeSrc": "5972:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "5972:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "5903:109:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5950:5:13",
														"nodeType": "YulTypedName",
														"src": "5950:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5957:3:13",
														"nodeType": "YulTypedName",
														"src": "5957:3:13",
														"type": ""
													}
												],
												"src": "5903:109:13"
											},
											{
												"body": {
													"nativeSrc": "6194:365:13",
													"nodeType": "YulBlock",
													"src": "6194:365:13",
													"statements": [
														{
															"nativeSrc": "6204:27:13",
															"nodeType": "YulAssignment",
															"src": "6204:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6216:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6216:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6227:3:13",
																		"nodeType": "YulLiteral",
																		"src": "6227:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6212:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6212:3:13"
																},
																"nativeSrc": "6212:19:13",
																"nodeType": "YulFunctionCall",
																"src": "6212:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6204:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6204:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6279:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6279:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6292:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6292:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6303:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6303:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6288:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6288:3:13"
																		},
																		"nativeSrc": "6288:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6288:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "6241:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "6241:37:13"
																},
																"nativeSrc": "6241:65:13",
																"nodeType": "YulFunctionCall",
																"src": "6241:65:13"
															},
															"nativeSrc": "6241:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "6241:65:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6360:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6360:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6373:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6373:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6384:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6384:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6369:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6369:3:13"
																		},
																		"nativeSrc": "6369:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6369:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6316:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6316:43:13"
																},
																"nativeSrc": "6316:72:13",
																"nodeType": "YulFunctionCall",
																"src": "6316:72:13"
															},
															"nativeSrc": "6316:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "6316:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6442:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6442:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6455:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6455:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6466:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6466:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6451:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6451:3:13"
																		},
																		"nativeSrc": "6451:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6451:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6398:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6398:43:13"
																},
																"nativeSrc": "6398:72:13",
																"nodeType": "YulFunctionCall",
																"src": "6398:72:13"
															},
															"nativeSrc": "6398:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "6398:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6524:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6524:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6537:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6537:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6548:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6548:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6533:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6533:3:13"
																		},
																		"nativeSrc": "6533:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6533:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6480:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6480:43:13"
																},
																"nativeSrc": "6480:72:13",
																"nodeType": "YulFunctionCall",
																"src": "6480:72:13"
															},
															"nativeSrc": "6480:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "6480:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint256_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6018:541:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6142:9:13",
														"nodeType": "YulTypedName",
														"src": "6142:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6154:6:13",
														"nodeType": "YulTypedName",
														"src": "6154:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6162:6:13",
														"nodeType": "YulTypedName",
														"src": "6162:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6170:6:13",
														"nodeType": "YulTypedName",
														"src": "6170:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6178:6:13",
														"nodeType": "YulTypedName",
														"src": "6178:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6189:4:13",
														"nodeType": "YulTypedName",
														"src": "6189:4:13",
														"type": ""
													}
												],
												"src": "6018:541:13"
											},
											{
												"body": {
													"nativeSrc": "6626:51:13",
													"nodeType": "YulBlock",
													"src": "6626:51:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6643:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6643:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6664:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6664:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6648:15:13",
																			"nodeType": "YulIdentifier",
																			"src": "6648:15:13"
																		},
																		"nativeSrc": "6648:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6648:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6636:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6636:6:13"
																},
																"nativeSrc": "6636:35:13",
																"nodeType": "YulFunctionCall",
																"src": "6636:35:13"
															},
															"nativeSrc": "6636:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "6636:35:13"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6565:112:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6614:5:13",
														"nodeType": "YulTypedName",
														"src": "6614:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6621:3:13",
														"nodeType": "YulTypedName",
														"src": "6621:3:13",
														"type": ""
													}
												],
												"src": "6565:112:13"
											},
											{
												"body": {
													"nativeSrc": "6855:361:13",
													"nodeType": "YulBlock",
													"src": "6855:361:13",
													"statements": [
														{
															"nativeSrc": "6865:27:13",
															"nodeType": "YulAssignment",
															"src": "6865:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6877:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6877:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6888:3:13",
																		"nodeType": "YulLiteral",
																		"src": "6888:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6873:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6873:3:13"
																},
																"nativeSrc": "6873:19:13",
																"nodeType": "YulFunctionCall",
																"src": "6873:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6865:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6865:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6942:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6942:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6955:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6955:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6966:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6966:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6951:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6951:3:13"
																		},
																		"nativeSrc": "6951:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6951:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6902:39:13",
																	"nodeType": "YulIdentifier",
																	"src": "6902:39:13"
																},
																"nativeSrc": "6902:67:13",
																"nodeType": "YulFunctionCall",
																"src": "6902:67:13"
															},
															"nativeSrc": "6902:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "6902:67:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7023:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7023:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7036:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7036:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7047:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7047:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7032:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7032:3:13"
																		},
																		"nativeSrc": "7032:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7032:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6979:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6979:43:13"
																},
																"nativeSrc": "6979:72:13",
																"nodeType": "YulFunctionCall",
																"src": "6979:72:13"
															},
															"nativeSrc": "6979:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "6979:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7105:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7105:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7118:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7118:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7129:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7129:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7114:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7114:3:13"
																		},
																		"nativeSrc": "7114:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7114:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7061:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "7061:43:13"
																},
																"nativeSrc": "7061:72:13",
																"nodeType": "YulFunctionCall",
																"src": "7061:72:13"
															},
															"nativeSrc": "7061:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "7061:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "7181:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7181:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7194:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7194:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7205:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7205:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7190:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7190:3:13"
																		},
																		"nativeSrc": "7190:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7190:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "7143:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "7143:37:13"
																},
																"nativeSrc": "7143:66:13",
																"nodeType": "YulFunctionCall",
																"src": "7143:66:13"
															},
															"nativeSrc": "7143:66:13",
															"nodeType": "YulExpressionStatement",
															"src": "7143:66:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8_t_uint256_t_uint256_t_bool__to_t_uint8_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "6683:533:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6803:9:13",
														"nodeType": "YulTypedName",
														"src": "6803:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6815:6:13",
														"nodeType": "YulTypedName",
														"src": "6815:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6823:6:13",
														"nodeType": "YulTypedName",
														"src": "6823:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6831:6:13",
														"nodeType": "YulTypedName",
														"src": "6831:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6839:6:13",
														"nodeType": "YulTypedName",
														"src": "6839:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6850:4:13",
														"nodeType": "YulTypedName",
														"src": "6850:4:13",
														"type": ""
													}
												],
												"src": "6683:533:13"
											},
											{
												"body": {
													"nativeSrc": "7376:288:13",
													"nodeType": "YulBlock",
													"src": "7376:288:13",
													"statements": [
														{
															"nativeSrc": "7386:26:13",
															"nodeType": "YulAssignment",
															"src": "7386:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7398:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7398:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7409:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7409:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7394:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7394:3:13"
																},
																"nativeSrc": "7394:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7394:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7386:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7386:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7466:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7466:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7479:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7479:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7490:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7490:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7475:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7475:3:13"
																		},
																		"nativeSrc": "7475:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7475:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7422:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "7422:43:13"
																},
																"nativeSrc": "7422:71:13",
																"nodeType": "YulFunctionCall",
																"src": "7422:71:13"
															},
															"nativeSrc": "7422:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "7422:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7547:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7547:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7560:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7560:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7571:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7571:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7556:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7556:3:13"
																		},
																		"nativeSrc": "7556:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7556:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7503:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "7503:43:13"
																},
																"nativeSrc": "7503:72:13",
																"nodeType": "YulFunctionCall",
																"src": "7503:72:13"
															},
															"nativeSrc": "7503:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "7503:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7629:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7629:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7642:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7642:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7653:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7653:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7638:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7638:3:13"
																		},
																		"nativeSrc": "7638:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7638:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7585:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "7585:43:13"
																},
																"nativeSrc": "7585:72:13",
																"nodeType": "YulFunctionCall",
																"src": "7585:72:13"
															},
															"nativeSrc": "7585:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "7585:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7222:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7332:9:13",
														"nodeType": "YulTypedName",
														"src": "7332:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7344:6:13",
														"nodeType": "YulTypedName",
														"src": "7344:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7352:6:13",
														"nodeType": "YulTypedName",
														"src": "7352:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7360:6:13",
														"nodeType": "YulTypedName",
														"src": "7360:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7371:4:13",
														"nodeType": "YulTypedName",
														"src": "7371:4:13",
														"type": ""
													}
												],
												"src": "7222:442:13"
											},
											{
												"body": {
													"nativeSrc": "7713:79:13",
													"nodeType": "YulBlock",
													"src": "7713:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7770:16:13",
																"nodeType": "YulBlock",
																"src": "7770:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7779:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7779:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7782:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7782:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7772:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7772:6:13"
																			},
																			"nativeSrc": "7772:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7772:12:13"
																		},
																		"nativeSrc": "7772:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7772:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7736:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "7736:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7761:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "7761:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "7743:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "7743:17:13"
																				},
																				"nativeSrc": "7743:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7743:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7733:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "7733:2:13"
																		},
																		"nativeSrc": "7733:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7733:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7726:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7726:6:13"
																},
																"nativeSrc": "7726:43:13",
																"nodeType": "YulFunctionCall",
																"src": "7726:43:13"
															},
															"nativeSrc": "7723:63:13",
															"nodeType": "YulIf",
															"src": "7723:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "7670:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7706:5:13",
														"nodeType": "YulTypedName",
														"src": "7706:5:13",
														"type": ""
													}
												],
												"src": "7670:122:13"
											},
											{
												"body": {
													"nativeSrc": "7850:87:13",
													"nodeType": "YulBlock",
													"src": "7850:87:13",
													"statements": [
														{
															"nativeSrc": "7860:29:13",
															"nodeType": "YulAssignment",
															"src": "7860:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7882:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7882:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7869:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "7869:12:13"
																},
																"nativeSrc": "7869:20:13",
																"nodeType": "YulFunctionCall",
																"src": "7869:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7860:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "7860:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7925:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7925:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "7898:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "7898:26:13"
																},
																"nativeSrc": "7898:33:13",
																"nodeType": "YulFunctionCall",
																"src": "7898:33:13"
															},
															"nativeSrc": "7898:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "7898:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "7798:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7828:6:13",
														"nodeType": "YulTypedName",
														"src": "7828:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7836:3:13",
														"nodeType": "YulTypedName",
														"src": "7836:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7844:5:13",
														"nodeType": "YulTypedName",
														"src": "7844:5:13",
														"type": ""
													}
												],
												"src": "7798:139:13"
											},
											{
												"body": {
													"nativeSrc": "8043:519:13",
													"nodeType": "YulBlock",
													"src": "8043:519:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8089:83:13",
																"nodeType": "YulBlock",
																"src": "8089:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8091:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "8091:77:13"
																			},
																			"nativeSrc": "8091:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8091:79:13"
																		},
																		"nativeSrc": "8091:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8091:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8064:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8064:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8073:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8073:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8060:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8060:3:13"
																		},
																		"nativeSrc": "8060:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8060:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8085:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8085:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8056:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8056:3:13"
																},
																"nativeSrc": "8056:32:13",
																"nodeType": "YulFunctionCall",
																"src": "8056:32:13"
															},
															"nativeSrc": "8053:119:13",
															"nodeType": "YulIf",
															"src": "8053:119:13"
														},
														{
															"nativeSrc": "8182:117:13",
															"nodeType": "YulBlock",
															"src": "8182:117:13",
															"statements": [
																{
																	"nativeSrc": "8197:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8197:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8211:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8211:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8201:6:13",
																			"nodeType": "YulTypedName",
																			"src": "8201:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8226:63:13",
																	"nodeType": "YulAssignment",
																	"src": "8226:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8261:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "8261:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8272:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8272:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8257:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8257:3:13"
																				},
																				"nativeSrc": "8257:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8257:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8281:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8281:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8236:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "8236:20:13"
																		},
																		"nativeSrc": "8236:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8236:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8226:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8226:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8309:118:13",
															"nodeType": "YulBlock",
															"src": "8309:118:13",
															"statements": [
																{
																	"nativeSrc": "8324:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8324:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8338:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8338:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8328:6:13",
																			"nodeType": "YulTypedName",
																			"src": "8328:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8354:63:13",
																	"nodeType": "YulAssignment",
																	"src": "8354:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8389:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "8389:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8400:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8400:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8385:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8385:3:13"
																				},
																				"nativeSrc": "8385:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8385:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8409:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8409:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8364:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "8364:20:13"
																		},
																		"nativeSrc": "8364:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8364:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8354:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8354:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8437:118:13",
															"nodeType": "YulBlock",
															"src": "8437:118:13",
															"statements": [
																{
																	"nativeSrc": "8452:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8452:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8466:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8466:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8456:6:13",
																			"nodeType": "YulTypedName",
																			"src": "8456:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8482:63:13",
																	"nodeType": "YulAssignment",
																	"src": "8482:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8517:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "8517:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8528:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8528:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8513:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8513:3:13"
																				},
																				"nativeSrc": "8513:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8513:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8537:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8537:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8492:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "8492:20:13"
																		},
																		"nativeSrc": "8492:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8492:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8482:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8482:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nativeSrc": "7943:619:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7997:9:13",
														"nodeType": "YulTypedName",
														"src": "7997:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8008:7:13",
														"nodeType": "YulTypedName",
														"src": "8008:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8020:6:13",
														"nodeType": "YulTypedName",
														"src": "8020:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8028:6:13",
														"nodeType": "YulTypedName",
														"src": "8028:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8036:6:13",
														"nodeType": "YulTypedName",
														"src": "8036:6:13",
														"type": ""
													}
												],
												"src": "7943:619:13"
											},
											{
												"body": {
													"nativeSrc": "8666:124:13",
													"nodeType": "YulBlock",
													"src": "8666:124:13",
													"statements": [
														{
															"nativeSrc": "8676:26:13",
															"nodeType": "YulAssignment",
															"src": "8676:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8688:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8688:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8699:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8699:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8684:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8684:3:13"
																},
																"nativeSrc": "8684:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8684:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8676:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8676:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8756:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8756:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8769:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8769:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8780:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8780:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8765:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8765:3:13"
																		},
																		"nativeSrc": "8765:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8765:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8712:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "8712:43:13"
																},
																"nativeSrc": "8712:71:13",
																"nodeType": "YulFunctionCall",
																"src": "8712:71:13"
															},
															"nativeSrc": "8712:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "8712:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "8568:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8638:9:13",
														"nodeType": "YulTypedName",
														"src": "8638:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8650:6:13",
														"nodeType": "YulTypedName",
														"src": "8650:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8661:4:13",
														"nodeType": "YulTypedName",
														"src": "8661:4:13",
														"type": ""
													}
												],
												"src": "8568:222:13"
											},
											{
												"body": {
													"nativeSrc": "8885:28:13",
													"nodeType": "YulBlock",
													"src": "8885:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8902:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8902:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8905:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8905:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8895:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8895:6:13"
																},
																"nativeSrc": "8895:12:13",
																"nodeType": "YulFunctionCall",
																"src": "8895:12:13"
															},
															"nativeSrc": "8895:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "8895:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "8796:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "8796:117:13"
											},
											{
												"body": {
													"nativeSrc": "9008:28:13",
													"nodeType": "YulBlock",
													"src": "9008:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9025:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9025:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9028:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9028:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9018:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9018:6:13"
																},
																"nativeSrc": "9018:12:13",
																"nodeType": "YulFunctionCall",
																"src": "9018:12:13"
															},
															"nativeSrc": "9018:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "9018:12:13"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "8919:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "8919:117:13"
											},
											{
												"body": {
													"nativeSrc": "9131:28:13",
													"nodeType": "YulBlock",
													"src": "9131:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9148:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9148:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9151:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9151:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9141:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9141:6:13"
																},
																"nativeSrc": "9141:12:13",
																"nodeType": "YulFunctionCall",
																"src": "9141:12:13"
															},
															"nativeSrc": "9141:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "9141:12:13"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "9042:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "9042:117:13"
											},
											{
												"body": {
													"nativeSrc": "9254:478:13",
													"nodeType": "YulBlock",
													"src": "9254:478:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9303:83:13",
																"nodeType": "YulBlock",
																"src": "9303:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9305:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "9305:77:13"
																			},
																			"nativeSrc": "9305:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9305:79:13"
																		},
																		"nativeSrc": "9305:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9305:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9282:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9282:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9290:4:13",
																						"nodeType": "YulLiteral",
																						"src": "9290:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9278:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9278:3:13"
																				},
																				"nativeSrc": "9278:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9278:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9297:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9297:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9274:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9274:3:13"
																		},
																		"nativeSrc": "9274:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9274:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9267:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9267:6:13"
																},
																"nativeSrc": "9267:35:13",
																"nodeType": "YulFunctionCall",
																"src": "9267:35:13"
															},
															"nativeSrc": "9264:122:13",
															"nodeType": "YulIf",
															"src": "9264:122:13"
														},
														{
															"nativeSrc": "9395:30:13",
															"nodeType": "YulAssignment",
															"src": "9395:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9418:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9418:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9405:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "9405:12:13"
																},
																"nativeSrc": "9405:20:13",
																"nodeType": "YulFunctionCall",
																"src": "9405:20:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9395:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9395:6:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9468:83:13",
																"nodeType": "YulBlock",
																"src": "9468:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "9470:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "9470:77:13"
																			},
																			"nativeSrc": "9470:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9470:79:13"
																		},
																		"nativeSrc": "9470:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9470:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9440:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9440:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9448:18:13",
																		"nodeType": "YulLiteral",
																		"src": "9448:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9437:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9437:2:13"
																},
																"nativeSrc": "9437:30:13",
																"nodeType": "YulFunctionCall",
																"src": "9437:30:13"
															},
															"nativeSrc": "9434:117:13",
															"nodeType": "YulIf",
															"src": "9434:117:13"
														},
														{
															"nativeSrc": "9560:29:13",
															"nodeType": "YulAssignment",
															"src": "9560:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9576:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9576:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9584:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9584:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9572:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9572:3:13"
																},
																"nativeSrc": "9572:17:13",
																"nodeType": "YulFunctionCall",
																"src": "9572:17:13"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "9560:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "9560:8:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9643:83:13",
																"nodeType": "YulBlock",
																"src": "9643:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "9645:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "9645:77:13"
																			},
																			"nativeSrc": "9645:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9645:79:13"
																		},
																		"nativeSrc": "9645:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9645:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "9608:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "9608:8:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "9622:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9622:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9630:4:13",
																						"nodeType": "YulLiteral",
																						"src": "9630:4:13",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "9618:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9618:3:13"
																				},
																				"nativeSrc": "9618:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9618:17:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9604:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9604:3:13"
																		},
																		"nativeSrc": "9604:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9604:32:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9638:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9638:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9601:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9601:2:13"
																},
																"nativeSrc": "9601:41:13",
																"nodeType": "YulFunctionCall",
																"src": "9601:41:13"
															},
															"nativeSrc": "9598:128:13",
															"nodeType": "YulIf",
															"src": "9598:128:13"
														}
													]
												},
												"name": "abi_decode_t_string_calldata_ptr",
												"nativeSrc": "9179:553:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9221:6:13",
														"nodeType": "YulTypedName",
														"src": "9221:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9229:3:13",
														"nodeType": "YulTypedName",
														"src": "9229:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "9237:8:13",
														"nodeType": "YulTypedName",
														"src": "9237:8:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9247:6:13",
														"nodeType": "YulTypedName",
														"src": "9247:6:13",
														"type": ""
													}
												],
												"src": "9179:553:13"
											},
											{
												"body": {
													"nativeSrc": "9841:571:13",
													"nodeType": "YulBlock",
													"src": "9841:571:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9887:83:13",
																"nodeType": "YulBlock",
																"src": "9887:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9889:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "9889:77:13"
																			},
																			"nativeSrc": "9889:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9889:79:13"
																		},
																		"nativeSrc": "9889:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9889:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9862:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9862:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9871:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9871:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9858:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9858:3:13"
																		},
																		"nativeSrc": "9858:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9858:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9883:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9883:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9854:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9854:3:13"
																},
																"nativeSrc": "9854:32:13",
																"nodeType": "YulFunctionCall",
																"src": "9854:32:13"
															},
															"nativeSrc": "9851:119:13",
															"nodeType": "YulIf",
															"src": "9851:119:13"
														},
														{
															"nativeSrc": "9980:297:13",
															"nodeType": "YulBlock",
															"src": "9980:297:13",
															"statements": [
																{
																	"nativeSrc": "9995:45:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9995:45:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10026:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10026:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10037:1:13",
																						"nodeType": "YulLiteral",
																						"src": "10037:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10022:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10022:3:13"
																				},
																				"nativeSrc": "10022:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10022:17:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10009:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "10009:12:13"
																		},
																		"nativeSrc": "10009:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10009:31:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9999:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9999:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10087:83:13",
																		"nodeType": "YulBlock",
																		"src": "10087:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10089:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "10089:77:13"
																					},
																					"nativeSrc": "10089:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "10089:79:13"
																				},
																				"nativeSrc": "10089:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "10089:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10059:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10059:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10067:18:13",
																				"nodeType": "YulLiteral",
																				"src": "10067:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10056:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "10056:2:13"
																		},
																		"nativeSrc": "10056:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10056:30:13"
																	},
																	"nativeSrc": "10053:117:13",
																	"nodeType": "YulIf",
																	"src": "10053:117:13"
																},
																{
																	"nativeSrc": "10184:83:13",
																	"nodeType": "YulAssignment",
																	"src": "10184:83:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10239:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10239:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10250:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10250:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10235:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10235:3:13"
																				},
																				"nativeSrc": "10235:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10235:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10259:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10259:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_calldata_ptr",
																			"nativeSrc": "10202:32:13",
																			"nodeType": "YulIdentifier",
																			"src": "10202:32:13"
																		},
																		"nativeSrc": "10202:65:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10202:65:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10184:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10184:6:13"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "10192:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10192:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10287:118:13",
															"nodeType": "YulBlock",
															"src": "10287:118:13",
															"statements": [
																{
																	"nativeSrc": "10302:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10302:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10316:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10316:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10306:6:13",
																			"nodeType": "YulTypedName",
																			"src": "10306:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10332:63:13",
																	"nodeType": "YulAssignment",
																	"src": "10332:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10367:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10367:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10378:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10378:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10363:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10363:3:13"
																				},
																				"nativeSrc": "10363:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10363:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10387:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10387:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10342:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "10342:20:13"
																		},
																		"nativeSrc": "10342:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10342:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10332:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10332:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_calldata_ptrt_address",
												"nativeSrc": "9738:674:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9795:9:13",
														"nodeType": "YulTypedName",
														"src": "9795:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9806:7:13",
														"nodeType": "YulTypedName",
														"src": "9806:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9818:6:13",
														"nodeType": "YulTypedName",
														"src": "9818:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9826:6:13",
														"nodeType": "YulTypedName",
														"src": "9826:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9834:6:13",
														"nodeType": "YulTypedName",
														"src": "9834:6:13",
														"type": ""
													}
												],
												"src": "9738:674:13"
											},
											{
												"body": {
													"nativeSrc": "10514:73:13",
													"nodeType": "YulBlock",
													"src": "10514:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10531:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10531:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10536:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10536:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10524:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10524:6:13"
																},
																"nativeSrc": "10524:19:13",
																"nodeType": "YulFunctionCall",
																"src": "10524:19:13"
															},
															"nativeSrc": "10524:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "10524:19:13"
														},
														{
															"nativeSrc": "10552:29:13",
															"nodeType": "YulAssignment",
															"src": "10552:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10571:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10571:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10576:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10576:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10567:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10567:3:13"
																},
																"nativeSrc": "10567:14:13",
																"nodeType": "YulFunctionCall",
																"src": "10567:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10552:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "10552:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "10418:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10486:3:13",
														"nodeType": "YulTypedName",
														"src": "10486:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10491:6:13",
														"nodeType": "YulTypedName",
														"src": "10491:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10502:11:13",
														"nodeType": "YulTypedName",
														"src": "10502:11:13",
														"type": ""
													}
												],
												"src": "10418:169:13"
											},
											{
												"body": {
													"nativeSrc": "10699:61:13",
													"nodeType": "YulBlock",
													"src": "10699:61:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10721:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10721:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10729:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10729:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10717:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10717:3:13"
																		},
																		"nativeSrc": "10717:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10717:14:13"
																	},
																	{
																		"hexValue": "4465706f73697420746f6f20736d616c6c",
																		"kind": "string",
																		"nativeSrc": "10733:19:13",
																		"nodeType": "YulLiteral",
																		"src": "10733:19:13",
																		"type": "",
																		"value": "Deposit too small"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10710:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10710:6:13"
																},
																"nativeSrc": "10710:43:13",
																"nodeType": "YulFunctionCall",
																"src": "10710:43:13"
															},
															"nativeSrc": "10710:43:13",
															"nodeType": "YulExpressionStatement",
															"src": "10710:43:13"
														}
													]
												},
												"name": "store_literal_in_memory_e47e4d4019fbc3201dd7924d57a3f1daa90e6a7f83fef433220dabdb84cceb65",
												"nativeSrc": "10593:167:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10691:6:13",
														"nodeType": "YulTypedName",
														"src": "10691:6:13",
														"type": ""
													}
												],
												"src": "10593:167:13"
											},
											{
												"body": {
													"nativeSrc": "10912:220:13",
													"nodeType": "YulBlock",
													"src": "10912:220:13",
													"statements": [
														{
															"nativeSrc": "10922:74:13",
															"nodeType": "YulAssignment",
															"src": "10922:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10988:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10988:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10993:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10993:2:13",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10929:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "10929:58:13"
																},
																"nativeSrc": "10929:67:13",
																"nodeType": "YulFunctionCall",
																"src": "10929:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10922:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10922:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11094:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11094:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e47e4d4019fbc3201dd7924d57a3f1daa90e6a7f83fef433220dabdb84cceb65",
																	"nativeSrc": "11005:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "11005:88:13"
																},
																"nativeSrc": "11005:93:13",
																"nodeType": "YulFunctionCall",
																"src": "11005:93:13"
															},
															"nativeSrc": "11005:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "11005:93:13"
														},
														{
															"nativeSrc": "11107:19:13",
															"nodeType": "YulAssignment",
															"src": "11107:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11118:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11118:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11123:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11123:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11114:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11114:3:13"
																},
																"nativeSrc": "11114:12:13",
																"nodeType": "YulFunctionCall",
																"src": "11114:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11107:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11107:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e47e4d4019fbc3201dd7924d57a3f1daa90e6a7f83fef433220dabdb84cceb65_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10766:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10900:3:13",
														"nodeType": "YulTypedName",
														"src": "10900:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10908:3:13",
														"nodeType": "YulTypedName",
														"src": "10908:3:13",
														"type": ""
													}
												],
												"src": "10766:366:13"
											},
											{
												"body": {
													"nativeSrc": "11309:248:13",
													"nodeType": "YulBlock",
													"src": "11309:248:13",
													"statements": [
														{
															"nativeSrc": "11319:26:13",
															"nodeType": "YulAssignment",
															"src": "11319:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11331:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11331:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11342:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11342:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11327:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11327:3:13"
																},
																"nativeSrc": "11327:18:13",
																"nodeType": "YulFunctionCall",
																"src": "11327:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11319:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11319:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11366:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11366:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11377:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11377:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11362:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11362:3:13"
																		},
																		"nativeSrc": "11362:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11362:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11385:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "11385:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11391:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11391:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11381:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11381:3:13"
																		},
																		"nativeSrc": "11381:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11381:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11355:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11355:6:13"
																},
																"nativeSrc": "11355:47:13",
																"nodeType": "YulFunctionCall",
																"src": "11355:47:13"
															},
															"nativeSrc": "11355:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "11355:47:13"
														},
														{
															"nativeSrc": "11411:139:13",
															"nodeType": "YulAssignment",
															"src": "11411:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11545:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "11545:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e47e4d4019fbc3201dd7924d57a3f1daa90e6a7f83fef433220dabdb84cceb65_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11419:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "11419:124:13"
																},
																"nativeSrc": "11419:131:13",
																"nodeType": "YulFunctionCall",
																"src": "11419:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11411:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11411:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e47e4d4019fbc3201dd7924d57a3f1daa90e6a7f83fef433220dabdb84cceb65__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11138:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11289:9:13",
														"nodeType": "YulTypedName",
														"src": "11289:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11304:4:13",
														"nodeType": "YulTypedName",
														"src": "11304:4:13",
														"type": ""
													}
												],
												"src": "11138:419:13"
											},
											{
												"body": {
													"nativeSrc": "11669:62:13",
													"nodeType": "YulBlock",
													"src": "11669:62:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11691:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11691:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11699:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11699:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11687:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11687:3:13"
																		},
																		"nativeSrc": "11687:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11687:14:13"
																	},
																	{
																		"hexValue": "496e76616c6964207269736b2073636f7265",
																		"kind": "string",
																		"nativeSrc": "11703:20:13",
																		"nodeType": "YulLiteral",
																		"src": "11703:20:13",
																		"type": "",
																		"value": "Invalid risk score"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11680:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11680:6:13"
																},
																"nativeSrc": "11680:44:13",
																"nodeType": "YulFunctionCall",
																"src": "11680:44:13"
															},
															"nativeSrc": "11680:44:13",
															"nodeType": "YulExpressionStatement",
															"src": "11680:44:13"
														}
													]
												},
												"name": "store_literal_in_memory_4f3530f04718d4d533ba4472936463d898d6bb1446e605473122cb9219ca1a7a",
												"nativeSrc": "11563:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11661:6:13",
														"nodeType": "YulTypedName",
														"src": "11661:6:13",
														"type": ""
													}
												],
												"src": "11563:168:13"
											},
											{
												"body": {
													"nativeSrc": "11883:220:13",
													"nodeType": "YulBlock",
													"src": "11883:220:13",
													"statements": [
														{
															"nativeSrc": "11893:74:13",
															"nodeType": "YulAssignment",
															"src": "11893:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11959:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11959:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11964:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11964:2:13",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11900:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "11900:58:13"
																},
																"nativeSrc": "11900:67:13",
																"nodeType": "YulFunctionCall",
																"src": "11900:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11893:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11893:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12065:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12065:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4f3530f04718d4d533ba4472936463d898d6bb1446e605473122cb9219ca1a7a",
																	"nativeSrc": "11976:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "11976:88:13"
																},
																"nativeSrc": "11976:93:13",
																"nodeType": "YulFunctionCall",
																"src": "11976:93:13"
															},
															"nativeSrc": "11976:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "11976:93:13"
														},
														{
															"nativeSrc": "12078:19:13",
															"nodeType": "YulAssignment",
															"src": "12078:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12089:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12089:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12094:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12094:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12085:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12085:3:13"
																},
																"nativeSrc": "12085:12:13",
																"nodeType": "YulFunctionCall",
																"src": "12085:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12078:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12078:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4f3530f04718d4d533ba4472936463d898d6bb1446e605473122cb9219ca1a7a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11737:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11871:3:13",
														"nodeType": "YulTypedName",
														"src": "11871:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11879:3:13",
														"nodeType": "YulTypedName",
														"src": "11879:3:13",
														"type": ""
													}
												],
												"src": "11737:366:13"
											},
											{
												"body": {
													"nativeSrc": "12280:248:13",
													"nodeType": "YulBlock",
													"src": "12280:248:13",
													"statements": [
														{
															"nativeSrc": "12290:26:13",
															"nodeType": "YulAssignment",
															"src": "12290:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12302:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12302:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12313:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12313:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12298:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12298:3:13"
																},
																"nativeSrc": "12298:18:13",
																"nodeType": "YulFunctionCall",
																"src": "12298:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12290:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12290:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12337:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12337:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12348:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12348:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12333:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12333:3:13"
																		},
																		"nativeSrc": "12333:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12333:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12356:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "12356:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12362:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12362:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12352:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12352:3:13"
																		},
																		"nativeSrc": "12352:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12352:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12326:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12326:6:13"
																},
																"nativeSrc": "12326:47:13",
																"nodeType": "YulFunctionCall",
																"src": "12326:47:13"
															},
															"nativeSrc": "12326:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "12326:47:13"
														},
														{
															"nativeSrc": "12382:139:13",
															"nodeType": "YulAssignment",
															"src": "12382:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12516:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "12516:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4f3530f04718d4d533ba4472936463d898d6bb1446e605473122cb9219ca1a7a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12390:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "12390:124:13"
																},
																"nativeSrc": "12390:131:13",
																"nodeType": "YulFunctionCall",
																"src": "12390:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12382:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12382:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4f3530f04718d4d533ba4472936463d898d6bb1446e605473122cb9219ca1a7a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12109:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12260:9:13",
														"nodeType": "YulTypedName",
														"src": "12260:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12275:4:13",
														"nodeType": "YulTypedName",
														"src": "12275:4:13",
														"type": ""
													}
												],
												"src": "12109:419:13"
											},
											{
												"body": {
													"nativeSrc": "12562:152:13",
													"nodeType": "YulBlock",
													"src": "12562:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12579:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12579:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12582:77:13",
																		"nodeType": "YulLiteral",
																		"src": "12582:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12572:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12572:6:13"
																},
																"nativeSrc": "12572:88:13",
																"nodeType": "YulFunctionCall",
																"src": "12572:88:13"
															},
															"nativeSrc": "12572:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "12572:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12676:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12676:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12679:4:13",
																		"nodeType": "YulLiteral",
																		"src": "12679:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12669:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12669:6:13"
																},
																"nativeSrc": "12669:15:13",
																"nodeType": "YulFunctionCall",
																"src": "12669:15:13"
															},
															"nativeSrc": "12669:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "12669:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12700:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12700:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12703:4:13",
																		"nodeType": "YulLiteral",
																		"src": "12703:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12693:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12693:6:13"
																},
																"nativeSrc": "12693:15:13",
																"nodeType": "YulFunctionCall",
																"src": "12693:15:13"
															},
															"nativeSrc": "12693:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "12693:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "12534:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "12534:180:13"
											},
											{
												"body": {
													"nativeSrc": "12764:147:13",
													"nodeType": "YulBlock",
													"src": "12764:147:13",
													"statements": [
														{
															"nativeSrc": "12774:25:13",
															"nodeType": "YulAssignment",
															"src": "12774:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12797:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "12797:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12779:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "12779:17:13"
																},
																"nativeSrc": "12779:20:13",
																"nodeType": "YulFunctionCall",
																"src": "12779:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12774:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "12774:1:13"
																}
															]
														},
														{
															"nativeSrc": "12808:25:13",
															"nodeType": "YulAssignment",
															"src": "12808:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12831:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "12831:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12813:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "12813:17:13"
																},
																"nativeSrc": "12813:20:13",
																"nodeType": "YulFunctionCall",
																"src": "12813:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12808:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "12808:1:13"
																}
															]
														},
														{
															"nativeSrc": "12842:16:13",
															"nodeType": "YulAssignment",
															"src": "12842:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12853:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "12853:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12856:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "12856:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12849:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12849:3:13"
																},
																"nativeSrc": "12849:9:13",
																"nodeType": "YulFunctionCall",
																"src": "12849:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12842:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12842:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12882:22:13",
																"nodeType": "YulBlock",
																"src": "12882:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12884:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "12884:16:13"
																			},
																			"nativeSrc": "12884:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12884:18:13"
																		},
																		"nativeSrc": "12884:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12884:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12874:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "12874:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12877:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12877:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12871:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "12871:2:13"
																},
																"nativeSrc": "12871:10:13",
																"nodeType": "YulFunctionCall",
																"src": "12871:10:13"
															},
															"nativeSrc": "12868:36:13",
															"nodeType": "YulIf",
															"src": "12868:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12720:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12751:1:13",
														"nodeType": "YulTypedName",
														"src": "12751:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12754:1:13",
														"nodeType": "YulTypedName",
														"src": "12754:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12760:3:13",
														"nodeType": "YulTypedName",
														"src": "12760:3:13",
														"type": ""
													}
												],
												"src": "12720:191:13"
											},
											{
												"body": {
													"nativeSrc": "13039:202:13",
													"nodeType": "YulBlock",
													"src": "13039:202:13",
													"statements": [
														{
															"nativeSrc": "13049:26:13",
															"nodeType": "YulAssignment",
															"src": "13049:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13061:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13061:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13072:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13072:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13057:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13057:3:13"
																},
																"nativeSrc": "13057:18:13",
																"nodeType": "YulFunctionCall",
																"src": "13057:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13049:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13049:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13129:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13129:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13142:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13142:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13153:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13153:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13138:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13138:3:13"
																		},
																		"nativeSrc": "13138:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13138:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13085:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "13085:43:13"
																},
																"nativeSrc": "13085:71:13",
																"nodeType": "YulFunctionCall",
																"src": "13085:71:13"
															},
															"nativeSrc": "13085:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "13085:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13206:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13206:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13219:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13219:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13230:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13230:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13215:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13215:3:13"
																		},
																		"nativeSrc": "13215:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13215:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "13166:39:13",
																	"nodeType": "YulIdentifier",
																	"src": "13166:39:13"
																},
																"nativeSrc": "13166:68:13",
																"nodeType": "YulFunctionCall",
																"src": "13166:68:13"
															},
															"nativeSrc": "13166:68:13",
															"nodeType": "YulExpressionStatement",
															"src": "13166:68:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint8__to_t_uint256_t_uint8__fromStack_reversed",
												"nativeSrc": "12917:324:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13003:9:13",
														"nodeType": "YulTypedName",
														"src": "13003:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13015:6:13",
														"nodeType": "YulTypedName",
														"src": "13015:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13023:6:13",
														"nodeType": "YulTypedName",
														"src": "13023:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13034:4:13",
														"nodeType": "YulTypedName",
														"src": "13034:4:13",
														"type": ""
													}
												],
												"src": "12917:324:13"
											},
											{
												"body": {
													"nativeSrc": "13353:68:13",
													"nodeType": "YulBlock",
													"src": "13353:68:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13375:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13375:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13383:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13383:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13371:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13371:3:13"
																		},
																		"nativeSrc": "13371:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13371:14:13"
																	},
																	{
																		"hexValue": "4e6f206465706f7369747320746f20726562616c616e6365",
																		"kind": "string",
																		"nativeSrc": "13387:26:13",
																		"nodeType": "YulLiteral",
																		"src": "13387:26:13",
																		"type": "",
																		"value": "No deposits to rebalance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13364:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13364:6:13"
																},
																"nativeSrc": "13364:50:13",
																"nodeType": "YulFunctionCall",
																"src": "13364:50:13"
															},
															"nativeSrc": "13364:50:13",
															"nodeType": "YulExpressionStatement",
															"src": "13364:50:13"
														}
													]
												},
												"name": "store_literal_in_memory_9ddaa44d722a3a8812710279db1e7f7e441f48ae85f2dbbc1cbbd2d86fcf715a",
												"nativeSrc": "13247:174:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13345:6:13",
														"nodeType": "YulTypedName",
														"src": "13345:6:13",
														"type": ""
													}
												],
												"src": "13247:174:13"
											},
											{
												"body": {
													"nativeSrc": "13573:220:13",
													"nodeType": "YulBlock",
													"src": "13573:220:13",
													"statements": [
														{
															"nativeSrc": "13583:74:13",
															"nodeType": "YulAssignment",
															"src": "13583:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13649:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13649:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13654:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13654:2:13",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13590:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "13590:58:13"
																},
																"nativeSrc": "13590:67:13",
																"nodeType": "YulFunctionCall",
																"src": "13590:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13583:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13583:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13755:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13755:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9ddaa44d722a3a8812710279db1e7f7e441f48ae85f2dbbc1cbbd2d86fcf715a",
																	"nativeSrc": "13666:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "13666:88:13"
																},
																"nativeSrc": "13666:93:13",
																"nodeType": "YulFunctionCall",
																"src": "13666:93:13"
															},
															"nativeSrc": "13666:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "13666:93:13"
														},
														{
															"nativeSrc": "13768:19:13",
															"nodeType": "YulAssignment",
															"src": "13768:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13779:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13779:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13784:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13784:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13775:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13775:3:13"
																},
																"nativeSrc": "13775:12:13",
																"nodeType": "YulFunctionCall",
																"src": "13775:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13768:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13768:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9ddaa44d722a3a8812710279db1e7f7e441f48ae85f2dbbc1cbbd2d86fcf715a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13427:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13561:3:13",
														"nodeType": "YulTypedName",
														"src": "13561:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13569:3:13",
														"nodeType": "YulTypedName",
														"src": "13569:3:13",
														"type": ""
													}
												],
												"src": "13427:366:13"
											},
											{
												"body": {
													"nativeSrc": "13970:248:13",
													"nodeType": "YulBlock",
													"src": "13970:248:13",
													"statements": [
														{
															"nativeSrc": "13980:26:13",
															"nodeType": "YulAssignment",
															"src": "13980:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13992:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13992:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14003:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14003:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13988:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13988:3:13"
																},
																"nativeSrc": "13988:18:13",
																"nodeType": "YulFunctionCall",
																"src": "13988:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13980:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13980:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14027:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14027:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14038:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14038:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14023:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14023:3:13"
																		},
																		"nativeSrc": "14023:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14023:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14046:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "14046:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14052:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14052:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14042:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14042:3:13"
																		},
																		"nativeSrc": "14042:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14042:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14016:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14016:6:13"
																},
																"nativeSrc": "14016:47:13",
																"nodeType": "YulFunctionCall",
																"src": "14016:47:13"
															},
															"nativeSrc": "14016:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "14016:47:13"
														},
														{
															"nativeSrc": "14072:139:13",
															"nodeType": "YulAssignment",
															"src": "14072:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14206:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "14206:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9ddaa44d722a3a8812710279db1e7f7e441f48ae85f2dbbc1cbbd2d86fcf715a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14080:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "14080:124:13"
																},
																"nativeSrc": "14080:131:13",
																"nodeType": "YulFunctionCall",
																"src": "14080:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14072:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14072:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9ddaa44d722a3a8812710279db1e7f7e441f48ae85f2dbbc1cbbd2d86fcf715a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13799:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13950:9:13",
														"nodeType": "YulTypedName",
														"src": "13950:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13965:4:13",
														"nodeType": "YulTypedName",
														"src": "13965:4:13",
														"type": ""
													}
												],
												"src": "13799:419:13"
											},
											{
												"body": {
													"nativeSrc": "14338:34:13",
													"nodeType": "YulBlock",
													"src": "14338:34:13",
													"statements": [
														{
															"nativeSrc": "14348:18:13",
															"nodeType": "YulAssignment",
															"src": "14348:18:13",
															"value": {
																"name": "pos",
																"nativeSrc": "14363:3:13",
																"nodeType": "YulIdentifier",
																"src": "14363:3:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "14348:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "14348:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "14224:148:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14310:3:13",
														"nodeType": "YulTypedName",
														"src": "14310:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14315:6:13",
														"nodeType": "YulTypedName",
														"src": "14315:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "14326:11:13",
														"nodeType": "YulTypedName",
														"src": "14326:11:13",
														"type": ""
													}
												],
												"src": "14224:148:13"
											},
											{
												"body": {
													"nativeSrc": "14442:82:13",
													"nodeType": "YulBlock",
													"src": "14442:82:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "14465:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14465:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "14470:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14470:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14475:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14475:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "14452:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "14452:12:13"
																},
																"nativeSrc": "14452:30:13",
																"nodeType": "YulFunctionCall",
																"src": "14452:30:13"
															},
															"nativeSrc": "14452:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "14452:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "14502:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "14502:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "14507:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14507:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14498:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14498:3:13"
																		},
																		"nativeSrc": "14498:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14498:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14516:1:13",
																		"nodeType": "YulLiteral",
																		"src": "14516:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14491:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14491:6:13"
																},
																"nativeSrc": "14491:27:13",
																"nodeType": "YulFunctionCall",
																"src": "14491:27:13"
															},
															"nativeSrc": "14491:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "14491:27:13"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "14378:146:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "14424:3:13",
														"nodeType": "YulTypedName",
														"src": "14424:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "14429:3:13",
														"nodeType": "YulTypedName",
														"src": "14429:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14434:6:13",
														"nodeType": "YulTypedName",
														"src": "14434:6:13",
														"type": ""
													}
												],
												"src": "14378:146:13"
											},
											{
												"body": {
													"nativeSrc": "14674:210:13",
													"nodeType": "YulBlock",
													"src": "14674:210:13",
													"statements": [
														{
															"nativeSrc": "14684:96:13",
															"nodeType": "YulAssignment",
															"src": "14684:96:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14768:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14768:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14773:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14773:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14691:76:13",
																	"nodeType": "YulIdentifier",
																	"src": "14691:76:13"
																},
																"nativeSrc": "14691:89:13",
																"nodeType": "YulFunctionCall",
																"src": "14691:89:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14684:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14684:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "14827:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "14827:5:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14834:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14834:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14839:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14839:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "14790:36:13",
																	"nodeType": "YulIdentifier",
																	"src": "14790:36:13"
																},
																"nativeSrc": "14790:56:13",
																"nodeType": "YulFunctionCall",
																"src": "14790:56:13"
															},
															"nativeSrc": "14790:56:13",
															"nodeType": "YulExpressionStatement",
															"src": "14790:56:13"
														},
														{
															"nativeSrc": "14855:23:13",
															"nodeType": "YulAssignment",
															"src": "14855:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14866:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14866:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14871:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14871:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14862:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14862:3:13"
																},
																"nativeSrc": "14862:16:13",
																"nodeType": "YulFunctionCall",
																"src": "14862:16:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14855:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14855:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "14554:330:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "14647:5:13",
														"nodeType": "YulTypedName",
														"src": "14647:5:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14654:6:13",
														"nodeType": "YulTypedName",
														"src": "14654:6:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14662:3:13",
														"nodeType": "YulTypedName",
														"src": "14662:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14670:3:13",
														"nodeType": "YulTypedName",
														"src": "14670:3:13",
														"type": ""
													}
												],
												"src": "14554:330:13"
											},
											{
												"body": {
													"nativeSrc": "15036:149:13",
													"nodeType": "YulBlock",
													"src": "15036:149:13",
													"statements": [
														{
															"nativeSrc": "15047:112:13",
															"nodeType": "YulAssignment",
															"src": "15047:112:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15138:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15138:6:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "15146:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15146:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15155:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15155:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15054:83:13",
																	"nodeType": "YulIdentifier",
																	"src": "15054:83:13"
																},
																"nativeSrc": "15054:105:13",
																"nodeType": "YulFunctionCall",
																"src": "15054:105:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15047:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15047:3:13"
																}
															]
														},
														{
															"nativeSrc": "15169:10:13",
															"nodeType": "YulAssignment",
															"src": "15169:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "15176:3:13",
																"nodeType": "YulIdentifier",
																"src": "15176:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15169:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15169:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "14890:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15007:3:13",
														"nodeType": "YulTypedName",
														"src": "15007:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15013:6:13",
														"nodeType": "YulTypedName",
														"src": "15013:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15021:6:13",
														"nodeType": "YulTypedName",
														"src": "15021:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15032:3:13",
														"nodeType": "YulTypedName",
														"src": "15032:3:13",
														"type": ""
													}
												],
												"src": "14890:295:13"
											},
											{
												"body": {
													"nativeSrc": "15297:53:13",
													"nodeType": "YulBlock",
													"src": "15297:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15319:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "15319:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15327:1:13",
																				"nodeType": "YulLiteral",
																				"src": "15327:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15315:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15315:3:13"
																		},
																		"nativeSrc": "15315:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15315:14:13"
																	},
																	{
																		"hexValue": "7472616465726a6f65",
																		"kind": "string",
																		"nativeSrc": "15331:11:13",
																		"nodeType": "YulLiteral",
																		"src": "15331:11:13",
																		"type": "",
																		"value": "traderjoe"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15308:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15308:6:13"
																},
																"nativeSrc": "15308:35:13",
																"nodeType": "YulFunctionCall",
																"src": "15308:35:13"
															},
															"nativeSrc": "15308:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "15308:35:13"
														}
													]
												},
												"name": "store_literal_in_memory_24f8419fdc4f6acf1200f13e6b585e241e72e1b37e4d57f20ad2da38a8f251fe",
												"nativeSrc": "15191:159:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15289:6:13",
														"nodeType": "YulTypedName",
														"src": "15289:6:13",
														"type": ""
													}
												],
												"src": "15191:159:13"
											},
											{
												"body": {
													"nativeSrc": "15520:236:13",
													"nodeType": "YulBlock",
													"src": "15520:236:13",
													"statements": [
														{
															"nativeSrc": "15530:91:13",
															"nodeType": "YulAssignment",
															"src": "15530:91:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15614:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15614:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15619:1:13",
																		"nodeType": "YulLiteral",
																		"src": "15619:1:13",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15537:76:13",
																	"nodeType": "YulIdentifier",
																	"src": "15537:76:13"
																},
																"nativeSrc": "15537:84:13",
																"nodeType": "YulFunctionCall",
																"src": "15537:84:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15530:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15530:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15719:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15719:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24f8419fdc4f6acf1200f13e6b585e241e72e1b37e4d57f20ad2da38a8f251fe",
																	"nativeSrc": "15630:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "15630:88:13"
																},
																"nativeSrc": "15630:93:13",
																"nodeType": "YulFunctionCall",
																"src": "15630:93:13"
															},
															"nativeSrc": "15630:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "15630:93:13"
														},
														{
															"nativeSrc": "15732:18:13",
															"nodeType": "YulAssignment",
															"src": "15732:18:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15743:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15743:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15748:1:13",
																		"nodeType": "YulLiteral",
																		"src": "15748:1:13",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15739:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15739:3:13"
																},
																"nativeSrc": "15739:11:13",
																"nodeType": "YulFunctionCall",
																"src": "15739:11:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15732:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15732:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24f8419fdc4f6acf1200f13e6b585e241e72e1b37e4d57f20ad2da38a8f251fe_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "15356:400:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15508:3:13",
														"nodeType": "YulTypedName",
														"src": "15508:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15516:3:13",
														"nodeType": "YulTypedName",
														"src": "15516:3:13",
														"type": ""
													}
												],
												"src": "15356:400:13"
											},
											{
												"body": {
													"nativeSrc": "15951:192:13",
													"nodeType": "YulBlock",
													"src": "15951:192:13",
													"statements": [
														{
															"nativeSrc": "15962:155:13",
															"nodeType": "YulAssignment",
															"src": "15962:155:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16113:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16113:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24f8419fdc4f6acf1200f13e6b585e241e72e1b37e4d57f20ad2da38a8f251fe_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15969:142:13",
																	"nodeType": "YulIdentifier",
																	"src": "15969:142:13"
																},
																"nativeSrc": "15969:148:13",
																"nodeType": "YulFunctionCall",
																"src": "15969:148:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15962:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15962:3:13"
																}
															]
														},
														{
															"nativeSrc": "16127:10:13",
															"nodeType": "YulAssignment",
															"src": "16127:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "16134:3:13",
																"nodeType": "YulIdentifier",
																"src": "16134:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16127:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16127:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_24f8419fdc4f6acf1200f13e6b585e241e72e1b37e4d57f20ad2da38a8f251fe__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "15762:381:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15938:3:13",
														"nodeType": "YulTypedName",
														"src": "15938:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15947:3:13",
														"nodeType": "YulTypedName",
														"src": "15947:3:13",
														"type": ""
													}
												],
												"src": "15762:381:13"
											},
											{
												"body": {
													"nativeSrc": "16255:49:13",
													"nodeType": "YulBlock",
													"src": "16255:49:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16277:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "16277:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16285:1:13",
																				"nodeType": "YulLiteral",
																				"src": "16285:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16273:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16273:3:13"
																		},
																		"nativeSrc": "16273:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16273:14:13"
																	},
																	{
																		"hexValue": "62656e7169",
																		"kind": "string",
																		"nativeSrc": "16289:7:13",
																		"nodeType": "YulLiteral",
																		"src": "16289:7:13",
																		"type": "",
																		"value": "benqi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16266:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16266:6:13"
																},
																"nativeSrc": "16266:31:13",
																"nodeType": "YulFunctionCall",
																"src": "16266:31:13"
															},
															"nativeSrc": "16266:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "16266:31:13"
														}
													]
												},
												"name": "store_literal_in_memory_ca0da0a49743b95e8ea9e651d4f648be9bdc5629a2c1716e52deaa77b8602d67",
												"nativeSrc": "16149:155:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16247:6:13",
														"nodeType": "YulTypedName",
														"src": "16247:6:13",
														"type": ""
													}
												],
												"src": "16149:155:13"
											},
											{
												"body": {
													"nativeSrc": "16474:236:13",
													"nodeType": "YulBlock",
													"src": "16474:236:13",
													"statements": [
														{
															"nativeSrc": "16484:91:13",
															"nodeType": "YulAssignment",
															"src": "16484:91:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16568:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16568:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16573:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16573:1:13",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16491:76:13",
																	"nodeType": "YulIdentifier",
																	"src": "16491:76:13"
																},
																"nativeSrc": "16491:84:13",
																"nodeType": "YulFunctionCall",
																"src": "16491:84:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16484:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16484:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16673:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16673:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ca0da0a49743b95e8ea9e651d4f648be9bdc5629a2c1716e52deaa77b8602d67",
																	"nativeSrc": "16584:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "16584:88:13"
																},
																"nativeSrc": "16584:93:13",
																"nodeType": "YulFunctionCall",
																"src": "16584:93:13"
															},
															"nativeSrc": "16584:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "16584:93:13"
														},
														{
															"nativeSrc": "16686:18:13",
															"nodeType": "YulAssignment",
															"src": "16686:18:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16697:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16697:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16702:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16702:1:13",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16693:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16693:3:13"
																},
																"nativeSrc": "16693:11:13",
																"nodeType": "YulFunctionCall",
																"src": "16693:11:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16686:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16686:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ca0da0a49743b95e8ea9e651d4f648be9bdc5629a2c1716e52deaa77b8602d67_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "16310:400:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16462:3:13",
														"nodeType": "YulTypedName",
														"src": "16462:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16470:3:13",
														"nodeType": "YulTypedName",
														"src": "16470:3:13",
														"type": ""
													}
												],
												"src": "16310:400:13"
											},
											{
												"body": {
													"nativeSrc": "16905:192:13",
													"nodeType": "YulBlock",
													"src": "16905:192:13",
													"statements": [
														{
															"nativeSrc": "16916:155:13",
															"nodeType": "YulAssignment",
															"src": "16916:155:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17067:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17067:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ca0da0a49743b95e8ea9e651d4f648be9bdc5629a2c1716e52deaa77b8602d67_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16923:142:13",
																	"nodeType": "YulIdentifier",
																	"src": "16923:142:13"
																},
																"nativeSrc": "16923:148:13",
																"nodeType": "YulFunctionCall",
																"src": "16923:148:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16916:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16916:3:13"
																}
															]
														},
														{
															"nativeSrc": "17081:10:13",
															"nodeType": "YulAssignment",
															"src": "17081:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "17088:3:13",
																"nodeType": "YulIdentifier",
																"src": "17088:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17081:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17081:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_ca0da0a49743b95e8ea9e651d4f648be9bdc5629a2c1716e52deaa77b8602d67__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "16716:381:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16892:3:13",
														"nodeType": "YulTypedName",
														"src": "16892:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16901:3:13",
														"nodeType": "YulTypedName",
														"src": "16901:3:13",
														"type": ""
													}
												],
												"src": "16716:381:13"
											},
											{
												"body": {
													"nativeSrc": "17209:52:13",
													"nodeType": "YulBlock",
													"src": "17209:52:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17231:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17231:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17239:1:13",
																				"nodeType": "YulLiteral",
																				"src": "17239:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17227:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17227:3:13"
																		},
																		"nativeSrc": "17227:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17227:14:13"
																	},
																	{
																		"hexValue": "7969656c6479616b",
																		"kind": "string",
																		"nativeSrc": "17243:10:13",
																		"nodeType": "YulLiteral",
																		"src": "17243:10:13",
																		"type": "",
																		"value": "yieldyak"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17220:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17220:6:13"
																},
																"nativeSrc": "17220:34:13",
																"nodeType": "YulFunctionCall",
																"src": "17220:34:13"
															},
															"nativeSrc": "17220:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "17220:34:13"
														}
													]
												},
												"name": "store_literal_in_memory_a24808fe8020be382efbc06e3d832c10022c9007a54161bd80307f00bff0c218",
												"nativeSrc": "17103:158:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17201:6:13",
														"nodeType": "YulTypedName",
														"src": "17201:6:13",
														"type": ""
													}
												],
												"src": "17103:158:13"
											},
											{
												"body": {
													"nativeSrc": "17431:236:13",
													"nodeType": "YulBlock",
													"src": "17431:236:13",
													"statements": [
														{
															"nativeSrc": "17441:91:13",
															"nodeType": "YulAssignment",
															"src": "17441:91:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17525:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17525:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17530:1:13",
																		"nodeType": "YulLiteral",
																		"src": "17530:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "17448:76:13",
																	"nodeType": "YulIdentifier",
																	"src": "17448:76:13"
																},
																"nativeSrc": "17448:84:13",
																"nodeType": "YulFunctionCall",
																"src": "17448:84:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17441:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17441:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17630:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17630:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a24808fe8020be382efbc06e3d832c10022c9007a54161bd80307f00bff0c218",
																	"nativeSrc": "17541:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "17541:88:13"
																},
																"nativeSrc": "17541:93:13",
																"nodeType": "YulFunctionCall",
																"src": "17541:93:13"
															},
															"nativeSrc": "17541:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "17541:93:13"
														},
														{
															"nativeSrc": "17643:18:13",
															"nodeType": "YulAssignment",
															"src": "17643:18:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17654:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17654:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17659:1:13",
																		"nodeType": "YulLiteral",
																		"src": "17659:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17650:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17650:3:13"
																},
																"nativeSrc": "17650:11:13",
																"nodeType": "YulFunctionCall",
																"src": "17650:11:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17643:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17643:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a24808fe8020be382efbc06e3d832c10022c9007a54161bd80307f00bff0c218_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "17267:400:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17419:3:13",
														"nodeType": "YulTypedName",
														"src": "17419:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17427:3:13",
														"nodeType": "YulTypedName",
														"src": "17427:3:13",
														"type": ""
													}
												],
												"src": "17267:400:13"
											},
											{
												"body": {
													"nativeSrc": "17862:192:13",
													"nodeType": "YulBlock",
													"src": "17862:192:13",
													"statements": [
														{
															"nativeSrc": "17873:155:13",
															"nodeType": "YulAssignment",
															"src": "17873:155:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18024:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18024:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a24808fe8020be382efbc06e3d832c10022c9007a54161bd80307f00bff0c218_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "17880:142:13",
																	"nodeType": "YulIdentifier",
																	"src": "17880:142:13"
																},
																"nativeSrc": "17880:148:13",
																"nodeType": "YulFunctionCall",
																"src": "17880:148:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17873:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17873:3:13"
																}
															]
														},
														{
															"nativeSrc": "18038:10:13",
															"nodeType": "YulAssignment",
															"src": "18038:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "18045:3:13",
																"nodeType": "YulIdentifier",
																"src": "18045:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18038:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18038:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_a24808fe8020be382efbc06e3d832c10022c9007a54161bd80307f00bff0c218__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "17673:381:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17849:3:13",
														"nodeType": "YulTypedName",
														"src": "17849:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17858:3:13",
														"nodeType": "YulTypedName",
														"src": "17858:3:13",
														"type": ""
													}
												],
												"src": "17673:381:13"
											},
											{
												"body": {
													"nativeSrc": "18166:60:13",
													"nodeType": "YulBlock",
													"src": "18166:60:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18188:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "18188:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18196:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18196:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18184:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18184:3:13"
																		},
																		"nativeSrc": "18184:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18184:14:13"
																	},
																	{
																		"hexValue": "496e76616c69642070726f746f636f6c",
																		"kind": "string",
																		"nativeSrc": "18200:18:13",
																		"nodeType": "YulLiteral",
																		"src": "18200:18:13",
																		"type": "",
																		"value": "Invalid protocol"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18177:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18177:6:13"
																},
																"nativeSrc": "18177:42:13",
																"nodeType": "YulFunctionCall",
																"src": "18177:42:13"
															},
															"nativeSrc": "18177:42:13",
															"nodeType": "YulExpressionStatement",
															"src": "18177:42:13"
														}
													]
												},
												"name": "store_literal_in_memory_a3844f20365e6d2d8ff7b4d99e0a3b236f50e2ae8088965ed1727f40132bf411",
												"nativeSrc": "18060:166:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18158:6:13",
														"nodeType": "YulTypedName",
														"src": "18158:6:13",
														"type": ""
													}
												],
												"src": "18060:166:13"
											},
											{
												"body": {
													"nativeSrc": "18378:220:13",
													"nodeType": "YulBlock",
													"src": "18378:220:13",
													"statements": [
														{
															"nativeSrc": "18388:74:13",
															"nodeType": "YulAssignment",
															"src": "18388:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18454:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18454:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18459:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18459:2:13",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18395:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "18395:58:13"
																},
																"nativeSrc": "18395:67:13",
																"nodeType": "YulFunctionCall",
																"src": "18395:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18388:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18388:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18560:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18560:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a3844f20365e6d2d8ff7b4d99e0a3b236f50e2ae8088965ed1727f40132bf411",
																	"nativeSrc": "18471:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "18471:88:13"
																},
																"nativeSrc": "18471:93:13",
																"nodeType": "YulFunctionCall",
																"src": "18471:93:13"
															},
															"nativeSrc": "18471:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "18471:93:13"
														},
														{
															"nativeSrc": "18573:19:13",
															"nodeType": "YulAssignment",
															"src": "18573:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18584:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18584:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18589:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18589:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18580:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18580:3:13"
																},
																"nativeSrc": "18580:12:13",
																"nodeType": "YulFunctionCall",
																"src": "18580:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18573:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18573:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a3844f20365e6d2d8ff7b4d99e0a3b236f50e2ae8088965ed1727f40132bf411_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18232:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18366:3:13",
														"nodeType": "YulTypedName",
														"src": "18366:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18374:3:13",
														"nodeType": "YulTypedName",
														"src": "18374:3:13",
														"type": ""
													}
												],
												"src": "18232:366:13"
											},
											{
												"body": {
													"nativeSrc": "18775:248:13",
													"nodeType": "YulBlock",
													"src": "18775:248:13",
													"statements": [
														{
															"nativeSrc": "18785:26:13",
															"nodeType": "YulAssignment",
															"src": "18785:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18797:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "18797:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18808:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18808:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18793:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18793:3:13"
																},
																"nativeSrc": "18793:18:13",
																"nodeType": "YulFunctionCall",
																"src": "18793:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18785:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18785:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18832:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18832:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18843:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18843:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18828:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18828:3:13"
																		},
																		"nativeSrc": "18828:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18828:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18851:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "18851:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18857:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18857:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18847:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18847:3:13"
																		},
																		"nativeSrc": "18847:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18847:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18821:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18821:6:13"
																},
																"nativeSrc": "18821:47:13",
																"nodeType": "YulFunctionCall",
																"src": "18821:47:13"
															},
															"nativeSrc": "18821:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "18821:47:13"
														},
														{
															"nativeSrc": "18877:139:13",
															"nodeType": "YulAssignment",
															"src": "18877:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19011:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "19011:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a3844f20365e6d2d8ff7b4d99e0a3b236f50e2ae8088965ed1727f40132bf411_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18885:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "18885:124:13"
																},
																"nativeSrc": "18885:131:13",
																"nodeType": "YulFunctionCall",
																"src": "18885:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18877:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18877:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a3844f20365e6d2d8ff7b4d99e0a3b236f50e2ae8088965ed1727f40132bf411__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18604:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18755:9:13",
														"nodeType": "YulTypedName",
														"src": "18755:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18770:4:13",
														"nodeType": "YulTypedName",
														"src": "18770:4:13",
														"type": ""
													}
												],
												"src": "18604:419:13"
											},
											{
												"body": {
													"nativeSrc": "19077:54:13",
													"nodeType": "YulBlock",
													"src": "19077:54:13",
													"statements": [
														{
															"nativeSrc": "19087:38:13",
															"nodeType": "YulAssignment",
															"src": "19087:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19105:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "19105:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19112:2:13",
																				"nodeType": "YulLiteral",
																				"src": "19112:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19101:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19101:3:13"
																		},
																		"nativeSrc": "19101:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19101:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "19121:2:13",
																				"nodeType": "YulLiteral",
																				"src": "19121:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "19117:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19117:3:13"
																		},
																		"nativeSrc": "19117:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19117:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "19097:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19097:3:13"
																},
																"nativeSrc": "19097:28:13",
																"nodeType": "YulFunctionCall",
																"src": "19097:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "19087:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19087:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "19029:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19060:5:13",
														"nodeType": "YulTypedName",
														"src": "19060:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "19070:6:13",
														"nodeType": "YulTypedName",
														"src": "19070:6:13",
														"type": ""
													}
												],
												"src": "19029:102:13"
											},
											{
												"body": {
													"nativeSrc": "19263:215:13",
													"nodeType": "YulBlock",
													"src": "19263:215:13",
													"statements": [
														{
															"nativeSrc": "19273:78:13",
															"nodeType": "YulAssignment",
															"src": "19273:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19339:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19339:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19344:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19344:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19280:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "19280:58:13"
																},
																"nativeSrc": "19280:71:13",
																"nodeType": "YulFunctionCall",
																"src": "19280:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19273:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19273:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "19398:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "19398:5:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19405:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19405:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19410:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19410:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "19361:36:13",
																	"nodeType": "YulIdentifier",
																	"src": "19361:36:13"
																},
																"nativeSrc": "19361:56:13",
																"nodeType": "YulFunctionCall",
																"src": "19361:56:13"
															},
															"nativeSrc": "19361:56:13",
															"nodeType": "YulExpressionStatement",
															"src": "19361:56:13"
														},
														{
															"nativeSrc": "19426:46:13",
															"nodeType": "YulAssignment",
															"src": "19426:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19437:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19437:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "19464:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "19464:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "19442:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "19442:21:13"
																		},
																		"nativeSrc": "19442:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19442:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19433:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19433:3:13"
																},
																"nativeSrc": "19433:39:13",
																"nodeType": "YulFunctionCall",
																"src": "19433:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19426:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19426:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19161:317:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "19236:5:13",
														"nodeType": "YulTypedName",
														"src": "19236:5:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "19243:6:13",
														"nodeType": "YulTypedName",
														"src": "19243:6:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "19251:3:13",
														"nodeType": "YulTypedName",
														"src": "19251:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19259:3:13",
														"nodeType": "YulTypedName",
														"src": "19259:3:13",
														"type": ""
													}
												],
												"src": "19161:317:13"
											},
											{
												"body": {
													"nativeSrc": "19640:287:13",
													"nodeType": "YulBlock",
													"src": "19640:287:13",
													"statements": [
														{
															"nativeSrc": "19650:26:13",
															"nodeType": "YulAssignment",
															"src": "19650:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19662:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "19662:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19673:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19673:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19658:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19658:3:13"
																},
																"nativeSrc": "19658:18:13",
																"nodeType": "YulFunctionCall",
																"src": "19658:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19650:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "19650:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19697:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19697:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19708:1:13",
																				"nodeType": "YulLiteral",
																				"src": "19708:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19693:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19693:3:13"
																		},
																		"nativeSrc": "19693:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19693:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19716:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "19716:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19722:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19722:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19712:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19712:3:13"
																		},
																		"nativeSrc": "19712:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19712:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19686:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19686:6:13"
																},
																"nativeSrc": "19686:47:13",
																"nodeType": "YulFunctionCall",
																"src": "19686:47:13"
															},
															"nativeSrc": "19686:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "19686:47:13"
														},
														{
															"nativeSrc": "19742:96:13",
															"nodeType": "YulAssignment",
															"src": "19742:96:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19816:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19816:6:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "19824:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19824:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "19833:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "19833:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19750:65:13",
																	"nodeType": "YulIdentifier",
																	"src": "19750:65:13"
																},
																"nativeSrc": "19750:88:13",
																"nodeType": "YulFunctionCall",
																"src": "19750:88:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19742:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "19742:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19892:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19892:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19905:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19905:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19916:2:13",
																				"nodeType": "YulLiteral",
																				"src": "19916:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19901:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19901:3:13"
																		},
																		"nativeSrc": "19901:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19901:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19848:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "19848:43:13"
																},
																"nativeSrc": "19848:72:13",
																"nodeType": "YulFunctionCall",
																"src": "19848:72:13"
															},
															"nativeSrc": "19848:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "19848:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_calldata_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed",
												"nativeSrc": "19484:443:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19596:9:13",
														"nodeType": "YulTypedName",
														"src": "19596:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19608:6:13",
														"nodeType": "YulTypedName",
														"src": "19608:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19616:6:13",
														"nodeType": "YulTypedName",
														"src": "19616:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19624:6:13",
														"nodeType": "YulTypedName",
														"src": "19624:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19635:4:13",
														"nodeType": "YulTypedName",
														"src": "19635:4:13",
														"type": ""
													}
												],
												"src": "19484:443:13"
											},
											{
												"body": {
													"nativeSrc": "19981:362:13",
													"nodeType": "YulBlock",
													"src": "19981:362:13",
													"statements": [
														{
															"nativeSrc": "19991:25:13",
															"nodeType": "YulAssignment",
															"src": "19991:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20014:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "20014:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19996:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "19996:17:13"
																},
																"nativeSrc": "19996:20:13",
																"nodeType": "YulFunctionCall",
																"src": "19996:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "19991:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "19991:1:13"
																}
															]
														},
														{
															"nativeSrc": "20025:25:13",
															"nodeType": "YulAssignment",
															"src": "20025:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20048:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "20048:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20030:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "20030:17:13"
																},
																"nativeSrc": "20030:20:13",
																"nodeType": "YulFunctionCall",
																"src": "20030:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "20025:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "20025:1:13"
																}
															]
														},
														{
															"nativeSrc": "20059:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "20059:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20082:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "20082:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "20085:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "20085:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "20078:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20078:3:13"
																},
																"nativeSrc": "20078:9:13",
																"nodeType": "YulFunctionCall",
																"src": "20078:9:13"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "20063:11:13",
																	"nodeType": "YulTypedName",
																	"src": "20063:11:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20096:41:13",
															"nodeType": "YulAssignment",
															"src": "20096:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "20125:11:13",
																		"nodeType": "YulIdentifier",
																		"src": "20125:11:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20107:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "20107:17:13"
																},
																"nativeSrc": "20107:30:13",
																"nodeType": "YulFunctionCall",
																"src": "20107:30:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "20096:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "20096:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20314:22:13",
																"nodeType": "YulBlock",
																"src": "20314:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "20316:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "20316:16:13"
																			},
																			"nativeSrc": "20316:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "20316:18:13"
																		},
																		"nativeSrc": "20316:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "20316:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "20247:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "20247:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "20240:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "20240:6:13"
																				},
																				"nativeSrc": "20240:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "20240:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "20270:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "20270:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "20277:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "20277:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "20286:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "20286:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "20273:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "20273:3:13"
																						},
																						"nativeSrc": "20273:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "20273:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "20267:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "20267:2:13"
																				},
																				"nativeSrc": "20267:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "20267:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "20220:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "20220:2:13"
																		},
																		"nativeSrc": "20220:83:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20220:83:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20200:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20200:6:13"
																},
																"nativeSrc": "20200:113:13",
																"nodeType": "YulFunctionCall",
																"src": "20200:113:13"
															},
															"nativeSrc": "20197:139:13",
															"nodeType": "YulIf",
															"src": "20197:139:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "19933:410:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "19964:1:13",
														"nodeType": "YulTypedName",
														"src": "19964:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "19967:1:13",
														"nodeType": "YulTypedName",
														"src": "19967:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "19973:7:13",
														"nodeType": "YulTypedName",
														"src": "19973:7:13",
														"type": ""
													}
												],
												"src": "19933:410:13"
											},
											{
												"body": {
													"nativeSrc": "20377:152:13",
													"nodeType": "YulBlock",
													"src": "20377:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20394:1:13",
																		"nodeType": "YulLiteral",
																		"src": "20394:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20397:77:13",
																		"nodeType": "YulLiteral",
																		"src": "20397:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20387:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20387:6:13"
																},
																"nativeSrc": "20387:88:13",
																"nodeType": "YulFunctionCall",
																"src": "20387:88:13"
															},
															"nativeSrc": "20387:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "20387:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20491:1:13",
																		"nodeType": "YulLiteral",
																		"src": "20491:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20494:4:13",
																		"nodeType": "YulLiteral",
																		"src": "20494:4:13",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20484:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20484:6:13"
																},
																"nativeSrc": "20484:15:13",
																"nodeType": "YulFunctionCall",
																"src": "20484:15:13"
															},
															"nativeSrc": "20484:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "20484:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20515:1:13",
																		"nodeType": "YulLiteral",
																		"src": "20515:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20518:4:13",
																		"nodeType": "YulLiteral",
																		"src": "20518:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "20508:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20508:6:13"
																},
																"nativeSrc": "20508:15:13",
																"nodeType": "YulFunctionCall",
																"src": "20508:15:13"
															},
															"nativeSrc": "20508:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "20508:15:13"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "20349:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "20349:180:13"
											},
											{
												"body": {
													"nativeSrc": "20577:143:13",
													"nodeType": "YulBlock",
													"src": "20577:143:13",
													"statements": [
														{
															"nativeSrc": "20587:25:13",
															"nodeType": "YulAssignment",
															"src": "20587:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20610:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "20610:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20592:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "20592:17:13"
																},
																"nativeSrc": "20592:20:13",
																"nodeType": "YulFunctionCall",
																"src": "20592:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "20587:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "20587:1:13"
																}
															]
														},
														{
															"nativeSrc": "20621:25:13",
															"nodeType": "YulAssignment",
															"src": "20621:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20644:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "20644:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20626:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "20626:17:13"
																},
																"nativeSrc": "20626:20:13",
																"nodeType": "YulFunctionCall",
																"src": "20626:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "20621:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "20621:1:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20668:22:13",
																"nodeType": "YulBlock",
																"src": "20668:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "20670:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "20670:16:13"
																			},
																			"nativeSrc": "20670:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "20670:18:13"
																		},
																		"nativeSrc": "20670:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "20670:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20665:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "20665:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20658:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20658:6:13"
																},
																"nativeSrc": "20658:9:13",
																"nodeType": "YulFunctionCall",
																"src": "20658:9:13"
															},
															"nativeSrc": "20655:35:13",
															"nodeType": "YulIf",
															"src": "20655:35:13"
														},
														{
															"nativeSrc": "20700:14:13",
															"nodeType": "YulAssignment",
															"src": "20700:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20709:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "20709:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "20712:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "20712:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "20705:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20705:3:13"
																},
																"nativeSrc": "20705:9:13",
																"nodeType": "YulFunctionCall",
																"src": "20705:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "20700:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "20700:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "20535:185:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "20566:1:13",
														"nodeType": "YulTypedName",
														"src": "20566:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "20569:1:13",
														"nodeType": "YulTypedName",
														"src": "20569:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "20575:1:13",
														"nodeType": "YulTypedName",
														"src": "20575:1:13",
														"type": ""
													}
												],
												"src": "20535:185:13"
											},
											{
												"body": {
													"nativeSrc": "20771:149:13",
													"nodeType": "YulBlock",
													"src": "20771:149:13",
													"statements": [
														{
															"nativeSrc": "20781:25:13",
															"nodeType": "YulAssignment",
															"src": "20781:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20804:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "20804:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20786:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "20786:17:13"
																},
																"nativeSrc": "20786:20:13",
																"nodeType": "YulFunctionCall",
																"src": "20786:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "20781:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "20781:1:13"
																}
															]
														},
														{
															"nativeSrc": "20815:25:13",
															"nodeType": "YulAssignment",
															"src": "20815:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20838:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "20838:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20820:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "20820:17:13"
																},
																"nativeSrc": "20820:20:13",
																"nodeType": "YulFunctionCall",
																"src": "20820:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "20815:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "20815:1:13"
																}
															]
														},
														{
															"nativeSrc": "20849:17:13",
															"nodeType": "YulAssignment",
															"src": "20849:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20861:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "20861:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "20864:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "20864:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "20857:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20857:3:13"
																},
																"nativeSrc": "20857:9:13",
																"nodeType": "YulFunctionCall",
																"src": "20857:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "20849:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20849:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20891:22:13",
																"nodeType": "YulBlock",
																"src": "20891:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "20893:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "20893:16:13"
																			},
																			"nativeSrc": "20893:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "20893:18:13"
																		},
																		"nativeSrc": "20893:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "20893:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "20882:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "20882:4:13"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "20888:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "20888:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20879:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "20879:2:13"
																},
																"nativeSrc": "20879:11:13",
																"nodeType": "YulFunctionCall",
																"src": "20879:11:13"
															},
															"nativeSrc": "20876:37:13",
															"nodeType": "YulIf",
															"src": "20876:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "20726:194:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "20757:1:13",
														"nodeType": "YulTypedName",
														"src": "20757:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "20760:1:13",
														"nodeType": "YulTypedName",
														"src": "20760:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "20766:4:13",
														"nodeType": "YulTypedName",
														"src": "20766:4:13",
														"type": ""
													}
												],
												"src": "20726:194:13"
											},
											{
												"body": {
													"nativeSrc": "20970:32:13",
													"nodeType": "YulBlock",
													"src": "20970:32:13",
													"statements": [
														{
															"nativeSrc": "20980:16:13",
															"nodeType": "YulAssignment",
															"src": "20980:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "20991:5:13",
																"nodeType": "YulIdentifier",
																"src": "20991:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "20980:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "20980:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "20926:76:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20952:5:13",
														"nodeType": "YulTypedName",
														"src": "20952:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "20962:7:13",
														"nodeType": "YulTypedName",
														"src": "20962:7:13",
														"type": ""
													}
												],
												"src": "20926:76:13"
											},
											{
												"body": {
													"nativeSrc": "21052:328:13",
													"nodeType": "YulBlock",
													"src": "21052:328:13",
													"statements": [
														{
															"nativeSrc": "21062:24:13",
															"nodeType": "YulAssignment",
															"src": "21062:24:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21084:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "21084:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "21067:16:13",
																	"nodeType": "YulIdentifier",
																	"src": "21067:16:13"
																},
																"nativeSrc": "21067:19:13",
																"nodeType": "YulFunctionCall",
																"src": "21067:19:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21062:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "21062:1:13"
																}
															]
														},
														{
															"nativeSrc": "21095:24:13",
															"nodeType": "YulAssignment",
															"src": "21095:24:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21117:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "21117:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "21100:16:13",
																	"nodeType": "YulIdentifier",
																	"src": "21100:16:13"
																},
																"nativeSrc": "21100:19:13",
																"nodeType": "YulFunctionCall",
																"src": "21100:19:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21095:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "21095:1:13"
																}
															]
														},
														{
															"nativeSrc": "21128:17:13",
															"nodeType": "YulAssignment",
															"src": "21128:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21140:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "21140:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21143:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "21143:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "21136:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21136:3:13"
																},
																"nativeSrc": "21136:9:13",
																"nodeType": "YulFunctionCall",
																"src": "21136:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "21128:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21128:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21351:22:13",
																"nodeType": "YulBlock",
																"src": "21351:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21353:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "21353:16:13"
																			},
																			"nativeSrc": "21353:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "21353:18:13"
																		},
																		"nativeSrc": "21353:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "21353:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "y",
																								"nativeSrc": "21277:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "21277:1:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "21280:1:13",
																								"nodeType": "YulLiteral",
																								"src": "21280:1:13",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "slt",
																							"nativeSrc": "21273:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "21273:3:13"
																						},
																						"nativeSrc": "21273:9:13",
																						"nodeType": "YulFunctionCall",
																						"src": "21273:9:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "21266:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "21266:6:13"
																				},
																				"nativeSrc": "21266:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "21266:17:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "diff",
																						"nativeSrc": "21289:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "21289:4:13"
																					},
																					{
																						"name": "x",
																						"nativeSrc": "21295:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "21295:1:13"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nativeSrc": "21285:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "21285:3:13"
																				},
																				"nativeSrc": "21285:12:13",
																				"nodeType": "YulFunctionCall",
																				"src": "21285:12:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "21262:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21262:3:13"
																		},
																		"nativeSrc": "21262:36:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21262:36:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "21320:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "21320:1:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "21323:1:13",
																						"nodeType": "YulLiteral",
																						"src": "21323:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nativeSrc": "21316:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "21316:3:13"
																				},
																				"nativeSrc": "21316:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "21316:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "diff",
																						"nativeSrc": "21331:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "21331:4:13"
																					},
																					{
																						"name": "x",
																						"nativeSrc": "21337:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "21337:1:13"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nativeSrc": "21327:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "21327:3:13"
																				},
																				"nativeSrc": "21327:12:13",
																				"nodeType": "YulFunctionCall",
																				"src": "21327:12:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "21312:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21312:3:13"
																		},
																		"nativeSrc": "21312:28:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21312:28:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "21246:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "21246:2:13"
																},
																"nativeSrc": "21246:104:13",
																"nodeType": "YulFunctionCall",
																"src": "21246:104:13"
															},
															"nativeSrc": "21243:130:13",
															"nodeType": "YulIf",
															"src": "21243:130:13"
														}
													]
												},
												"name": "checked_sub_t_int256",
												"nativeSrc": "21008:372:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21038:1:13",
														"nodeType": "YulTypedName",
														"src": "21038:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21041:1:13",
														"nodeType": "YulTypedName",
														"src": "21041:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "21047:4:13",
														"nodeType": "YulTypedName",
														"src": "21047:4:13",
														"type": ""
													}
												],
												"src": "21008:372:13"
											},
											{
												"body": {
													"nativeSrc": "21425:189:13",
													"nodeType": "YulBlock",
													"src": "21425:189:13",
													"statements": [
														{
															"nativeSrc": "21435:32:13",
															"nodeType": "YulAssignment",
															"src": "21435:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21461:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "21461:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "21444:16:13",
																	"nodeType": "YulIdentifier",
																	"src": "21444:16:13"
																},
																"nativeSrc": "21444:23:13",
																"nodeType": "YulFunctionCall",
																"src": "21444:23:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21435:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "21435:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21557:22:13",
																"nodeType": "YulBlock",
																"src": "21557:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21559:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "21559:16:13"
																			},
																			"nativeSrc": "21559:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "21559:18:13"
																		},
																		"nativeSrc": "21559:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "21559:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21482:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "21482:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21489:66:13",
																		"nodeType": "YulLiteral",
																		"src": "21489:66:13",
																		"type": "",
																		"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "21479:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "21479:2:13"
																},
																"nativeSrc": "21479:77:13",
																"nodeType": "YulFunctionCall",
																"src": "21479:77:13"
															},
															"nativeSrc": "21476:103:13",
															"nodeType": "YulIf",
															"src": "21476:103:13"
														},
														{
															"nativeSrc": "21588:20:13",
															"nodeType": "YulAssignment",
															"src": "21588:20:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21599:1:13",
																		"nodeType": "YulLiteral",
																		"src": "21599:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "21602:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "21602:5:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "21595:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21595:3:13"
																},
																"nativeSrc": "21595:13:13",
																"nodeType": "YulFunctionCall",
																"src": "21595:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "21588:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21588:3:13"
																}
															]
														}
													]
												},
												"name": "negate_t_int256",
												"nativeSrc": "21386:228:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21411:5:13",
														"nodeType": "YulTypedName",
														"src": "21411:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "21421:3:13",
														"nodeType": "YulTypedName",
														"src": "21421:3:13",
														"type": ""
													}
												],
												"src": "21386:228:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint8_to_t_uint8(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct YieldOptimizer.UserProfile -> struct YieldOptimizer.UserProfile\n    function abi_encode_t_struct$_UserProfile_$916_memory_ptr_to_t_struct$_UserProfile_$916_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // riskScore\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint8_to_t_uint8(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // totalDeposited\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // lastRebalance\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // autoRebalance\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    // struct YieldOptimizer.ProtocolAllocation -> struct YieldOptimizer.ProtocolAllocation\n    function abi_encode_t_struct$_ProtocolAllocation_$923_memory_ptr_to_t_struct$_ProtocolAllocation_$923_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // benqiAmount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // traderJoeAmount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // yieldYakAmount\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_struct$_UserProfile_$916_memory_ptr_t_struct$_ProtocolAllocation_$923_memory_ptr_t_uint256__to_t_struct$_UserProfile_$916_memory_ptr_t_struct$_ProtocolAllocation_$923_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_UserProfile_$916_memory_ptr_to_t_struct$_UserProfile_$916_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_struct$_ProtocolAllocation_$923_memory_ptr_to_t_struct$_ProtocolAllocation_$923_memory_ptr_fromStack(value1,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 224))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_uint256_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8_t_uint256_t_uint256_t_bool__to_t_uint8_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptrt_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e47e4d4019fbc3201dd7924d57a3f1daa90e6a7f83fef433220dabdb84cceb65(memPtr) {\n\n        mstore(add(memPtr, 0), \"Deposit too small\")\n\n    }\n\n    function abi_encode_t_stringliteral_e47e4d4019fbc3201dd7924d57a3f1daa90e6a7f83fef433220dabdb84cceb65_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_e47e4d4019fbc3201dd7924d57a3f1daa90e6a7f83fef433220dabdb84cceb65(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e47e4d4019fbc3201dd7924d57a3f1daa90e6a7f83fef433220dabdb84cceb65__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e47e4d4019fbc3201dd7924d57a3f1daa90e6a7f83fef433220dabdb84cceb65_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4f3530f04718d4d533ba4472936463d898d6bb1446e605473122cb9219ca1a7a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid risk score\")\n\n    }\n\n    function abi_encode_t_stringliteral_4f3530f04718d4d533ba4472936463d898d6bb1446e605473122cb9219ca1a7a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_4f3530f04718d4d533ba4472936463d898d6bb1446e605473122cb9219ca1a7a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4f3530f04718d4d533ba4472936463d898d6bb1446e605473122cb9219ca1a7a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4f3530f04718d4d533ba4472936463d898d6bb1446e605473122cb9219ca1a7a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint8__to_t_uint256_t_uint8__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_9ddaa44d722a3a8812710279db1e7f7e441f48ae85f2dbbc1cbbd2d86fcf715a(memPtr) {\n\n        mstore(add(memPtr, 0), \"No deposits to rebalance\")\n\n    }\n\n    function abi_encode_t_stringliteral_9ddaa44d722a3a8812710279db1e7f7e441f48ae85f2dbbc1cbbd2d86fcf715a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_9ddaa44d722a3a8812710279db1e7f7e441f48ae85f2dbbc1cbbd2d86fcf715a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9ddaa44d722a3a8812710279db1e7f7e441f48ae85f2dbbc1cbbd2d86fcf715a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9ddaa44d722a3a8812710279db1e7f7e441f48ae85f2dbbc1cbbd2d86fcf715a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_24f8419fdc4f6acf1200f13e6b585e241e72e1b37e4d57f20ad2da38a8f251fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"traderjoe\")\n\n    }\n\n    function abi_encode_t_stringliteral_24f8419fdc4f6acf1200f13e6b585e241e72e1b37e4d57f20ad2da38a8f251fe_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 9)\n        store_literal_in_memory_24f8419fdc4f6acf1200f13e6b585e241e72e1b37e4d57f20ad2da38a8f251fe(pos)\n        end := add(pos, 9)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_24f8419fdc4f6acf1200f13e6b585e241e72e1b37e4d57f20ad2da38a8f251fe__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_24f8419fdc4f6acf1200f13e6b585e241e72e1b37e4d57f20ad2da38a8f251fe_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_ca0da0a49743b95e8ea9e651d4f648be9bdc5629a2c1716e52deaa77b8602d67(memPtr) {\n\n        mstore(add(memPtr, 0), \"benqi\")\n\n    }\n\n    function abi_encode_t_stringliteral_ca0da0a49743b95e8ea9e651d4f648be9bdc5629a2c1716e52deaa77b8602d67_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 5)\n        store_literal_in_memory_ca0da0a49743b95e8ea9e651d4f648be9bdc5629a2c1716e52deaa77b8602d67(pos)\n        end := add(pos, 5)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_ca0da0a49743b95e8ea9e651d4f648be9bdc5629a2c1716e52deaa77b8602d67__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_ca0da0a49743b95e8ea9e651d4f648be9bdc5629a2c1716e52deaa77b8602d67_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_a24808fe8020be382efbc06e3d832c10022c9007a54161bd80307f00bff0c218(memPtr) {\n\n        mstore(add(memPtr, 0), \"yieldyak\")\n\n    }\n\n    function abi_encode_t_stringliteral_a24808fe8020be382efbc06e3d832c10022c9007a54161bd80307f00bff0c218_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 8)\n        store_literal_in_memory_a24808fe8020be382efbc06e3d832c10022c9007a54161bd80307f00bff0c218(pos)\n        end := add(pos, 8)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_a24808fe8020be382efbc06e3d832c10022c9007a54161bd80307f00bff0c218__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_a24808fe8020be382efbc06e3d832c10022c9007a54161bd80307f00bff0c218_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_a3844f20365e6d2d8ff7b4d99e0a3b236f50e2ae8088965ed1727f40132bf411(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid protocol\")\n\n    }\n\n    function abi_encode_t_stringliteral_a3844f20365e6d2d8ff7b4d99e0a3b236f50e2ae8088965ed1727f40132bf411_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_a3844f20365e6d2d8ff7b4d99e0a3b236f50e2ae8088965ed1727f40132bf411(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a3844f20365e6d2d8ff7b4d99e0a3b236f50e2ae8088965ed1727f40132bf411__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a3844f20365e6d2d8ff7b4d99e0a3b236f50e2ae8088965ed1727f40132bf411_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_calldata_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value0, value1,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 32))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function checked_sub_t_int256(x, y) -> diff {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        diff := sub(x, y)\n\n        // underflow, if y >= 0 and diff > x\n        // overflow, if y < 0 and diff < x\n        if or(\n            and(iszero(slt(y, 0)), sgt(diff, x)),\n            and(slt(y, 0), slt(diff, x))\n        ) { panic_error_0x11() }\n\n    }\n\n    function negate_t_int256(value) -> ret {\n        value := cleanup_t_int256(value)\n        if eq(value, 0x8000000000000000000000000000000000000000000000000000000000000000) { panic_error_0x11() }\n        ret := sub(0, value)\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061011d575f3560e01c80637d7c2a1c1161009f578063d076e8b411610063578063d076e8b4146103b7578063db2e21bc146103df578063e1e158a5146103f5578063e1f1c4a71461041f578063f2fde38b146104495761011d565b80637d7c2a1c146102f85780638ccbe9f51461030e5780638da5cb5b1461033b57806399e3228714610365578063c85b967d1461038d5761011d565b80632faff427116100e65780632faff42714610211578063324be9ef1461023b578063332d56d7146102655780634c0c87ff146102a4578063715018a6146102e25761011d565b8062349f3a14610121578063071a8ef51461013d5780631edb27e91461016757806322a16952146101a55780632ab8895f146101d2575b5f80fd5b61013b600480360381019061013691906117d0565b610471565b005b348015610148575f80fd5b506101516105ef565b60405161015e919061183a565b60405180910390f35b348015610172575f80fd5b5061018d6004803603810190610188919061187d565b610614565b60405161019c9392919061198b565b60405180910390f35b3480156101b0575f80fd5b506101b961074a565b6040516101c994939291906119c1565b60405180910390f35b3480156101dd575f80fd5b506101f860048036038101906101f3919061187d565b610773565b6040516102089493929190611a13565b60405180910390f35b34801561021c575f80fd5b506102256108e9565b604051610232919061183a565b60405180910390f35b348015610246575f80fd5b5061024f61090e565b60405161025c919061183a565b60405180910390f35b348015610270575f80fd5b5061028b6004803603810190610286919061187d565b610933565b60405161029b9493929190611a65565b60405180910390f35b3480156102af575f80fd5b506102ca60048036038101906102c5919061187d565b610977565b6040516102d993929190611aa8565b60405180910390f35b3480156102ed575f80fd5b506102f661099d565b005b348015610303575f80fd5b5061030c6109b0565b005b348015610319575f80fd5b50610322610b39565b60405161033294939291906119c1565b60405180910390f35b348015610346575f80fd5b5061034f610b56565b60405161035c919061183a565b60405180910390f35b348015610370575f80fd5b5061038b60048036038101906103869190611b07565b610b7d565b005b348015610398575f80fd5b506103a1610bec565b6040516103ae9190611b57565b60405180910390f35b3480156103c2575f80fd5b506103dd60048036038101906103d89190611bd1565b610bf2565b005b3480156103ea575f80fd5b506103f3610df4565b005b348015610400575f80fd5b50610409610fd3565b6040516104169190611b57565b60405180910390f35b34801561042a575f80fd5b50610433610fde565b6040516104409190611b57565b60405180910390f35b348015610454575f80fd5b5061046f600480360381019061046a919061187d565b610fe4565b005b610479611068565b662386f26fc100003410156104c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ba90611c88565b60405180910390fd5b60648160ff16111561050a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050190611cf0565b60405180910390fd5b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905081815f015f6101000a81548160ff021916908360ff16021790555034816001015f8282546105789190611d3b565b925050819055504281600201819055506105933334846110ae565b3373ffffffffffffffffffffffffffffffffffffffff167f0ffa6b713fe8ff42bd695a98451844fdf6abd6dd3999ab520f344f84aff7d2a034846040516105db929190611d6e565b60405180910390a2506105ec61128a565b50565b600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61061c61174b565b610624611774565b5f60025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060800160405290815f82015f9054906101000a900460ff1660ff1660ff1681526020016001820154815260200160028201548152602001600382015f9054906101000a900460ff161515151581525050925060035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060600160405290815f820154815260200160018201548152602001600282015481525050915081604001518260200151835f01516107379190611d3b565b6107419190611d3b565b90509193909250565b5f805f8060045f0154600460010154600460020154600460030154935093509350935090919293565b5f805f805f60025f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060800160405290815f82015f9054906101000a900460ff1660ff1660ff1681526020016001820154815260200160028201548152602001600382015f9054906101000a900460ff16151515158152505090505f60035f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060600160405290815f82015481526020016001820154815260200160028201548152505090505f826020015103610891575f805f80955095509550955050506108e2565b5f81604001518260200151835f01516108aa9190611d3b565b6108b49190611d3b565b90506108c381845f0151611293565b8096508197508298505050506108dc82878787856113aa565b96505050505b9193509193565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002602052805f5260405f205f91509050805f015f9054906101000a900460ff1690806001015490806002015490806003015f9054906101000a900460ff16905084565b6003602052805f5260405f205f91509050805f0154908060010154908060020154905083565b6109a561140a565b6109ae5f611491565b565b6109b8611068565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f816001015411610a3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3590611ddf565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f81600201548260010154835f0154610a979190611d3b565b610aa19190611d3b565b90505f805f610abf84875f015f9054906101000a900460ff16611293565b925092509250610ad23386858585611552565b4286600201819055503373ffffffffffffffffffffffffffffffffffffffff167f1427d1942829759938581ce754fd0f7f116bfb7a4b77f80f0cb32cd62c2138c785604051610b219190611b57565b60405180910390a2505050505050610b3761128a565b565b6004805f0154908060010154908060020154908060030154905084565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610b8561140a565b8260045f01819055508160046001018190555080600460020181905550426004600301819055507feb5e818d5254a980eae621ccdcf791eb702d2f526caf4d0833b622e27964d549838383604051610bdf93929190611aa8565b60405180910390a1505050565b6101f481565b610bfa61140a565b5f8383604051602001610c0e929190611e39565b604051602081830303815290604052805190602001209050604051602001610c3590611e9b565b604051602081830303815290604052805190602001208103610c96578160085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610db3565b604051602001610ca590611ef9565b604051602081830303815290604052805190602001208103610d06578160095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610db2565b604051602001610d1590611f57565b604051602081830303815290604052805190602001208103610d765781600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610db1565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da890611fb5565b60405180910390fd5b5b5b7f50df56c33b3bd3dac7a2db51a3f7c8bdaabf78a57ff1fab3a72992006a77e69e848484604051610de69392919061200f565b60405180910390a150505050565b610dfc611068565b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f80835f01541115610eaa57610e94835f015461166d565b81610e9f9190611d3b565b90505f835f01819055505b5f83600101541115610eda57610ec383600101546116b1565b81610ece9190611d3b565b90505f83600101819055505b5f83600201541115610f0a57610ef383600201546116f6565b81610efe9190611d3b565b90505f83600201819055505b5f82600101819055505f4790505f818311610f255782610f27565b815b90505f811115610fc4573373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610f74573d5f803e3d5ffd5b503373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d582604051610fbb9190611b57565b60405180910390a25b5050505050610fd161128a565b565b662386f26fc1000081565b61271081565b610fec61140a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361105c575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611053919061183a565b60405180910390fd5b61106581611491565b50565b6002600154036110a4576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b5f60035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f805f60218560ff161161113e57612710611b588761110d919061203f565b61111791906120ad565b9250612710610bb88761112a919061203f565b61113491906120ad565b91505f90506111fe565b60428560ff16116111a557612710610fa08761115a919061203f565b61116491906120ad565b9250612710610fa087611177919061203f565b61118191906120ad565b91506127106107d087611194919061203f565b61119e91906120ad565b90506111fd565b6127106107d0876111b6919061203f565b6111c091906120ad565b9250612710610bb8876111d3919061203f565b6111dd91906120ad565b9150612710611388876111f0919061203f565b6111fa91906120ad565b90505b5b82845f015f8282546112109190611d3b565b9250508190555081846001015f82825461122a9190611d3b565b9250508190555080846002015f8282546112449190611d3b565b925050819055505f83111561125d5761125c8361173b565b5b5f82111561126f5761126e8261173e565b5b5f8111156112815761128081611741565b5b50505050505050565b60018081905550565b5f805f60218460ff16116112e357612710611b58866112b2919061203f565b6112bc91906120ad565b9250612710610bb8866112cf919061203f565b6112d991906120ad565b91505f90506113a3565b60428460ff161161134a57612710610fa0866112ff919061203f565b61130991906120ad565b9250612710610fa08661131c919061203f565b61132691906120ad565b91506127106107d086611339919061203f565b61134391906120ad565b90506113a2565b6127106107d08661135b919061203f565b61136591906120ad565b9250612710610bb886611378919061203f565b61138291906120ad565b915061271061138886611395919061203f565b61139f91906120ad565b90505b5b9250925092565b5f8085875f0151116113ca57865f0151866113c591906120dd565b6113da565b85875f01516113d991906120dd565b5b90505f6127106101f4856113ee919061203f565b6113f891906120ad565b90508082119250505095945050505050565b611412611744565b73ffffffffffffffffffffffffffffffffffffffff16611430610b56565b73ffffffffffffffffffffffffffffffffffffffff161461148f57611453611744565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611486919061183a565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f845f0154846115629190612119565b90505f8560010154846115759190612119565b90505f8660020154846115889190612119565b90505f808412156115b8575f8461159e90612159565b90506115a98161166d565b826115b49190611d3b565b9150505b5f8312156115e5575f836115cb90612159565b90506115d6816116b1565b826115e19190611d3b565b9150505b5f821215611612575f826115f890612159565b9050611603816116f6565b8261160e9190611d3b565b9150505b5f841315611624576116238461173b565b5b5f831315611636576116358361173e565b5b5f8213156116485761164782611741565b5b86885f0181905550858860010181905550848860020181905550505050505050505050565b5f8061271061016d60045f015461168491906120ad565b6127106116919190611d3b565b8461169c919061203f565b6116a691906120ad565b905080915050919050565b5f8061271061016d6004600101546116c991906120ad565b6127106116d69190611d3b565b846116e1919061203f565b6116eb91906120ad565b905080915050919050565b5f8061271061016d60046002015461170e91906120ad565b61271061171b9190611d3b565b84611726919061203f565b61173091906120ad565b905080915050919050565b50565b50565b50565b5f33905090565b60405180608001604052805f60ff1681526020015f81526020015f81526020015f151581525090565b60405180606001604052805f81526020015f81526020015f81525090565b5f80fd5b5f80fd5b5f60ff82169050919050565b6117af8161179a565b81146117b9575f80fd5b50565b5f813590506117ca816117a6565b92915050565b5f602082840312156117e5576117e4611792565b5b5f6117f2848285016117bc565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611824826117fb565b9050919050565b6118348161181a565b82525050565b5f60208201905061184d5f83018461182b565b92915050565b61185c8161181a565b8114611866575f80fd5b50565b5f8135905061187781611853565b92915050565b5f6020828403121561189257611891611792565b5b5f61189f84828501611869565b91505092915050565b6118b18161179a565b82525050565b5f819050919050565b6118c9816118b7565b82525050565b5f8115159050919050565b6118e3816118cf565b82525050565b608082015f8201516118fd5f8501826118a8565b50602082015161191060208501826118c0565b50604082015161192360408501826118c0565b50606082015161193660608501826118da565b50505050565b606082015f8201516119505f8501826118c0565b50602082015161196360208501826118c0565b50604082015161197660408501826118c0565b50505050565b611985816118b7565b82525050565b5f6101008201905061199f5f8301866118e9565b6119ac608083018561193c565b6119b960e083018461197c565b949350505050565b5f6080820190506119d45f83018761197c565b6119e1602083018661197c565b6119ee604083018561197c565b6119fb606083018461197c565b95945050505050565b611a0d816118cf565b82525050565b5f608082019050611a265f830187611a04565b611a33602083018661197c565b611a40604083018561197c565b611a4d606083018461197c565b95945050505050565b611a5f8161179a565b82525050565b5f608082019050611a785f830187611a56565b611a85602083018661197c565b611a92604083018561197c565b611a9f6060830184611a04565b95945050505050565b5f606082019050611abb5f83018661197c565b611ac8602083018561197c565b611ad5604083018461197c565b949350505050565b611ae6816118b7565b8114611af0575f80fd5b50565b5f81359050611b0181611add565b92915050565b5f805f60608486031215611b1e57611b1d611792565b5b5f611b2b86828701611af3565b9350506020611b3c86828701611af3565b9250506040611b4d86828701611af3565b9150509250925092565b5f602082019050611b6a5f83018461197c565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112611b9157611b90611b70565b5b8235905067ffffffffffffffff811115611bae57611bad611b74565b5b602083019150836001820283011115611bca57611bc9611b78565b5b9250929050565b5f805f60408486031215611be857611be7611792565b5b5f84013567ffffffffffffffff811115611c0557611c04611796565b5b611c1186828701611b7c565b93509350506020611c2486828701611869565b9150509250925092565b5f82825260208201905092915050565b7f4465706f73697420746f6f20736d616c6c0000000000000000000000000000005f82015250565b5f611c72601183611c2e565b9150611c7d82611c3e565b602082019050919050565b5f6020820190508181035f830152611c9f81611c66565b9050919050565b7f496e76616c6964207269736b2073636f726500000000000000000000000000005f82015250565b5f611cda601283611c2e565b9150611ce582611ca6565b602082019050919050565b5f6020820190508181035f830152611d0781611cce565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611d45826118b7565b9150611d50836118b7565b9250828201905080821115611d6857611d67611d0e565b5b92915050565b5f604082019050611d815f83018561197c565b611d8e6020830184611a56565b9392505050565b7f4e6f206465706f7369747320746f20726562616c616e636500000000000000005f82015250565b5f611dc9601883611c2e565b9150611dd482611d95565b602082019050919050565b5f6020820190508181035f830152611df681611dbd565b9050919050565b5f81905092915050565b828183375f83830152505050565b5f611e208385611dfd565b9350611e2d838584611e07565b82840190509392505050565b5f611e45828486611e15565b91508190509392505050565b7f7472616465726a6f6500000000000000000000000000000000000000000000005f82015250565b5f611e85600983611dfd565b9150611e9082611e51565b600982019050919050565b5f611ea582611e79565b9150819050919050565b7f62656e71690000000000000000000000000000000000000000000000000000005f82015250565b5f611ee3600583611dfd565b9150611eee82611eaf565b600582019050919050565b5f611f0382611ed7565b9150819050919050565b7f7969656c6479616b0000000000000000000000000000000000000000000000005f82015250565b5f611f41600883611dfd565b9150611f4c82611f0d565b600882019050919050565b5f611f6182611f35565b9150819050919050565b7f496e76616c69642070726f746f636f6c000000000000000000000000000000005f82015250565b5f611f9f601083611c2e565b9150611faa82611f6b565b602082019050919050565b5f6020820190508181035f830152611fcc81611f93565b9050919050565b5f601f19601f8301169050919050565b5f611fee8385611c2e565b9350611ffb838584611e07565b61200483611fd3565b840190509392505050565b5f6040820190508181035f830152612028818587611fe3565b9050612037602083018461182b565b949350505050565b5f612049826118b7565b9150612054836118b7565b9250828202612062816118b7565b9150828204841483151761207957612078611d0e565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6120b7826118b7565b91506120c2836118b7565b9250826120d2576120d1612080565b5b828204905092915050565b5f6120e7826118b7565b91506120f2836118b7565b925082820390508181111561210a57612109611d0e565b5b92915050565b5f819050919050565b5f61212382612110565b915061212e83612110565b925082820390508181125f8412168282135f85121516171561215357612152611d0e565b5b92915050565b5f61216382612110565b91507f8000000000000000000000000000000000000000000000000000000000000000820361219557612194611d0e565b5b815f03905091905056fea26469706673582212204a5c8aa158035cca3c72094780a69ffce4d89a1998c0e19f6f1a3562c247690164736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D7C2A1C GT PUSH2 0x9F JUMPI DUP1 PUSH4 0xD076E8B4 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD076E8B4 EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0xE1E158A5 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0xE1F1C4A7 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x449 JUMPI PUSH2 0x11D JUMP JUMPDEST DUP1 PUSH4 0x7D7C2A1C EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x8CCBE9F5 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x99E32287 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0xC85B967D EQ PUSH2 0x38D JUMPI PUSH2 0x11D JUMP JUMPDEST DUP1 PUSH4 0x2FAFF427 GT PUSH2 0xE6 JUMPI DUP1 PUSH4 0x2FAFF427 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x324BE9EF EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x332D56D7 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x4C0C87FF EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E2 JUMPI PUSH2 0x11D JUMP JUMPDEST DUP1 PUSH3 0x349F3A EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x71A8EF5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x1EDB27E9 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x22A16952 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x2AB8895F EQ PUSH2 0x1D2 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x17D0 JUMP JUMPDEST PUSH2 0x471 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x148 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x151 PUSH2 0x5EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x187D JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x74A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x187D JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x225 PUSH2 0x8E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x246 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24F PUSH2 0x90E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x187D JUMP JUMPDEST PUSH2 0x933 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x187D JUMP JUMPDEST PUSH2 0x977 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F6 PUSH2 0x99D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30C PUSH2 0x9B0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x319 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH2 0xB39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x332 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34F PUSH2 0xB56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x370 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x38B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x1B07 JUMP JUMPDEST PUSH2 0xB7D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x398 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A1 PUSH2 0xBEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x1BD1 JUMP JUMPDEST PUSH2 0xBF2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F3 PUSH2 0xDF4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x409 PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x416 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x433 PUSH2 0xFDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x454 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x187D JUMP JUMPDEST PUSH2 0xFE4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x479 PUSH2 0x1068 JUMP JUMPDEST PUSH7 0x2386F26FC10000 CALLVALUE LT ISZERO PUSH2 0x4C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BA SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP2 PUSH1 0xFF AND GT ISZERO PUSH2 0x50A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x501 SWAP1 PUSH2 0x1CF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP2 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x578 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x593 CALLER CALLVALUE DUP5 PUSH2 0x10AE JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFA6B713FE8FF42BD695A98451844FDF6ABD6DD3999AB520F344F84AFF7D2A0 CALLVALUE DUP5 PUSH1 0x40 MLOAD PUSH2 0x5DB SWAP3 SWAP2 SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x5EC PUSH2 0x128A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x61C PUSH2 0x174B JUMP JUMPDEST PUSH2 0x624 PUSH2 0x1774 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP3 POP PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP2 POP DUP2 PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH0 ADD MLOAD PUSH2 0x737 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST PUSH2 0x741 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x4 PUSH0 ADD SLOAD PUSH1 0x4 PUSH1 0x1 ADD SLOAD PUSH1 0x4 PUSH1 0x2 ADD SLOAD PUSH1 0x4 PUSH1 0x3 ADD SLOAD SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x2 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD MLOAD SUB PUSH2 0x891 JUMPI PUSH0 DUP1 PUSH0 DUP1 SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP POP PUSH2 0x8E2 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH0 ADD MLOAD PUSH2 0x8AA SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST PUSH2 0x8B4 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST SWAP1 POP PUSH2 0x8C3 DUP2 DUP5 PUSH0 ADD MLOAD PUSH2 0x1293 JUMP JUMPDEST DUP1 SWAP7 POP DUP2 SWAP8 POP DUP3 SWAP9 POP POP POP POP PUSH2 0x8DC DUP3 DUP8 DUP8 DUP8 DUP6 PUSH2 0x13AA JUMP JUMPDEST SWAP7 POP POP POP POP JUMPDEST SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x9A5 PUSH2 0x140A JUMP JUMPDEST PUSH2 0x9AE PUSH0 PUSH2 0x1491 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9B8 PUSH2 0x1068 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x1 ADD SLOAD GT PUSH2 0xA3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA35 SWAP1 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD DUP3 PUSH1 0x1 ADD SLOAD DUP4 PUSH0 ADD SLOAD PUSH2 0xA97 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST PUSH2 0xAA1 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH0 PUSH2 0xABF DUP5 DUP8 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1293 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xAD2 CALLER DUP7 DUP6 DUP6 DUP6 PUSH2 0x1552 JUMP JUMPDEST TIMESTAMP DUP7 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1427D1942829759938581CE754FD0F7F116BFB7A4B77F80F0CB32CD62C2138C7 DUP6 PUSH1 0x40 MLOAD PUSH2 0xB21 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP PUSH2 0xB37 PUSH2 0x128A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB85 PUSH2 0x140A JUMP JUMPDEST DUP3 PUSH1 0x4 PUSH0 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x4 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xEB5E818D5254A980EAE621CCDCF791EB702D2F526CAF4D0833B622E27964D549 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xBDF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x1F4 DUP2 JUMP JUMPDEST PUSH2 0xBFA PUSH2 0x140A JUMP JUMPDEST PUSH0 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC0E SWAP3 SWAP2 SWAP1 PUSH2 0x1E39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC35 SWAP1 PUSH2 0x1E9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 SUB PUSH2 0xC96 JUMPI DUP2 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xDB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCA5 SWAP1 PUSH2 0x1EF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 SUB PUSH2 0xD06 JUMPI DUP2 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xDB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD15 SWAP1 PUSH2 0x1F57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 SUB PUSH2 0xD76 JUMPI DUP2 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xDB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA8 SWAP1 PUSH2 0x1FB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST PUSH32 0x50DF56C33B3BD3DAC7A2DB51A3F7C8BDAABF78A57FF1FAB3A72992006A77E69E DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDE6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x200F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0xDFC PUSH2 0x1068 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP1 DUP4 PUSH0 ADD SLOAD GT ISZERO PUSH2 0xEAA JUMPI PUSH2 0xE94 DUP4 PUSH0 ADD SLOAD PUSH2 0x166D JUMP JUMPDEST DUP2 PUSH2 0xE9F SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 DUP4 PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0xEDA JUMPI PUSH2 0xEC3 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x16B1 JUMP JUMPDEST DUP2 PUSH2 0xECE SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 DUP4 PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0xF0A JUMPI PUSH2 0xEF3 DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0x16F6 JUMP JUMPDEST DUP2 PUSH2 0xEFE SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH0 SELFBALANCE SWAP1 POP PUSH0 DUP2 DUP4 GT PUSH2 0xF25 JUMPI DUP3 PUSH2 0xF27 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xFC4 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF74 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP3 PUSH1 0x40 MLOAD PUSH2 0xFBB SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP POP PUSH2 0xFD1 PUSH2 0x128A JUMP JUMPDEST JUMP JUMPDEST PUSH7 0x2386F26FC10000 DUP2 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0xFEC PUSH2 0x140A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x105C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1053 SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1065 DUP2 PUSH2 0x1491 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x10A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP1 PUSH0 PUSH1 0x21 DUP6 PUSH1 0xFF AND GT PUSH2 0x113E JUMPI PUSH2 0x2710 PUSH2 0x1B58 DUP8 PUSH2 0x110D SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x1117 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP3 POP PUSH2 0x2710 PUSH2 0xBB8 DUP8 PUSH2 0x112A SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x1134 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH0 SWAP1 POP PUSH2 0x11FE JUMP JUMPDEST PUSH1 0x42 DUP6 PUSH1 0xFF AND GT PUSH2 0x11A5 JUMPI PUSH2 0x2710 PUSH2 0xFA0 DUP8 PUSH2 0x115A SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x1164 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP3 POP PUSH2 0x2710 PUSH2 0xFA0 DUP8 PUSH2 0x1177 SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x1181 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH2 0x2710 PUSH2 0x7D0 DUP8 PUSH2 0x1194 SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x119E SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP1 POP PUSH2 0x11FD JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x7D0 DUP8 PUSH2 0x11B6 SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x11C0 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP3 POP PUSH2 0x2710 PUSH2 0xBB8 DUP8 PUSH2 0x11D3 SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x11DD SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH2 0x2710 PUSH2 0x1388 DUP8 PUSH2 0x11F0 SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x11FA SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST DUP3 DUP5 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1210 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 DUP5 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x122A SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP5 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1244 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP4 GT ISZERO PUSH2 0x125D JUMPI PUSH2 0x125C DUP4 PUSH2 0x173B JUMP JUMPDEST JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0x126F JUMPI PUSH2 0x126E DUP3 PUSH2 0x173E JUMP JUMPDEST JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x1281 JUMPI PUSH2 0x1280 DUP2 PUSH2 0x1741 JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x21 DUP5 PUSH1 0xFF AND GT PUSH2 0x12E3 JUMPI PUSH2 0x2710 PUSH2 0x1B58 DUP7 PUSH2 0x12B2 SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x12BC SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP3 POP PUSH2 0x2710 PUSH2 0xBB8 DUP7 PUSH2 0x12CF SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x12D9 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH0 SWAP1 POP PUSH2 0x13A3 JUMP JUMPDEST PUSH1 0x42 DUP5 PUSH1 0xFF AND GT PUSH2 0x134A JUMPI PUSH2 0x2710 PUSH2 0xFA0 DUP7 PUSH2 0x12FF SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x1309 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP3 POP PUSH2 0x2710 PUSH2 0xFA0 DUP7 PUSH2 0x131C SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x1326 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH2 0x2710 PUSH2 0x7D0 DUP7 PUSH2 0x1339 SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x1343 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP1 POP PUSH2 0x13A2 JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x7D0 DUP7 PUSH2 0x135B SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x1365 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP3 POP PUSH2 0x2710 PUSH2 0xBB8 DUP7 PUSH2 0x1378 SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x1382 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH2 0x2710 PUSH2 0x1388 DUP7 PUSH2 0x1395 SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x139F SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 DUP6 DUP8 PUSH0 ADD MLOAD GT PUSH2 0x13CA JUMPI DUP7 PUSH0 ADD MLOAD DUP7 PUSH2 0x13C5 SWAP2 SWAP1 PUSH2 0x20DD JUMP JUMPDEST PUSH2 0x13DA JUMP JUMPDEST DUP6 DUP8 PUSH0 ADD MLOAD PUSH2 0x13D9 SWAP2 SWAP1 PUSH2 0x20DD JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 PUSH2 0x1F4 DUP6 PUSH2 0x13EE SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x13F8 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1412 PUSH2 0x1744 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1430 PUSH2 0xB56 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x148F JUMPI PUSH2 0x1453 PUSH2 0x1744 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1486 SWAP2 SWAP1 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH0 ADD SLOAD DUP5 PUSH2 0x1562 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST SWAP1 POP PUSH0 DUP6 PUSH1 0x1 ADD SLOAD DUP5 PUSH2 0x1575 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST SWAP1 POP PUSH0 DUP7 PUSH1 0x2 ADD SLOAD DUP5 PUSH2 0x1588 SWAP2 SWAP1 PUSH2 0x2119 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 DUP5 SLT ISZERO PUSH2 0x15B8 JUMPI PUSH0 DUP5 PUSH2 0x159E SWAP1 PUSH2 0x2159 JUMP JUMPDEST SWAP1 POP PUSH2 0x15A9 DUP2 PUSH2 0x166D JUMP JUMPDEST DUP3 PUSH2 0x15B4 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH0 DUP4 SLT ISZERO PUSH2 0x15E5 JUMPI PUSH0 DUP4 PUSH2 0x15CB SWAP1 PUSH2 0x2159 JUMP JUMPDEST SWAP1 POP PUSH2 0x15D6 DUP2 PUSH2 0x16B1 JUMP JUMPDEST DUP3 PUSH2 0x15E1 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH0 DUP3 SLT ISZERO PUSH2 0x1612 JUMPI PUSH0 DUP3 PUSH2 0x15F8 SWAP1 PUSH2 0x2159 JUMP JUMPDEST SWAP1 POP PUSH2 0x1603 DUP2 PUSH2 0x16F6 JUMP JUMPDEST DUP3 PUSH2 0x160E SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH0 DUP5 SGT ISZERO PUSH2 0x1624 JUMPI PUSH2 0x1623 DUP5 PUSH2 0x173B JUMP JUMPDEST JUMPDEST PUSH0 DUP4 SGT ISZERO PUSH2 0x1636 JUMPI PUSH2 0x1635 DUP4 PUSH2 0x173E JUMP JUMPDEST JUMPDEST PUSH0 DUP3 SGT ISZERO PUSH2 0x1648 JUMPI PUSH2 0x1647 DUP3 PUSH2 0x1741 JUMP JUMPDEST JUMPDEST DUP7 DUP9 PUSH0 ADD DUP2 SWAP1 SSTORE POP DUP6 DUP9 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP5 DUP9 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2710 PUSH2 0x16D PUSH1 0x4 PUSH0 ADD SLOAD PUSH2 0x1684 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x1691 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST DUP5 PUSH2 0x169C SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x16A6 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2710 PUSH2 0x16D PUSH1 0x4 PUSH1 0x1 ADD SLOAD PUSH2 0x16C9 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x16D6 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST DUP5 PUSH2 0x16E1 SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x16EB SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2710 PUSH2 0x16D PUSH1 0x4 PUSH1 0x2 ADD SLOAD PUSH2 0x170E SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x171B SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST DUP5 PUSH2 0x1726 SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0x1730 SWAP2 SWAP1 PUSH2 0x20AD JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP JUMP JUMPDEST POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17AF DUP2 PUSH2 0x179A JUMP JUMPDEST DUP2 EQ PUSH2 0x17B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17CA DUP2 PUSH2 0x17A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17E5 JUMPI PUSH2 0x17E4 PUSH2 0x1792 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17F2 DUP5 DUP3 DUP6 ADD PUSH2 0x17BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1824 DUP3 PUSH2 0x17FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1834 DUP2 PUSH2 0x181A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x184D PUSH0 DUP4 ADD DUP5 PUSH2 0x182B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x185C DUP2 PUSH2 0x181A JUMP JUMPDEST DUP2 EQ PUSH2 0x1866 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1877 DUP2 PUSH2 0x1853 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1892 JUMPI PUSH2 0x1891 PUSH2 0x1792 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x189F DUP5 DUP3 DUP6 ADD PUSH2 0x1869 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18B1 DUP2 PUSH2 0x179A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18C9 DUP2 PUSH2 0x18B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E3 DUP2 PUSH2 0x18CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x18FD PUSH0 DUP6 ADD DUP3 PUSH2 0x18A8 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1910 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x18C0 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1923 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x18C0 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1936 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x18DA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1950 PUSH0 DUP6 ADD DUP3 PUSH2 0x18C0 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1963 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x18C0 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1976 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x18C0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1985 DUP2 PUSH2 0x18B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x199F PUSH0 DUP4 ADD DUP7 PUSH2 0x18E9 JUMP JUMPDEST PUSH2 0x19AC PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x193C JUMP JUMPDEST PUSH2 0x19B9 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x197C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x19D4 PUSH0 DUP4 ADD DUP8 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x19E1 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x19EE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x19FB PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x197C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1A0D DUP2 PUSH2 0x18CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1A26 PUSH0 DUP4 ADD DUP8 PUSH2 0x1A04 JUMP JUMPDEST PUSH2 0x1A33 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1A40 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1A4D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x197C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1A5F DUP2 PUSH2 0x179A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1A78 PUSH0 DUP4 ADD DUP8 PUSH2 0x1A56 JUMP JUMPDEST PUSH2 0x1A85 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1A92 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1A9F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1A04 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1ABB PUSH0 DUP4 ADD DUP7 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1AC8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1AD5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x197C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1AE6 DUP2 PUSH2 0x18B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B01 DUP2 PUSH2 0x1ADD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B1E JUMPI PUSH2 0x1B1D PUSH2 0x1792 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B2B DUP7 DUP3 DUP8 ADD PUSH2 0x1AF3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B3C DUP7 DUP3 DUP8 ADD PUSH2 0x1AF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B4D DUP7 DUP3 DUP8 ADD PUSH2 0x1AF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B6A PUSH0 DUP4 ADD DUP5 PUSH2 0x197C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1B91 JUMPI PUSH2 0x1B90 PUSH2 0x1B70 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BAE JUMPI PUSH2 0x1BAD PUSH2 0x1B74 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1BCA JUMPI PUSH2 0x1BC9 PUSH2 0x1B78 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BE8 JUMPI PUSH2 0x1BE7 PUSH2 0x1792 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C05 JUMPI PUSH2 0x1C04 PUSH2 0x1796 JUMP JUMPDEST JUMPDEST PUSH2 0x1C11 DUP7 DUP3 DUP8 ADD PUSH2 0x1B7C JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C24 DUP7 DUP3 DUP8 ADD PUSH2 0x1869 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4465706F73697420746F6F20736D616C6C000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C72 PUSH1 0x11 DUP4 PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP PUSH2 0x1C7D DUP3 PUSH2 0x1C3E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C9F DUP2 PUSH2 0x1C66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207269736B2073636F72650000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CDA PUSH1 0x12 DUP4 PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE5 DUP3 PUSH2 0x1CA6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D07 DUP2 PUSH2 0x1CCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D45 DUP3 PUSH2 0x18B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D50 DUP4 PUSH2 0x18B7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D68 JUMPI PUSH2 0x1D67 PUSH2 0x1D0E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D81 PUSH0 DUP4 ADD DUP6 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1D8E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A56 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F206465706F7369747320746F20726562616C616E63650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DC9 PUSH1 0x18 DUP4 PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP PUSH2 0x1DD4 DUP3 PUSH2 0x1D95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DF6 DUP2 PUSH2 0x1DBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E20 DUP4 DUP6 PUSH2 0x1DFD JUMP JUMPDEST SWAP4 POP PUSH2 0x1E2D DUP4 DUP6 DUP5 PUSH2 0x1E07 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E45 DUP3 DUP5 DUP7 PUSH2 0x1E15 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x7472616465726A6F650000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E85 PUSH1 0x9 DUP4 PUSH2 0x1DFD JUMP JUMPDEST SWAP2 POP PUSH2 0x1E90 DUP3 PUSH2 0x1E51 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EA5 DUP3 PUSH2 0x1E79 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x62656E7169000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EE3 PUSH1 0x5 DUP4 PUSH2 0x1DFD JUMP JUMPDEST SWAP2 POP PUSH2 0x1EEE DUP3 PUSH2 0x1EAF JUMP JUMPDEST PUSH1 0x5 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F03 DUP3 PUSH2 0x1ED7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7969656C6479616B000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F41 PUSH1 0x8 DUP4 PUSH2 0x1DFD JUMP JUMPDEST SWAP2 POP PUSH2 0x1F4C DUP3 PUSH2 0x1F0D JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F61 DUP3 PUSH2 0x1F35 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642070726F746F636F6C00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F9F PUSH1 0x10 DUP4 PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAA DUP3 PUSH2 0x1F6B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FCC DUP2 PUSH2 0x1F93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FEE DUP4 DUP6 PUSH2 0x1C2E JUMP JUMPDEST SWAP4 POP PUSH2 0x1FFB DUP4 DUP6 DUP5 PUSH2 0x1E07 JUMP JUMPDEST PUSH2 0x2004 DUP4 PUSH2 0x1FD3 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2028 DUP2 DUP6 DUP8 PUSH2 0x1FE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x2037 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x182B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2049 DUP3 PUSH2 0x18B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2054 DUP4 PUSH2 0x18B7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2062 DUP2 PUSH2 0x18B7 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2079 JUMPI PUSH2 0x2078 PUSH2 0x1D0E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x20B7 DUP3 PUSH2 0x18B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x20C2 DUP4 PUSH2 0x18B7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x20D2 JUMPI PUSH2 0x20D1 PUSH2 0x2080 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20E7 DUP3 PUSH2 0x18B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F2 DUP4 PUSH2 0x18B7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x210A JUMPI PUSH2 0x2109 PUSH2 0x1D0E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2123 DUP3 PUSH2 0x2110 JUMP JUMPDEST SWAP2 POP PUSH2 0x212E DUP4 PUSH2 0x2110 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 SLT PUSH0 DUP5 SLT AND DUP3 DUP3 SGT PUSH0 DUP6 SLT ISZERO AND OR ISZERO PUSH2 0x2153 JUMPI PUSH2 0x2152 PUSH2 0x1D0E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2163 DUP3 PUSH2 0x2110 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 SUB PUSH2 0x2195 JUMPI PUSH2 0x2194 PUSH2 0x1D0E JUMP JUMPDEST JUMPDEST DUP2 PUSH0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A 0x5C DUP11 LOG1 PC SUB 0x5C 0xCA EXTCODECOPY PUSH19 0x94780A69FFCE4D89A1998C0E19F6F1A3562C2 SELFBALANCE PUSH10 0x164736F6C6343000817 STOP CALLER ",
							"sourceMap": "405:15225:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2846:584;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1647:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5919:457;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;5484:359;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;6455:1010;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1574:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1610:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1338:51;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1395:61;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;7530:771:9;;;;;;;;;;;;;:::i;:::-;;1462:30;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15240:388:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1778:49;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14568:666;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8365:1266;;;;;;;;;;;;;:::i;:::-;;1702:48;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1865:44;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2846:584:9;2500:21:7;:19;:21::i;:::-;1740:10:9::1;2935:9;:24;;2927:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;3013:3;2999:10;:17;;;;2991:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;3050:27;3080:12;:24;3093:10;3080:24;;;;;;;;;;;;;;;3050:54;;3134:10;3114:7;:17;;;:30;;;;;;;;;;;;;;;;;;3180:9;3154:7;:22;;;:35;;;;;;;:::i;:::-;;;;;;;;3223:15;3199:7;:21;;:39;;;;3301:49;3316:10;3328:9;3339:10;3301:14;:49::i;:::-;3389:10;3374:49;;;3401:9;3412:10;3374:49;;;;;;;:::i;:::-;;;;;;;;2917:513;2542:20:7::0;:18;:20::i;:::-;2846:584:9;:::o;1647:27::-;;;;;;;;;;;;;:::o;5919:457::-;5991:26;;:::i;:::-;6027:36;;:::i;:::-;6073:22;6122:12;:18;6135:4;6122:18;;;;;;;;;;;;;;;6112:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6163:15;:21;6179:4;6163:21;;;;;;;;;;;;;;;6150:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6344:10;:25;;;6315:10;:26;;;6290:10;:22;;;:51;;;;:::i;:::-;:79;;;;:::i;:::-;6273:96;;5919:457;;;;;:::o;5484:359::-;5544:16;5570:20;5600:19;5629;5686:13;:22;;;5722:13;:26;;;5762:13;:25;;;5801:13;:25;;;5665:171;;;;;;;;5484:359;;;;:::o;6455:1010::-;6537:20;6567:26;6603:30;6643:29;6689:26;6718:12;:18;6731:4;6718:18;;;;;;;;;;;;;;;6689:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6746:33;6782:15;:21;6798:4;6782:21;;;;;;;;;;;;;;;6746:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6852:1;6826:7;:22;;;:27;6822:81;;6877:5;6884:1;6887;6890;6869:23;;;;;;;;;;;;6822:81;6976:18;7045:7;:22;;;7019:7;:23;;;6997:7;:19;;;:45;;;;:::i;:::-;:70;;;;:::i;:::-;6976:91;;7169:58;7197:10;7209:7;:17;;;7169:27;:58::i;:::-;7086:141;;;;;;;;;;;;7354:104;7371:7;7380:18;7400:22;7424:21;7447:10;7354:16;:104::i;:::-;7336:122;;6679:786;;;6455:1010;;;;;;:::o;1574:30::-;;;;;;;;;;;;;:::o;1610:31::-;;;;;;;;;;;;;:::o;1338:51::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1395:61::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;7530:771:9:-;2500:21:7;:19;:21::i;:::-;7583:27:9::1;7613:12;:24;7626:10;7613:24;;;;;;;;;;;;;;;7583:54;;7680:1;7655:7;:22;;;:26;7647:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;7721:37;7761:15;:27;7777:10;7761:27;;;;;;;;;;;;;;;7721:67;;7798:18;7873:10;:25;;;7844:10;:26;;;7819:10;:22;;;:51;;;;:::i;:::-;:79;;;;:::i;:::-;7798:100;;7910:16;7928:20:::0;7950:19:::1;7986:58;8014:10;8026:7;:17;;;;;;;;;;;;7986:27;:58::i;:::-;7909:135;;;;;;8117:78;8135:10;8147;8159:8;8169:12;8183:11;8117:17;:78::i;:::-;8230:15;8206:7;:21;;:39;;;;8271:10;8260:34;;;8283:10;8260:34;;;;;;:::i;:::-;;;;;;;;7573:728;;;;;;2542:20:7::0;:18;:20::i;:::-;7530:771:9:o;1462:30::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;15240:388:9:-;1531:13:0;:11;:13::i;:::-;15380:9:9::1;15355:13;:22;;:34;;;;15428:13;15399;:26;;:42;;;;15479:12;15451:13;:25;;:40;;;;15529:15;15501:13;:25;;:43;;;;15568:53;15582:9;15593:13;15608:12;15568:53;;;;;;;;:::i;:::-;;;;;;;;15240:388:::0;;;:::o;1778:49::-;1824:3;1778:49;:::o;14568:666::-;1531:13:0;:11;:13::i;:::-;14674:20:9::1;14724:8;;14707:26;;;;;;;;;:::i;:::-;;;;;;;;;;;;;14697:37;;;;;;14674:60;;14783:29;;;;;;;:::i;:::-;;;;;;;;;;;;;14773:40;;;;;;14757:12;:56:::0;14753:407:::1;;14847:10;14829:15;;:28;;;;;;;;;;;;;;;;;;14753:407;;;14904:25;;;;;;;:::i;:::-;;;;;;;;;;;;;14894:36;;;;;;14878:12;:52:::0;14874:286:::1;;14965:10;14946:16;;:29;;;;;;;;;;;;;;;;;;14874:286;;;15022:28;;;;;;;:::i;:::-;;;;;;;;;;;;;15012:39;;;;;;14996:12;:55:::0;14992:168:::1;;15082:10;15067:12;;:25;;;;;;;;;;;;;;;;;;14992:168;;;15123:26;;;;;;;;;;:::i;:::-;;;;;;;;14992:168;14874:286;14753:407;15183:44;15206:8;;15216:10;15183:44;;;;;;;;:::i;:::-;;;;;;;;14664:570;14568:666:::0;;;:::o;8365:1266::-;2500:21:7;:19;:21::i;:::-;8426:37:9::1;8466:15;:27;8482:10;8466:27;;;;;;;;;;;;;;;8426:67;;8503:27;8533:12;:24;8546:10;8533:24;;;;;;;;;;;;;;;8503:54;;8576:22;8681:1:::0;8656:10:::1;:22;;;:26;8652:157;;;8716:42;8735:10;:22;;;8716:18;:42::i;:::-;8698:60;;;;;:::i;:::-;;;8797:1;8772:10;:22;;:26;;;;8652:157;8851:1;8822:10;:26;;;:30;8818:173;;;8886:50;8909:10;:26;;;8886:22;:50::i;:::-;8868:68;;;;;:::i;:::-;;;8979:1;8950:10;:26;;:30;;;;8818:173;9032:1;9004:10;:25;;;:29;9000:169;;;9067:48;9089:10;:25;;;9067:21;:48::i;:::-;9049:66;;;;;:::i;:::-;;;9157:1;9129:10;:25;;:29;;;;9000:169;9204:1;9179:7;:22;;:26;;;;9280:23;9306:21;9280:47;;9337:18;9375:15;9358:14;:32;:67;;9411:14;9358:67;;;9393:15;9358:67;9337:88;;9505:1;9492:10;:14;9488:137;;;9530:10;9522:28;;:40;9551:10;9522:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;9591:10;9581:33;;;9603:10;9581:33;;;;;;:::i;:::-;;;;;;;;9488:137;8416:1215;;;;;2542:20:7::0;:18;:20::i;:::-;8365:1266:9:o;1702:48::-;1740:10;1702:48;:::o;1865:44::-;1904:5;1865:44;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2575:307:7:-;1899:1;2702:7;;:18;2698:86;;2743:30;;;;;;;;;;;;;;2698:86;1899:1;2858:7;:17;;;;2575:307::o;3706:1706:9:-;3796:37;3836:15;:21;3852:4;3836:21;;;;;;;;;;;;;;;3796:61;;3876:23;3909:27;3946:26;4000:2;3987:9;:15;;;3983:863;;1904:5;4085:4;4076:6;:13;;;;:::i;:::-;4075:30;;;;:::i;:::-;4057:48;;1904:5;4163:4;4154:6;:13;;;;:::i;:::-;4153:30;;;;:::i;:::-;4131:52;;4226:1;4205:22;;3983:863;;;4298:2;4285:9;:15;;;4281:565;;1904:5;4379:4;4370:6;:13;;;;:::i;:::-;4369:30;;;;:::i;:::-;4351:48;;1904:5;4457:4;4448:6;:13;;;;:::i;:::-;4447:30;;;;:::i;:::-;4425:52;;1904:5;4530:4;4521:6;:13;;;;:::i;:::-;4520:30;;;;:::i;:::-;4499:51;;4281:565;;;1904:5;4655:4;4646:6;:13;;;;:::i;:::-;4645:30;;;;:::i;:::-;4627:48;;1904:5;4733:4;4724:6;:13;;;;:::i;:::-;4723:30;;;;:::i;:::-;4701:52;;1904:5;4806:4;4797:6;:13;;;;:::i;:::-;4796:30;;;;:::i;:::-;4775:51;;4281:565;3983:863;4927:15;4901:10;:22;;;:41;;;;;;;:::i;:::-;;;;;;;;4982:19;4952:10;:26;;;:49;;;;;;;:::i;:::-;;;;;;;;5040:18;5011:10;:25;;;:47;;;;;;;:::i;:::-;;;;;;;;5143:1;5125:15;:19;5121:82;;;5160:32;5176:15;5160;:32::i;:::-;5121:82;5238:1;5216:19;:23;5212:94;;;5255:40;5275:19;5255;:40::i;:::-;5212:94;5340:1;5319:18;:22;5315:91;;;5357:38;5376:18;5357;:38::i;:::-;5315:91;3786:1626;;;;3706:1706;;;:::o;2888:208:7:-;1857:1;3068:7;:21;;;;2888:208::o;11502:785:9:-;11627:13;11642:17;11661:16;11711:2;11698:9;:15;;;11694:587;;1904:5;11752:4;11738:11;:18;;;;:::i;:::-;11737:35;;;;:::i;:::-;11729:43;;1904:5;11813:4;11799:11;:18;;;;:::i;:::-;11798:35;;;;:::i;:::-;11786:47;;11858:1;11847:12;;11694:587;;;11893:2;11880:9;:15;;;11876:405;;1904:5;11934:4;11920:11;:18;;;;:::i;:::-;11919:35;;;;:::i;:::-;11911:43;;1904:5;11995:4;11981:11;:18;;;;:::i;:::-;11980:35;;;;:::i;:::-;11968:47;;1904:5;12055:4;12041:11;:18;;;;:::i;:::-;12040:35;;;;:::i;:::-;12029:46;;11876:405;;;1904:5;12129:4;12115:11;:18;;;;:::i;:::-;12114:35;;;;:::i;:::-;12106:43;;1904:5;12190:4;12176:11;:18;;;;:::i;:::-;12175:35;;;;:::i;:::-;12163:47;;1904:5;12250:4;12236:11;:18;;;;:::i;:::-;12235:35;;;;:::i;:::-;12224:46;;11876:405;11694:587;11502:785;;;;;:::o;12293:529::-;12513:4;12529:17;12571:11;12549:7;:19;;;:33;:131;;12661:7;:19;;;12647:11;:33;;;;:::i;:::-;12549:131;;;12620:11;12598:7;:19;;;:33;;;;:::i;:::-;12549:131;12529:151;;12699:17;1904:5;1824:3;12720:10;:32;;;;:::i;:::-;12719:49;;;;:::i;:::-;12699:69;;12806:9;12794;:21;12787:28;;;;12293:529;;;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;12828:1711:9:-;13112:16;13160:7;:19;;;13138:11;13131:49;;;;:::i;:::-;13112:68;;13190:20;13246:7;:23;;;13220:15;13213:57;;;;:::i;:::-;13190:80;;13280:19;13334:7;:22;;;13309:14;13302:55;;;;:::i;:::-;13280:77;;13376:22;13495:1;13483:9;:13;13479:154;;;13512:22;13546:9;13545:10;;;:::i;:::-;13512:44;;13588:34;13607:14;13588:18;:34::i;:::-;13570:52;;;;;:::i;:::-;;;13498:135;13479:154;13662:1;13646:13;:17;13642:166;;;13679:22;13713:13;13712:14;;;:::i;:::-;13679:48;;13759:38;13782:14;13759:22;:38::i;:::-;13741:56;;;;;:::i;:::-;;;13665:143;13642:166;13836:1;13821:12;:16;13817:163;;;13853:22;13887:12;13886:13;;;:::i;:::-;13853:47;;13932:37;13954:14;13932:21;:37::i;:::-;13914:55;;;;;:::i;:::-;;;13839:141;13817:163;14070:1;14058:9;:13;14054:79;;;14087:35;14111:9;14087:15;:35::i;:::-;14054:79;14162:1;14146:13;:17;14142:91;;;14179:43;14207:13;14179:19;:43::i;:::-;14142:91;14261:1;14246:12;:16;14242:88;;;14278:41;14305:12;14278:18;:41::i;:::-;14242:88;14421:11;14399:7;:19;;:33;;;;14468:15;14442:7;:23;;:41;;;;14518:14;14493:7;:22;;:39;;;;13030:1509;;;;12828:1711;;;;;:::o;10221:414::-;10289:7;10513:23;10591:5;10583:3;10558:13;:22;;;:28;;;;:::i;:::-;10550:5;:36;;;;:::i;:::-;10540:6;:47;;;;:::i;:::-;10539:57;;;;:::i;:::-;10513:83;;10613:15;10606:22;;;10221:414;;;:::o;10641:423::-;10713:7;10938:23;11020:5;11012:3;10983:13;:26;;;:32;;;;:::i;:::-;10975:5;:40;;;;:::i;:::-;10965:6;:51;;;;:::i;:::-;10964:61;;;;:::i;:::-;10938:87;;11042:15;11035:22;;;10641:423;;;:::o;11070:426::-;11141:7;11371:23;11452:5;11444:3;11416:13;:25;;;:31;;;;:::i;:::-;11408:5;:39;;;;:::i;:::-;11398:6;:50;;;;:::i;:::-;11397:60;;;;:::i;:::-;11371:86;;11474:15;11467:22;;;11070:426;;;:::o;9696:164::-;;:::o;9866:169::-;;:::o;10041:174::-;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:13:-;197:1;194;187:12;211:117;320:1;317;310:12;334:86;369:7;409:4;402:5;398:16;387:27;;334:86;;;:::o;426:118::-;497:22;513:5;497:22;:::i;:::-;490:5;487:33;477:61;;534:1;531;524:12;477:61;426:118;:::o;550:135::-;594:5;632:6;619:20;610:29;;648:31;673:5;648:31;:::i;:::-;550:135;;;;:::o;691:325::-;748:6;797:2;785:9;776:7;772:23;768:32;765:119;;;803:79;;:::i;:::-;765:119;923:1;948:51;991:7;982:6;971:9;967:22;948:51;:::i;:::-;938:61;;894:115;691:325;;;;:::o;1022:126::-;1059:7;1099:42;1092:5;1088:54;1077:65;;1022:126;;;:::o;1154:96::-;1191:7;1220:24;1238:5;1220:24;:::i;:::-;1209:35;;1154:96;;;:::o;1256:118::-;1343:24;1361:5;1343:24;:::i;:::-;1338:3;1331:37;1256:118;;:::o;1380:222::-;1473:4;1511:2;1500:9;1496:18;1488:26;;1524:71;1592:1;1581:9;1577:17;1568:6;1524:71;:::i;:::-;1380:222;;;;:::o;1608:122::-;1681:24;1699:5;1681:24;:::i;:::-;1674:5;1671:35;1661:63;;1720:1;1717;1710:12;1661:63;1608:122;:::o;1736:139::-;1782:5;1820:6;1807:20;1798:29;;1836:33;1863:5;1836:33;:::i;:::-;1736:139;;;;:::o;1881:329::-;1940:6;1989:2;1977:9;1968:7;1964:23;1960:32;1957:119;;;1995:79;;:::i;:::-;1957:119;2115:1;2140:53;2185:7;2176:6;2165:9;2161:22;2140:53;:::i;:::-;2130:63;;2086:117;1881:329;;;;:::o;2216:102::-;2289:22;2305:5;2289:22;:::i;:::-;2284:3;2277:35;2216:102;;:::o;2324:77::-;2361:7;2390:5;2379:16;;2324:77;;;:::o;2407:108::-;2484:24;2502:5;2484:24;:::i;:::-;2479:3;2472:37;2407:108;;:::o;2521:90::-;2555:7;2598:5;2591:13;2584:21;2573:32;;2521:90;;;:::o;2617:99::-;2688:21;2703:5;2688:21;:::i;:::-;2683:3;2676:34;2617:99;;:::o;2800:884::-;2953:4;2948:3;2944:14;3045:4;3038:5;3034:16;3028:23;3064:59;3117:4;3112:3;3108:14;3094:12;3064:59;:::i;:::-;2968:165;3225:4;3218:5;3214:16;3208:23;3244:63;3301:4;3296:3;3292:14;3278:12;3244:63;:::i;:::-;3143:174;3408:4;3401:5;3397:16;3391:23;3427:63;3484:4;3479:3;3475:14;3461:12;3427:63;:::i;:::-;3327:173;3591:4;3584:5;3580:16;3574:23;3610:57;3661:4;3656:3;3652:14;3638:12;3610:57;:::i;:::-;3510:167;2922:762;2800:884;;:::o;3782:729::-;3949:4;3944:3;3940:14;4043:4;4036:5;4032:16;4026:23;4062:63;4119:4;4114:3;4110:14;4096:12;4062:63;:::i;:::-;3964:171;4228:4;4221:5;4217:16;4211:23;4247:63;4304:4;4299:3;4295:14;4281:12;4247:63;:::i;:::-;4145:175;4412:4;4405:5;4401:16;4395:23;4431:63;4488:4;4483:3;4479:14;4465:12;4431:63;:::i;:::-;4330:174;3918:593;3782:729;;:::o;4517:118::-;4604:24;4622:5;4604:24;:::i;:::-;4599:3;4592:37;4517:118;;:::o;4641:697::-;4916:4;4954:3;4943:9;4939:19;4931:27;;4968:127;5092:1;5081:9;5077:17;5068:6;4968:127;:::i;:::-;5105:143;5243:3;5232:9;5228:19;5219:6;5105:143;:::i;:::-;5258:73;5326:3;5315:9;5311:19;5302:6;5258:73;:::i;:::-;4641:697;;;;;;:::o;5344:553::-;5521:4;5559:3;5548:9;5544:19;5536:27;;5573:71;5641:1;5630:9;5626:17;5617:6;5573:71;:::i;:::-;5654:72;5722:2;5711:9;5707:18;5698:6;5654:72;:::i;:::-;5736;5804:2;5793:9;5789:18;5780:6;5736:72;:::i;:::-;5818;5886:2;5875:9;5871:18;5862:6;5818:72;:::i;:::-;5344:553;;;;;;;:::o;5903:109::-;5984:21;5999:5;5984:21;:::i;:::-;5979:3;5972:34;5903:109;;:::o;6018:541::-;6189:4;6227:3;6216:9;6212:19;6204:27;;6241:65;6303:1;6292:9;6288:17;6279:6;6241:65;:::i;:::-;6316:72;6384:2;6373:9;6369:18;6360:6;6316:72;:::i;:::-;6398;6466:2;6455:9;6451:18;6442:6;6398:72;:::i;:::-;6480;6548:2;6537:9;6533:18;6524:6;6480:72;:::i;:::-;6018:541;;;;;;;:::o;6565:112::-;6648:22;6664:5;6648:22;:::i;:::-;6643:3;6636:35;6565:112;;:::o;6683:533::-;6850:4;6888:3;6877:9;6873:19;6865:27;;6902:67;6966:1;6955:9;6951:17;6942:6;6902:67;:::i;:::-;6979:72;7047:2;7036:9;7032:18;7023:6;6979:72;:::i;:::-;7061;7129:2;7118:9;7114:18;7105:6;7061:72;:::i;:::-;7143:66;7205:2;7194:9;7190:18;7181:6;7143:66;:::i;:::-;6683:533;;;;;;;:::o;7222:442::-;7371:4;7409:2;7398:9;7394:18;7386:26;;7422:71;7490:1;7479:9;7475:17;7466:6;7422:71;:::i;:::-;7503:72;7571:2;7560:9;7556:18;7547:6;7503:72;:::i;:::-;7585;7653:2;7642:9;7638:18;7629:6;7585:72;:::i;:::-;7222:442;;;;;;:::o;7670:122::-;7743:24;7761:5;7743:24;:::i;:::-;7736:5;7733:35;7723:63;;7782:1;7779;7772:12;7723:63;7670:122;:::o;7798:139::-;7844:5;7882:6;7869:20;7860:29;;7898:33;7925:5;7898:33;:::i;:::-;7798:139;;;;:::o;7943:619::-;8020:6;8028;8036;8085:2;8073:9;8064:7;8060:23;8056:32;8053:119;;;8091:79;;:::i;:::-;8053:119;8211:1;8236:53;8281:7;8272:6;8261:9;8257:22;8236:53;:::i;:::-;8226:63;;8182:117;8338:2;8364:53;8409:7;8400:6;8389:9;8385:22;8364:53;:::i;:::-;8354:63;;8309:118;8466:2;8492:53;8537:7;8528:6;8517:9;8513:22;8492:53;:::i;:::-;8482:63;;8437:118;7943:619;;;;;:::o;8568:222::-;8661:4;8699:2;8688:9;8684:18;8676:26;;8712:71;8780:1;8769:9;8765:17;8756:6;8712:71;:::i;:::-;8568:222;;;;:::o;8796:117::-;8905:1;8902;8895:12;8919:117;9028:1;9025;9018:12;9042:117;9151:1;9148;9141:12;9179:553;9237:8;9247:6;9297:3;9290:4;9282:6;9278:17;9274:27;9264:122;;9305:79;;:::i;:::-;9264:122;9418:6;9405:20;9395:30;;9448:18;9440:6;9437:30;9434:117;;;9470:79;;:::i;:::-;9434:117;9584:4;9576:6;9572:17;9560:29;;9638:3;9630:4;9622:6;9618:17;9608:8;9604:32;9601:41;9598:128;;;9645:79;;:::i;:::-;9598:128;9179:553;;;;;:::o;9738:674::-;9818:6;9826;9834;9883:2;9871:9;9862:7;9858:23;9854:32;9851:119;;;9889:79;;:::i;:::-;9851:119;10037:1;10026:9;10022:17;10009:31;10067:18;10059:6;10056:30;10053:117;;;10089:79;;:::i;:::-;10053:117;10202:65;10259:7;10250:6;10239:9;10235:22;10202:65;:::i;:::-;10184:83;;;;9980:297;10316:2;10342:53;10387:7;10378:6;10367:9;10363:22;10342:53;:::i;:::-;10332:63;;10287:118;9738:674;;;;;:::o;10418:169::-;10502:11;10536:6;10531:3;10524:19;10576:4;10571:3;10567:14;10552:29;;10418:169;;;;:::o;10593:167::-;10733:19;10729:1;10721:6;10717:14;10710:43;10593:167;:::o;10766:366::-;10908:3;10929:67;10993:2;10988:3;10929:67;:::i;:::-;10922:74;;11005:93;11094:3;11005:93;:::i;:::-;11123:2;11118:3;11114:12;11107:19;;10766:366;;;:::o;11138:419::-;11304:4;11342:2;11331:9;11327:18;11319:26;;11391:9;11385:4;11381:20;11377:1;11366:9;11362:17;11355:47;11419:131;11545:4;11419:131;:::i;:::-;11411:139;;11138:419;;;:::o;11563:168::-;11703:20;11699:1;11691:6;11687:14;11680:44;11563:168;:::o;11737:366::-;11879:3;11900:67;11964:2;11959:3;11900:67;:::i;:::-;11893:74;;11976:93;12065:3;11976:93;:::i;:::-;12094:2;12089:3;12085:12;12078:19;;11737:366;;;:::o;12109:419::-;12275:4;12313:2;12302:9;12298:18;12290:26;;12362:9;12356:4;12352:20;12348:1;12337:9;12333:17;12326:47;12390:131;12516:4;12390:131;:::i;:::-;12382:139;;12109:419;;;:::o;12534:180::-;12582:77;12579:1;12572:88;12679:4;12676:1;12669:15;12703:4;12700:1;12693:15;12720:191;12760:3;12779:20;12797:1;12779:20;:::i;:::-;12774:25;;12813:20;12831:1;12813:20;:::i;:::-;12808:25;;12856:1;12853;12849:9;12842:16;;12877:3;12874:1;12871:10;12868:36;;;12884:18;;:::i;:::-;12868:36;12720:191;;;;:::o;12917:324::-;13034:4;13072:2;13061:9;13057:18;13049:26;;13085:71;13153:1;13142:9;13138:17;13129:6;13085:71;:::i;:::-;13166:68;13230:2;13219:9;13215:18;13206:6;13166:68;:::i;:::-;12917:324;;;;;:::o;13247:174::-;13387:26;13383:1;13375:6;13371:14;13364:50;13247:174;:::o;13427:366::-;13569:3;13590:67;13654:2;13649:3;13590:67;:::i;:::-;13583:74;;13666:93;13755:3;13666:93;:::i;:::-;13784:2;13779:3;13775:12;13768:19;;13427:366;;;:::o;13799:419::-;13965:4;14003:2;13992:9;13988:18;13980:26;;14052:9;14046:4;14042:20;14038:1;14027:9;14023:17;14016:47;14080:131;14206:4;14080:131;:::i;:::-;14072:139;;13799:419;;;:::o;14224:148::-;14326:11;14363:3;14348:18;;14224:148;;;;:::o;14378:146::-;14475:6;14470:3;14465;14452:30;14516:1;14507:6;14502:3;14498:16;14491:27;14378:146;;;:::o;14554:330::-;14670:3;14691:89;14773:6;14768:3;14691:89;:::i;:::-;14684:96;;14790:56;14839:6;14834:3;14827:5;14790:56;:::i;:::-;14871:6;14866:3;14862:16;14855:23;;14554:330;;;;;:::o;14890:295::-;15032:3;15054:105;15155:3;15146:6;15138;15054:105;:::i;:::-;15047:112;;15176:3;15169:10;;14890:295;;;;;:::o;15191:159::-;15331:11;15327:1;15319:6;15315:14;15308:35;15191:159;:::o;15356:400::-;15516:3;15537:84;15619:1;15614:3;15537:84;:::i;:::-;15530:91;;15630:93;15719:3;15630:93;:::i;:::-;15748:1;15743:3;15739:11;15732:18;;15356:400;;;:::o;15762:381::-;15947:3;15969:148;16113:3;15969:148;:::i;:::-;15962:155;;16134:3;16127:10;;15762:381;;;:::o;16149:155::-;16289:7;16285:1;16277:6;16273:14;16266:31;16149:155;:::o;16310:400::-;16470:3;16491:84;16573:1;16568:3;16491:84;:::i;:::-;16484:91;;16584:93;16673:3;16584:93;:::i;:::-;16702:1;16697:3;16693:11;16686:18;;16310:400;;;:::o;16716:381::-;16901:3;16923:148;17067:3;16923:148;:::i;:::-;16916:155;;17088:3;17081:10;;16716:381;;;:::o;17103:158::-;17243:10;17239:1;17231:6;17227:14;17220:34;17103:158;:::o;17267:400::-;17427:3;17448:84;17530:1;17525:3;17448:84;:::i;:::-;17441:91;;17541:93;17630:3;17541:93;:::i;:::-;17659:1;17654:3;17650:11;17643:18;;17267:400;;;:::o;17673:381::-;17858:3;17880:148;18024:3;17880:148;:::i;:::-;17873:155;;18045:3;18038:10;;17673:381;;;:::o;18060:166::-;18200:18;18196:1;18188:6;18184:14;18177:42;18060:166;:::o;18232:366::-;18374:3;18395:67;18459:2;18454:3;18395:67;:::i;:::-;18388:74;;18471:93;18560:3;18471:93;:::i;:::-;18589:2;18584:3;18580:12;18573:19;;18232:366;;;:::o;18604:419::-;18770:4;18808:2;18797:9;18793:18;18785:26;;18857:9;18851:4;18847:20;18843:1;18832:9;18828:17;18821:47;18885:131;19011:4;18885:131;:::i;:::-;18877:139;;18604:419;;;:::o;19029:102::-;19070:6;19121:2;19117:7;19112:2;19105:5;19101:14;19097:28;19087:38;;19029:102;;;:::o;19161:317::-;19259:3;19280:71;19344:6;19339:3;19280:71;:::i;:::-;19273:78;;19361:56;19410:6;19405:3;19398:5;19361:56;:::i;:::-;19442:29;19464:6;19442:29;:::i;:::-;19437:3;19433:39;19426:46;;19161:317;;;;;:::o;19484:443::-;19635:4;19673:2;19662:9;19658:18;19650:26;;19722:9;19716:4;19712:20;19708:1;19697:9;19693:17;19686:47;19750:88;19833:4;19824:6;19816;19750:88;:::i;:::-;19742:96;;19848:72;19916:2;19905:9;19901:18;19892:6;19848:72;:::i;:::-;19484:443;;;;;;:::o;19933:410::-;19973:7;19996:20;20014:1;19996:20;:::i;:::-;19991:25;;20030:20;20048:1;20030:20;:::i;:::-;20025:25;;20085:1;20082;20078:9;20107:30;20125:11;20107:30;:::i;:::-;20096:41;;20286:1;20277:7;20273:15;20270:1;20267:22;20247:1;20240:9;20220:83;20197:139;;20316:18;;:::i;:::-;20197:139;19981:362;19933:410;;;;:::o;20349:180::-;20397:77;20394:1;20387:88;20494:4;20491:1;20484:15;20518:4;20515:1;20508:15;20535:185;20575:1;20592:20;20610:1;20592:20;:::i;:::-;20587:25;;20626:20;20644:1;20626:20;:::i;:::-;20621:25;;20665:1;20655:35;;20670:18;;:::i;:::-;20655:35;20712:1;20709;20705:9;20700:14;;20535:185;;;;:::o;20726:194::-;20766:4;20786:20;20804:1;20786:20;:::i;:::-;20781:25;;20820:20;20838:1;20820:20;:::i;:::-;20815:25;;20864:1;20861;20857:9;20849:17;;20888:1;20882:4;20879:11;20876:37;;;20893:18;;:::i;:::-;20876:37;20726:194;;;;:::o;20926:76::-;20962:7;20991:5;20980:16;;20926:76;;;:::o;21008:372::-;21047:4;21067:19;21084:1;21067:19;:::i;:::-;21062:24;;21100:19;21117:1;21100:19;:::i;:::-;21095:24;;21143:1;21140;21136:9;21128:17;;21337:1;21331:4;21327:12;21323:1;21320;21316:9;21312:28;21295:1;21289:4;21285:12;21280:1;21277;21273:9;21266:17;21262:36;21246:104;21243:130;;;21353:18;;:::i;:::-;21243:130;21008:372;;;;:::o;21386:228::-;21421:3;21444:23;21461:5;21444:23;:::i;:::-;21435:32;;21489:66;21482:5;21479:77;21476:103;;21559:18;;:::i;:::-;21476:103;21602:5;21599:1;21595:13;21588:20;;21386:228;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1732200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BASIS_POINTS()": "413",
								"MIN_DEPOSIT()": "391",
								"REBALANCE_THRESHOLD()": "436",
								"benqiComptroller()": "2553",
								"currentYields()": "infinite",
								"emergencyWithdraw()": "infinite",
								"getCurrentYields()": "infinite",
								"getRebalanceRecommendation(address)": "infinite",
								"getUserPortfolio(address)": "infinite",
								"optimizeYield(uint8)": "infinite",
								"owner()": "2582",
								"rebalance()": "infinite",
								"renounceOwnership()": "infinite",
								"traderJoeRouter()": "2531",
								"transferOwnership(address)": "infinite",
								"updateProtocolAddress(string,address)": "infinite",
								"updateYields(uint256,uint256,uint256)": "infinite",
								"userAllocations(address)": "infinite",
								"userProfiles(address)": "infinite",
								"yieldYakFarm()": "2554"
							},
							"internal": {
								"_allocateFunds(address,uint256,uint8)": "infinite",
								"_calculateOptimalAllocation(uint256,uint8)": "infinite",
								"_depositToBenqi(uint256)": "11",
								"_depositToTraderJoe(uint256)": "11",
								"_depositToYieldYak(uint256)": "11",
								"_executeRebalance(address,struct YieldOptimizer.ProtocolAllocation storage pointer,uint256,uint256,uint256)": "infinite",
								"_shouldRebalance(struct YieldOptimizer.ProtocolAllocation memory,uint256,uint256,uint256,uint256)": "infinite",
								"_withdrawFromBenqi(uint256)": "infinite",
								"_withdrawFromTraderJoe(uint256)": "infinite",
								"_withdrawFromYieldYak(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 405,
									"end": 15630,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 405,
									"end": 15630,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 405,
									"end": 15630,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2327,
									"end": 2673,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 2327,
									"end": 2673,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2327,
									"end": 2673,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2327,
									"end": 2673,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2327,
									"end": 2673,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2327,
									"end": 2673,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2327,
									"end": 2673,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2327,
									"end": 2673,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2327,
									"end": 2673,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2327,
									"end": 2673,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2327,
									"end": 2673,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2349,
									"end": 2359,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2061,
									"end": 2068,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2666,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2468,
									"end": 2666,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2666,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2666,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 2468,
									"end": 2666,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2666,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2468,
									"end": 2666,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2666,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2502,
									"end": 2505,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "1F4"
								},
								{
									"begin": 2468,
									"end": 2666,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2666,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2666,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2468,
									"end": 2666,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2550,
									"end": 2553,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "320"
								},
								{
									"begin": 2468,
									"end": 2666,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2666,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2666,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2468,
									"end": 2666,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2595,
									"end": 2599,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "4B0"
								},
								{
									"begin": 2468,
									"end": 2666,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2666,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2666,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2468,
									"end": 2666,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2640,
									"end": 2655,
									"modifierDepth": 1,
									"name": "TIMESTAMP",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2666,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2666,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2666,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2465,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2666,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 405,
									"end": 15630,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 405,
									"end": 15630,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 405,
									"end": 15630,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 405,
									"end": 15630,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 405,
									"end": 15630,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 405,
									"end": 15630,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 405,
									"end": 15630,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 405,
									"end": 15630,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 15630,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 405,
									"end": 15630,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 15630,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204a5c8aa158035cca3c72094780a69ffce4d89a1998c0e19f6f1a3562c247690164736f6c63430008170033",
									".code": [
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "7D7C2A1C"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "D076E8B4"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "D076E8B4"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "DB2E21BC"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "E1E158A5"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "E1F1C4A7"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "7D7C2A1C"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "8CCBE9F5"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "99E32287"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "C85B967D"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "2FAFF427"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "2FAFF427"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "324BE9EF"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "332D56D7"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "4C0C87FF"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "349F3A"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "71A8EF5"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "1EDB27E9"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "22A16952"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "2AB8895F"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 405,
											"end": 15630,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3430,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2846,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2846,
											"end": 3430,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2846,
											"end": 3430,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3430,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3430,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3430,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3430,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2846,
											"end": 3430,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2846,
											"end": 3430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3430,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2846,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 2846,
											"end": 3430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3430,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2846,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3430,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1647,
											"end": 1674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1647,
											"end": 1674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 5919,
											"end": 6376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 5919,
											"end": 6376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5919,
											"end": 6376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 5484,
											"end": 5843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 5484,
											"end": 5843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 6455,
											"end": 7465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 6455,
											"end": 7465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 6455,
											"end": 7465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1574,
											"end": 1604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1574,
											"end": 1604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1610,
											"end": 1641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1610,
											"end": 1641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1338,
											"end": 1389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1338,
											"end": 1389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1338,
											"end": 1389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1395,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 1395,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1395,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 8301,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 7530,
											"end": 8301,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 8301,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 8301,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 8301,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 8301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 7530,
											"end": 8301,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 8301,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7530,
											"end": 8301,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 8301,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 8301,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 7530,
											"end": 8301,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 8301,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 8301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 7530,
											"end": 8301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 7530,
											"end": 8301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 8301,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 7530,
											"end": 8301,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 8301,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1462,
											"end": 1492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1462,
											"end": 1492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 15240,
											"end": 15628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 15240,
											"end": 15628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1778,
											"end": 1827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1778,
											"end": 1827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 14568,
											"end": 15234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 14568,
											"end": 15234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 8365,
											"end": 9631,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 8365,
											"end": 9631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8365,
											"end": 9631,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 8365,
											"end": 9631,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8365,
											"end": 9631,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8365,
											"end": 9631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 8365,
											"end": 9631,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8365,
											"end": 9631,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8365,
											"end": 9631,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8365,
											"end": 9631,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8365,
											"end": 9631,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 8365,
											"end": 9631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8365,
											"end": 9631,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8365,
											"end": 9631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 8365,
											"end": 9631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 8365,
											"end": 9631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8365,
											"end": 9631,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 8365,
											"end": 9631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8365,
											"end": 9631,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 1702,
											"end": 1750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1702,
											"end": 1750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1865,
											"end": 1909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1865,
											"end": 1909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 3430,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 2846,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1740,
											"end": 1750,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2386F26FC10000"
										},
										{
											"begin": 2935,
											"end": 2944,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2935,
											"end": 2959,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2935,
											"end": 2959,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2927,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2927,
											"end": 2981,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2927,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2927,
											"end": 2981,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2927,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2927,
											"end": 2981,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2927,
											"end": 2981,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2927,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2927,
											"end": 2981,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2927,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 2927,
											"end": 2981,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2927,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 2927,
											"end": 2981,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2927,
											"end": 2981,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 2927,
											"end": 2981,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2927,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2927,
											"end": 2981,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2927,
											"end": 2981,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2927,
											"end": 2981,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2927,
											"end": 2981,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2927,
											"end": 2981,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2927,
											"end": 2981,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2927,
											"end": 2981,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2927,
											"end": 2981,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3013,
											"end": 3016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2999,
											"end": 3009,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2999,
											"end": 3016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2999,
											"end": 3016,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2999,
											"end": 3016,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2999,
											"end": 3016,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2991,
											"end": 3039,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 2991,
											"end": 3039,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2991,
											"end": 3039,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2991,
											"end": 3039,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2991,
											"end": 3039,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2991,
											"end": 3039,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2991,
											"end": 3039,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2991,
											"end": 3039,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2991,
											"end": 3039,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2991,
											"end": 3039,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 2991,
											"end": 3039,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2991,
											"end": 3039,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 2991,
											"end": 3039,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2991,
											"end": 3039,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 2991,
											"end": 3039,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2991,
											"end": 3039,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2991,
											"end": 3039,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2991,
											"end": 3039,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2991,
											"end": 3039,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2991,
											"end": 3039,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2991,
											"end": 3039,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2991,
											"end": 3039,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2991,
											"end": 3039,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 2991,
											"end": 3039,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3050,
											"end": 3077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3080,
											"end": 3092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3080,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3103,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3080,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3080,
											"end": 3104,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3080,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3080,
											"end": 3104,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3080,
											"end": 3104,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3080,
											"end": 3104,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3080,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3080,
											"end": 3104,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3080,
											"end": 3104,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3080,
											"end": 3104,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3080,
											"end": 3104,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3080,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3080,
											"end": 3104,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3080,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3080,
											"end": 3104,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3050,
											"end": 3104,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3050,
											"end": 3104,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3144,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3121,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3114,
											"end": 3131,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3114,
											"end": 3144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3114,
											"end": 3144,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3144,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3144,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3144,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3114,
											"end": 3144,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3144,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3144,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3144,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3144,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3114,
											"end": 3144,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3144,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3144,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3144,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3144,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3144,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3189,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3161,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3154,
											"end": 3176,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3154,
											"end": 3189,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3189,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3189,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3189,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 3154,
											"end": 3189,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3189,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3189,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 3154,
											"end": 3189,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3189,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 3154,
											"end": 3189,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3189,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3189,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3189,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3189,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3189,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3189,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3189,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3223,
											"end": 3238,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3206,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3199,
											"end": 3220,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3238,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3238,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3238,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3238,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3301,
											"end": 3350,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 3316,
											"end": 3326,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3337,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3349,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3301,
											"end": 3315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 3301,
											"end": 3350,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3301,
											"end": 3350,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 3301,
											"end": 3350,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3389,
											"end": 3399,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3374,
											"end": 3423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3374,
											"end": 3423,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3374,
											"end": 3423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFA6B713FE8FF42BD695A98451844FDF6ABD6DD3999AB520F344F84AFF7D2A0"
										},
										{
											"begin": 3401,
											"end": 3410,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3412,
											"end": 3422,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3374,
											"end": 3423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3374,
											"end": 3423,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3374,
											"end": 3423,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 3374,
											"end": 3423,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3374,
											"end": 3423,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3374,
											"end": 3423,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3374,
											"end": 3423,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 3374,
											"end": 3423,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3374,
											"end": 3423,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 3374,
											"end": 3423,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3374,
											"end": 3423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3374,
											"end": 3423,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3374,
											"end": 3423,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3374,
											"end": 3423,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3374,
											"end": 3423,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3374,
											"end": 3423,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3374,
											"end": 3423,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2917,
											"end": 3430,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2542,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2542,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 3430,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 3430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5991,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 5991,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 5991,
											"end": 6017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5991,
											"end": 6017,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 5991,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6027,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 6027,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 6027,
											"end": 6063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6027,
											"end": 6063,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 6027,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6073,
											"end": 6095,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6122,
											"end": 6134,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6122,
											"end": 6140,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6135,
											"end": 6139,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6140,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6122,
											"end": 6140,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6140,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6122,
											"end": 6140,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6140,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6140,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6140,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6122,
											"end": 6140,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6140,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6140,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6140,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6140,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6122,
											"end": 6140,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6140,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6122,
											"end": 6140,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6140,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6163,
											"end": 6178,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6163,
											"end": 6184,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6183,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6163,
											"end": 6184,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6163,
											"end": 6184,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6163,
											"end": 6184,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6163,
											"end": 6184,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6163,
											"end": 6184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6163,
											"end": 6184,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6163,
											"end": 6184,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6163,
											"end": 6184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6163,
											"end": 6184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6163,
											"end": 6184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6163,
											"end": 6184,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6163,
											"end": 6184,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6163,
											"end": 6184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6163,
											"end": 6184,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6184,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6344,
											"end": 6354,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6344,
											"end": 6369,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6344,
											"end": 6369,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6344,
											"end": 6369,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6315,
											"end": 6325,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6315,
											"end": 6341,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6341,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6315,
											"end": 6341,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6290,
											"end": 6300,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6290,
											"end": 6312,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6290,
											"end": 6312,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6290,
											"end": 6312,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6290,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 6290,
											"end": 6341,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6290,
											"end": 6341,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6290,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 6290,
											"end": 6341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6290,
											"end": 6341,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 6290,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6290,
											"end": 6369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 6290,
											"end": 6369,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6290,
											"end": 6369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6290,
											"end": 6369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 6290,
											"end": 6369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6290,
											"end": 6369,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 6290,
											"end": 6369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6273,
											"end": 6369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6273,
											"end": 6369,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 6376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5544,
											"end": 5560,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5570,
											"end": 5590,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5619,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5629,
											"end": 5648,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5686,
											"end": 5699,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5686,
											"end": 5708,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5686,
											"end": 5708,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5686,
											"end": 5708,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5722,
											"end": 5735,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5722,
											"end": 5748,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5722,
											"end": 5748,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5722,
											"end": 5748,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5775,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5762,
											"end": 5787,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5762,
											"end": 5787,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5787,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5801,
											"end": 5814,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5801,
											"end": 5826,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 5801,
											"end": 5826,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5801,
											"end": 5826,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5665,
											"end": 5836,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5665,
											"end": 5836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5665,
											"end": 5836,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5665,
											"end": 5836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5665,
											"end": 5836,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5665,
											"end": 5836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5665,
											"end": 5836,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5665,
											"end": 5836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6537,
											"end": 6557,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6567,
											"end": 6593,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6603,
											"end": 6633,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6643,
											"end": 6672,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6715,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6718,
											"end": 6730,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6731,
											"end": 6735,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6689,
											"end": 6736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6779,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6782,
											"end": 6797,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6782,
											"end": 6803,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6798,
											"end": 6802,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6803,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6782,
											"end": 6803,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6803,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6782,
											"end": 6803,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6803,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6803,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6803,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6782,
											"end": 6803,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6803,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6803,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6803,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6803,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6782,
											"end": 6803,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6803,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6782,
											"end": 6803,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6746,
											"end": 6803,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6852,
											"end": 6853,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6826,
											"end": 6833,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6848,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6826,
											"end": 6848,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6848,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6853,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6822,
											"end": 6903,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 6822,
											"end": 6903,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6877,
											"end": 6882,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6884,
											"end": 6885,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6887,
											"end": 6888,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6890,
											"end": 6891,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6869,
											"end": 6892,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6869,
											"end": 6892,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6869,
											"end": 6892,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6869,
											"end": 6892,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6869,
											"end": 6892,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6869,
											"end": 6892,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6869,
											"end": 6892,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6869,
											"end": 6892,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6869,
											"end": 6892,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6869,
											"end": 6892,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6869,
											"end": 6892,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 6869,
											"end": 6892,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6822,
											"end": 6903,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 6822,
											"end": 6903,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6976,
											"end": 6994,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7045,
											"end": 7052,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7045,
											"end": 7067,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7045,
											"end": 7067,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7045,
											"end": 7067,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7026,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7042,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7019,
											"end": 7042,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7042,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6997,
											"end": 7004,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6997,
											"end": 7016,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6997,
											"end": 7016,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6997,
											"end": 7016,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6997,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 6997,
											"end": 7042,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6997,
											"end": 7042,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6997,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 6997,
											"end": 7042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6997,
											"end": 7042,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 6997,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6997,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 6997,
											"end": 7067,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6997,
											"end": 7067,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6997,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 6997,
											"end": 7067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6997,
											"end": 7067,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 6997,
											"end": 7067,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6976,
											"end": 7067,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6976,
											"end": 7067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7169,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 7197,
											"end": 7207,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7209,
											"end": 7216,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7209,
											"end": 7226,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7209,
											"end": 7226,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7209,
											"end": 7226,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7169,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 7169,
											"end": 7227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7169,
											"end": 7227,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 7169,
											"end": 7227,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7086,
											"end": 7227,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7086,
											"end": 7227,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 7086,
											"end": 7227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7086,
											"end": 7227,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7086,
											"end": 7227,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 7086,
											"end": 7227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7086,
											"end": 7227,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7086,
											"end": 7227,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 7086,
											"end": 7227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7086,
											"end": 7227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7086,
											"end": 7227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7086,
											"end": 7227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7354,
											"end": 7458,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 7371,
											"end": 7378,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7380,
											"end": 7398,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7400,
											"end": 7422,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7424,
											"end": 7445,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7447,
											"end": 7457,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7354,
											"end": 7370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 7354,
											"end": 7458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7354,
											"end": 7458,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 7354,
											"end": 7458,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7336,
											"end": 7458,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 7336,
											"end": 7458,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6679,
											"end": 7465,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6679,
											"end": 7465,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6679,
											"end": 7465,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 7465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1338,
											"end": 1389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7530,
											"end": 8301,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 7530,
											"end": 8301,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7583,
											"end": 7610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7613,
											"end": 7625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7613,
											"end": 7637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7626,
											"end": 7636,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7613,
											"end": 7637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7613,
											"end": 7637,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7613,
											"end": 7637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7613,
											"end": 7637,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7613,
											"end": 7637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7613,
											"end": 7637,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7613,
											"end": 7637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7613,
											"end": 7637,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7613,
											"end": 7637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7613,
											"end": 7637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7613,
											"end": 7637,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7613,
											"end": 7637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7613,
											"end": 7637,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7613,
											"end": 7637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7613,
											"end": 7637,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7583,
											"end": 7637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7583,
											"end": 7637,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7680,
											"end": 7681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7655,
											"end": 7662,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7655,
											"end": 7677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7655,
											"end": 7677,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7655,
											"end": 7677,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7655,
											"end": 7681,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7647,
											"end": 7710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 7647,
											"end": 7710,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7647,
											"end": 7710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7647,
											"end": 7710,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7647,
											"end": 7710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7647,
											"end": 7710,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7647,
											"end": 7710,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7647,
											"end": 7710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7647,
											"end": 7710,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7647,
											"end": 7710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 7647,
											"end": 7710,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7647,
											"end": 7710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 7647,
											"end": 7710,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7647,
											"end": 7710,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 7647,
											"end": 7710,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7647,
											"end": 7710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7647,
											"end": 7710,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7647,
											"end": 7710,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7647,
											"end": 7710,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7647,
											"end": 7710,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7647,
											"end": 7710,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7647,
											"end": 7710,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7647,
											"end": 7710,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 7647,
											"end": 7710,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7721,
											"end": 7758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7761,
											"end": 7776,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7761,
											"end": 7788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7777,
											"end": 7787,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7761,
											"end": 7788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7761,
											"end": 7788,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7761,
											"end": 7788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7761,
											"end": 7788,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7761,
											"end": 7788,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7761,
											"end": 7788,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7761,
											"end": 7788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7761,
											"end": 7788,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7761,
											"end": 7788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7761,
											"end": 7788,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7761,
											"end": 7788,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7761,
											"end": 7788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7761,
											"end": 7788,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7761,
											"end": 7788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7761,
											"end": 7788,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7721,
											"end": 7788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7721,
											"end": 7788,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7798,
											"end": 7816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7873,
											"end": 7883,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7873,
											"end": 7898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7873,
											"end": 7898,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7873,
											"end": 7898,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 7854,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 7870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7844,
											"end": 7870,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 7870,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 7829,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 7841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7819,
											"end": 7841,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 7841,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 7870,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 7819,
											"end": 7870,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 7870,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 7870,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 7819,
											"end": 7870,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 7870,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 7819,
											"end": 7870,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 7898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 7819,
											"end": 7898,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 7898,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 7898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 7819,
											"end": 7898,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 7898,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 7819,
											"end": 7898,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7798,
											"end": 7898,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7798,
											"end": 7898,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7910,
											"end": 7926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7928,
											"end": 7948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7950,
											"end": 7969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8044,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 8014,
											"end": 8024,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8026,
											"end": 8033,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8026,
											"end": 8043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8026,
											"end": 8043,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8026,
											"end": 8043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8026,
											"end": 8043,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8026,
											"end": 8043,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8026,
											"end": 8043,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8026,
											"end": 8043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8026,
											"end": 8043,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8026,
											"end": 8043,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8026,
											"end": 8043,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8026,
											"end": 8043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 8026,
											"end": 8043,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7986,
											"end": 8013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 7986,
											"end": 8044,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7986,
											"end": 8044,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 7986,
											"end": 8044,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7909,
											"end": 8044,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7909,
											"end": 8044,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7909,
											"end": 8044,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7909,
											"end": 8044,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7909,
											"end": 8044,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7909,
											"end": 8044,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8117,
											"end": 8195,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 8135,
											"end": 8145,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8147,
											"end": 8157,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8159,
											"end": 8167,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8169,
											"end": 8181,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8183,
											"end": 8194,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8117,
											"end": 8134,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 8117,
											"end": 8195,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8117,
											"end": 8195,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 8117,
											"end": 8195,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8230,
											"end": 8245,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 8206,
											"end": 8213,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8206,
											"end": 8227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8206,
											"end": 8227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8206,
											"end": 8245,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8206,
											"end": 8245,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8206,
											"end": 8245,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8206,
											"end": 8245,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8271,
											"end": 8281,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8260,
											"end": 8294,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1427D1942829759938581CE754FD0F7F116BFB7A4B77F80F0CB32CD62C2138C7"
										},
										{
											"begin": 8283,
											"end": 8293,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8260,
											"end": 8294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 8260,
											"end": 8294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 8260,
											"end": 8294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 8260,
											"end": 8294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8260,
											"end": 8294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8294,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 7573,
											"end": 8301,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7573,
											"end": 8301,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7573,
											"end": 8301,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7573,
											"end": 8301,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7573,
											"end": 8301,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7573,
											"end": 8301,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2542,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2542,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7530,
											"end": 8301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15389,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15355,
											"end": 15368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15355,
											"end": 15377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15355,
											"end": 15377,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15355,
											"end": 15389,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15355,
											"end": 15389,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15355,
											"end": 15389,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 15355,
											"end": 15389,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15428,
											"end": 15441,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15399,
											"end": 15412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15399,
											"end": 15425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 15399,
											"end": 15425,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15399,
											"end": 15441,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15399,
											"end": 15441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15399,
											"end": 15441,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 15399,
											"end": 15441,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15479,
											"end": 15491,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15451,
											"end": 15464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15451,
											"end": 15476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 15451,
											"end": 15476,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15451,
											"end": 15491,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15451,
											"end": 15491,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15451,
											"end": 15491,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 15451,
											"end": 15491,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15529,
											"end": 15544,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 15501,
											"end": 15514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15501,
											"end": 15526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 15501,
											"end": 15526,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15501,
											"end": 15544,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15501,
											"end": 15544,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15501,
											"end": 15544,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 15501,
											"end": 15544,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15568,
											"end": 15621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "EB5E818D5254A980EAE621CCDCF791EB702D2F526CAF4D0833B622E27964D549"
										},
										{
											"begin": 15582,
											"end": 15591,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15593,
											"end": 15606,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15608,
											"end": 15620,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15568,
											"end": 15621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15568,
											"end": 15621,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15568,
											"end": 15621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 15568,
											"end": 15621,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 15568,
											"end": 15621,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15568,
											"end": 15621,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15568,
											"end": 15621,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15568,
											"end": 15621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 15568,
											"end": 15621,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15568,
											"end": 15621,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 15568,
											"end": 15621,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15568,
											"end": 15621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15568,
											"end": 15621,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15568,
											"end": 15621,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15568,
											"end": 15621,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15568,
											"end": 15621,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15568,
											"end": 15621,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15568,
											"end": 15621,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15240,
											"end": 15628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15240,
											"end": 15628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1827,
											"name": "PUSH",
											"source": 9,
											"value": "1F4"
										},
										{
											"begin": 1778,
											"end": 1827,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14674,
											"end": 14694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14724,
											"end": 14732,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14724,
											"end": 14732,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14707,
											"end": 14733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14707,
											"end": 14733,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14707,
											"end": 14733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14707,
											"end": 14733,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14707,
											"end": 14733,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 14707,
											"end": 14733,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14707,
											"end": 14733,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14707,
											"end": 14733,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14707,
											"end": 14733,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 14707,
											"end": 14733,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14707,
											"end": 14733,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 14707,
											"end": 14733,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14707,
											"end": 14733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14707,
											"end": 14733,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14707,
											"end": 14733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14707,
											"end": 14733,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14707,
											"end": 14733,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14707,
											"end": 14733,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14707,
											"end": 14733,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14707,
											"end": 14733,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14707,
											"end": 14733,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14707,
											"end": 14733,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14707,
											"end": 14733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14707,
											"end": 14733,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14697,
											"end": 14734,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14697,
											"end": 14734,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14697,
											"end": 14734,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14697,
											"end": 14734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14697,
											"end": 14734,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14697,
											"end": 14734,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 14674,
											"end": 14734,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14674,
											"end": 14734,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14783,
											"end": 14812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14783,
											"end": 14812,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14783,
											"end": 14812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14783,
											"end": 14812,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14783,
											"end": 14812,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 14783,
											"end": 14812,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14783,
											"end": 14812,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 14783,
											"end": 14812,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14783,
											"end": 14812,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 14783,
											"end": 14812,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14783,
											"end": 14812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14783,
											"end": 14812,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14783,
											"end": 14812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14783,
											"end": 14812,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14783,
											"end": 14812,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14783,
											"end": 14812,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14783,
											"end": 14812,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14783,
											"end": 14812,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14783,
											"end": 14812,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14783,
											"end": 14812,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14783,
											"end": 14812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14783,
											"end": 14812,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14773,
											"end": 14813,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14773,
											"end": 14813,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14773,
											"end": 14813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14773,
											"end": 14813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14773,
											"end": 14813,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14773,
											"end": 14813,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 14757,
											"end": 14769,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14757,
											"end": 14813,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14753,
											"end": 15160,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 14753,
											"end": 15160,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14847,
											"end": 14857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14829,
											"end": 14844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 14829,
											"end": 14844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14829,
											"end": 14857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 14829,
											"end": 14857,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 14829,
											"end": 14857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14829,
											"end": 14857,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 14829,
											"end": 14857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14829,
											"end": 14857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14829,
											"end": 14857,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 14829,
											"end": 14857,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 14829,
											"end": 14857,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14829,
											"end": 14857,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14829,
											"end": 14857,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14829,
											"end": 14857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14829,
											"end": 14857,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14829,
											"end": 14857,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 14829,
											"end": 14857,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 14829,
											"end": 14857,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14829,
											"end": 14857,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 14829,
											"end": 14857,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14753,
											"end": 15160,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 14753,
											"end": 15160,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14753,
											"end": 15160,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 14753,
											"end": 15160,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14904,
											"end": 14929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14904,
											"end": 14929,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14904,
											"end": 14929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14904,
											"end": 14929,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14904,
											"end": 14929,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 14904,
											"end": 14929,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14904,
											"end": 14929,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 14904,
											"end": 14929,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14904,
											"end": 14929,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 14904,
											"end": 14929,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14904,
											"end": 14929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14904,
											"end": 14929,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14904,
											"end": 14929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14904,
											"end": 14929,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14904,
											"end": 14929,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14904,
											"end": 14929,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14904,
											"end": 14929,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14904,
											"end": 14929,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14904,
											"end": 14929,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14904,
											"end": 14929,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14904,
											"end": 14929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14904,
											"end": 14929,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14894,
											"end": 14930,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14894,
											"end": 14930,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14894,
											"end": 14930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14894,
											"end": 14930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14894,
											"end": 14930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14894,
											"end": 14930,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 14878,
											"end": 14890,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14878,
											"end": 14930,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14874,
											"end": 15160,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 14874,
											"end": 15160,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14965,
											"end": 14975,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14946,
											"end": 14962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 14946,
											"end": 14962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14946,
											"end": 14975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 14946,
											"end": 14975,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 14946,
											"end": 14975,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14946,
											"end": 14975,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 14946,
											"end": 14975,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14946,
											"end": 14975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14946,
											"end": 14975,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 14946,
											"end": 14975,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 14946,
											"end": 14975,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14946,
											"end": 14975,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14946,
											"end": 14975,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14946,
											"end": 14975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14946,
											"end": 14975,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14946,
											"end": 14975,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 14946,
											"end": 14975,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 14946,
											"end": 14975,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14946,
											"end": 14975,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 14946,
											"end": 14975,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14874,
											"end": 15160,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 14874,
											"end": 15160,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14874,
											"end": 15160,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 14874,
											"end": 15160,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15022,
											"end": 15050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15022,
											"end": 15050,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15022,
											"end": 15050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15022,
											"end": 15050,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15022,
											"end": 15050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 15022,
											"end": 15050,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15022,
											"end": 15050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 15022,
											"end": 15050,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15022,
											"end": 15050,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 15022,
											"end": 15050,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15022,
											"end": 15050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15022,
											"end": 15050,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15022,
											"end": 15050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15022,
											"end": 15050,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15022,
											"end": 15050,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15022,
											"end": 15050,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15022,
											"end": 15050,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15022,
											"end": 15050,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15022,
											"end": 15050,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15022,
											"end": 15050,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15022,
											"end": 15050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15022,
											"end": 15050,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15012,
											"end": 15051,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15012,
											"end": 15051,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15012,
											"end": 15051,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15012,
											"end": 15051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15012,
											"end": 15051,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15012,
											"end": 15051,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 14996,
											"end": 15008,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14996,
											"end": 15051,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14992,
											"end": 15160,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 14992,
											"end": 15160,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15082,
											"end": 15092,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15067,
											"end": 15079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 15067,
											"end": 15079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15067,
											"end": 15092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 15067,
											"end": 15092,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 15067,
											"end": 15092,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15067,
											"end": 15092,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 15067,
											"end": 15092,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15067,
											"end": 15092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15067,
											"end": 15092,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 15067,
											"end": 15092,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 15067,
											"end": 15092,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15067,
											"end": 15092,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15067,
											"end": 15092,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15067,
											"end": 15092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15067,
											"end": 15092,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15067,
											"end": 15092,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 15067,
											"end": 15092,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 15067,
											"end": 15092,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15067,
											"end": 15092,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 15067,
											"end": 15092,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14992,
											"end": 15160,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 14992,
											"end": 15160,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14992,
											"end": 15160,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 14992,
											"end": 15160,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15123,
											"end": 15149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15123,
											"end": 15149,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15123,
											"end": 15149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15123,
											"end": 15149,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15123,
											"end": 15149,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15123,
											"end": 15149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15123,
											"end": 15149,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15123,
											"end": 15149,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 15123,
											"end": 15149,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15123,
											"end": 15149,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 15123,
											"end": 15149,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15123,
											"end": 15149,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 15123,
											"end": 15149,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15123,
											"end": 15149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15123,
											"end": 15149,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15123,
											"end": 15149,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15123,
											"end": 15149,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15123,
											"end": 15149,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15123,
											"end": 15149,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15123,
											"end": 15149,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14992,
											"end": 15160,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 14992,
											"end": 15160,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14874,
											"end": 15160,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 14874,
											"end": 15160,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14753,
											"end": 15160,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 14753,
											"end": 15160,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15183,
											"end": 15227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "50DF56C33B3BD3DAC7A2DB51A3F7C8BDAABF78A57FF1FAB3A72992006A77E69E"
										},
										{
											"begin": 15206,
											"end": 15214,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15206,
											"end": 15214,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15216,
											"end": 15226,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15183,
											"end": 15227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15183,
											"end": 15227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15183,
											"end": 15227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 15183,
											"end": 15227,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 15183,
											"end": 15227,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15183,
											"end": 15227,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15183,
											"end": 15227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15183,
											"end": 15227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 15183,
											"end": 15227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15183,
											"end": 15227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 15183,
											"end": 15227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15183,
											"end": 15227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15183,
											"end": 15227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15183,
											"end": 15227,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15183,
											"end": 15227,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15183,
											"end": 15227,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15183,
											"end": 15227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15183,
											"end": 15227,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 14664,
											"end": 15234,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 15234,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14568,
											"end": 15234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8365,
											"end": 9631,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 8365,
											"end": 9631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8426,
											"end": 8463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8466,
											"end": 8481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 8466,
											"end": 8493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8482,
											"end": 8492,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8466,
											"end": 8493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8466,
											"end": 8493,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8466,
											"end": 8493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8466,
											"end": 8493,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8466,
											"end": 8493,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8466,
											"end": 8493,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8466,
											"end": 8493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8466,
											"end": 8493,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8466,
											"end": 8493,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8466,
											"end": 8493,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8466,
											"end": 8493,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8466,
											"end": 8493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8466,
											"end": 8493,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8466,
											"end": 8493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8466,
											"end": 8493,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8426,
											"end": 8493,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8426,
											"end": 8493,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8503,
											"end": 8530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8533,
											"end": 8545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8533,
											"end": 8557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8546,
											"end": 8556,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8533,
											"end": 8557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8533,
											"end": 8557,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8533,
											"end": 8557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8533,
											"end": 8557,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8533,
											"end": 8557,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8533,
											"end": 8557,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8533,
											"end": 8557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8533,
											"end": 8557,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8533,
											"end": 8557,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8533,
											"end": 8557,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8533,
											"end": 8557,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8533,
											"end": 8557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8533,
											"end": 8557,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8533,
											"end": 8557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8533,
											"end": 8557,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8503,
											"end": 8557,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8503,
											"end": 8557,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8576,
											"end": 8598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8681,
											"end": 8682,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8656,
											"end": 8666,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8656,
											"end": 8678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8656,
											"end": 8678,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8656,
											"end": 8678,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8656,
											"end": 8682,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8809,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 8652,
											"end": 8809,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 8735,
											"end": 8745,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8735,
											"end": 8757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8735,
											"end": 8757,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8735,
											"end": 8757,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 8716,
											"end": 8758,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8758,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 8716,
											"end": 8758,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8698,
											"end": 8758,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8698,
											"end": 8758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 8698,
											"end": 8758,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8698,
											"end": 8758,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8698,
											"end": 8758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 8698,
											"end": 8758,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8698,
											"end": 8758,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 8698,
											"end": 8758,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8698,
											"end": 8758,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8698,
											"end": 8758,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8797,
											"end": 8798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8772,
											"end": 8782,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 8794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8772,
											"end": 8794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 8798,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 8798,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 8798,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 8798,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 8652,
											"end": 8809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8851,
											"end": 8852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8822,
											"end": 8832,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8822,
											"end": 8848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8822,
											"end": 8848,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8822,
											"end": 8848,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8822,
											"end": 8852,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8818,
											"end": 8991,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8818,
											"end": 8991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 8818,
											"end": 8991,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8886,
											"end": 8936,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 8909,
											"end": 8919,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8909,
											"end": 8935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8909,
											"end": 8935,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8909,
											"end": 8935,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8886,
											"end": 8908,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 8886,
											"end": 8936,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8886,
											"end": 8936,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 8886,
											"end": 8936,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8868,
											"end": 8936,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8868,
											"end": 8936,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 8868,
											"end": 8936,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8868,
											"end": 8936,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8868,
											"end": 8936,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 8868,
											"end": 8936,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8868,
											"end": 8936,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 8868,
											"end": 8936,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8868,
											"end": 8936,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8868,
											"end": 8936,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8979,
											"end": 8980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8950,
											"end": 8960,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8950,
											"end": 8976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8950,
											"end": 8976,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8950,
											"end": 8980,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8950,
											"end": 8980,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8950,
											"end": 8980,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8950,
											"end": 8980,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8818,
											"end": 8991,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 8818,
											"end": 8991,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9032,
											"end": 9033,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9004,
											"end": 9014,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9004,
											"end": 9029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9004,
											"end": 9029,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9004,
											"end": 9029,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9004,
											"end": 9033,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9000,
											"end": 9169,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9000,
											"end": 9169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 9000,
											"end": 9169,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9067,
											"end": 9115,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 9089,
											"end": 9099,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9089,
											"end": 9114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9089,
											"end": 9114,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9089,
											"end": 9114,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9067,
											"end": 9088,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 9067,
											"end": 9115,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9067,
											"end": 9115,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 9067,
											"end": 9115,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9049,
											"end": 9115,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9049,
											"end": 9115,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 9049,
											"end": 9115,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9049,
											"end": 9115,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9049,
											"end": 9115,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 9049,
											"end": 9115,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9049,
											"end": 9115,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 9049,
											"end": 9115,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9049,
											"end": 9115,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9049,
											"end": 9115,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9129,
											"end": 9139,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9129,
											"end": 9154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9129,
											"end": 9154,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9129,
											"end": 9158,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9129,
											"end": 9158,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9129,
											"end": 9158,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9129,
											"end": 9158,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9000,
											"end": 9169,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 9000,
											"end": 9169,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9204,
											"end": 9205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9179,
											"end": 9186,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9179,
											"end": 9201,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9205,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9205,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9205,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9280,
											"end": 9303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9306,
											"end": 9327,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 9280,
											"end": 9327,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9280,
											"end": 9327,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9337,
											"end": 9355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9375,
											"end": 9390,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9358,
											"end": 9372,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9358,
											"end": 9390,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9358,
											"end": 9425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 9358,
											"end": 9425,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9411,
											"end": 9425,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9358,
											"end": 9425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 9358,
											"end": 9425,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9358,
											"end": 9425,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 9358,
											"end": 9425,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9393,
											"end": 9408,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9358,
											"end": 9425,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 9358,
											"end": 9425,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9337,
											"end": 9425,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9337,
											"end": 9425,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9505,
											"end": 9506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9492,
											"end": 9502,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9492,
											"end": 9506,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9488,
											"end": 9625,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9488,
											"end": 9625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 9488,
											"end": 9625,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9530,
											"end": 9540,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9522,
											"end": 9550,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8FC"
										},
										{
											"begin": 9551,
											"end": 9561,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9522,
											"end": 9562,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9562,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9591,
											"end": 9601,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 9581,
											"end": 9614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9581,
											"end": 9614,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9581,
											"end": 9614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 9603,
											"end": 9613,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9581,
											"end": 9614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9581,
											"end": 9614,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9581,
											"end": 9614,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 9581,
											"end": 9614,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9581,
											"end": 9614,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9581,
											"end": 9614,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 9581,
											"end": 9614,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9581,
											"end": 9614,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 9581,
											"end": 9614,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9581,
											"end": 9614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9581,
											"end": 9614,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9581,
											"end": 9614,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9581,
											"end": 9614,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9581,
											"end": 9614,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9581,
											"end": 9614,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9581,
											"end": 9614,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 9488,
											"end": 9625,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 9488,
											"end": 9625,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8416,
											"end": 9631,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8416,
											"end": 9631,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8416,
											"end": 9631,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8416,
											"end": 9631,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8416,
											"end": 9631,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2542,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2542,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8365,
											"end": 9631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1740,
											"end": 1750,
											"name": "PUSH",
											"source": 9,
											"value": "2386F26FC10000"
										},
										{
											"begin": 1702,
											"end": 1750,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1909,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2702,
											"end": 2720,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "3EE5AEB500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2858,
											"end": 2865,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2575,
											"end": 2882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3706,
											"end": 5412,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 3706,
											"end": 5412,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 3833,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3836,
											"end": 3851,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3852,
											"end": 3856,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 3857,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3796,
											"end": 3857,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3876,
											"end": 3899,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3909,
											"end": 3936,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3946,
											"end": 3972,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4000,
											"end": 4002,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 3987,
											"end": 3996,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3987,
											"end": 4002,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3987,
											"end": 4002,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3987,
											"end": 4002,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 3983,
											"end": 4846,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1909,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 4085,
											"end": 4089,
											"name": "PUSH",
											"source": 9,
											"value": "1B58"
										},
										{
											"begin": 4076,
											"end": 4082,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4076,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 4076,
											"end": 4089,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4076,
											"end": 4089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4076,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 4076,
											"end": 4089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4076,
											"end": 4089,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 4076,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 4075,
											"end": 4105,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4105,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 4075,
											"end": 4105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4105,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 4075,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4057,
											"end": 4105,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4057,
											"end": 4105,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1909,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 4163,
											"end": 4167,
											"name": "PUSH",
											"source": 9,
											"value": "BB8"
										},
										{
											"begin": 4154,
											"end": 4160,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4154,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 4154,
											"end": 4167,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4154,
											"end": 4167,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4154,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 4154,
											"end": 4167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4154,
											"end": 4167,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 4154,
											"end": 4167,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 4153,
											"end": 4183,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 4153,
											"end": 4183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4153,
											"end": 4183,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 4153,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4131,
											"end": 4183,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4131,
											"end": 4183,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4227,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4205,
											"end": 4227,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4205,
											"end": 4227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 3983,
											"end": 4846,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 4846,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 3983,
											"end": 4846,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4300,
											"name": "PUSH",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 4285,
											"end": 4294,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4285,
											"end": 4300,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4285,
											"end": 4300,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4285,
											"end": 4300,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4281,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 4281,
											"end": 4846,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1909,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 4379,
											"end": 4383,
											"name": "PUSH",
											"source": 9,
											"value": "FA0"
										},
										{
											"begin": 4370,
											"end": 4376,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4370,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 4370,
											"end": 4383,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4370,
											"end": 4383,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4370,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 4370,
											"end": 4383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4370,
											"end": 4383,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 4370,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4369,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4369,
											"end": 4399,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4369,
											"end": 4399,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4369,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 4369,
											"end": 4399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4369,
											"end": 4399,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4369,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4351,
											"end": 4399,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4351,
											"end": 4399,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1909,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 4457,
											"end": 4461,
											"name": "PUSH",
											"source": 9,
											"value": "FA0"
										},
										{
											"begin": 4448,
											"end": 4454,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4448,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 4448,
											"end": 4461,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4448,
											"end": 4461,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4448,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 4448,
											"end": 4461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4448,
											"end": 4461,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 4448,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4447,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 4447,
											"end": 4477,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4447,
											"end": 4477,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4447,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 4447,
											"end": 4477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4447,
											"end": 4477,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 4447,
											"end": 4477,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4425,
											"end": 4477,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4425,
											"end": 4477,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1909,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 4530,
											"end": 4534,
											"name": "PUSH",
											"source": 9,
											"value": "7D0"
										},
										{
											"begin": 4521,
											"end": 4527,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 4521,
											"end": 4534,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4534,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 4521,
											"end": 4534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4534,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 4521,
											"end": 4534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4520,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 4520,
											"end": 4550,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4520,
											"end": 4550,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4520,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 4520,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4520,
											"end": 4550,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 4520,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4499,
											"end": 4550,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4499,
											"end": 4550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4281,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 4281,
											"end": 4846,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4281,
											"end": 4846,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 4281,
											"end": 4846,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1909,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 4655,
											"end": 4659,
											"name": "PUSH",
											"source": 9,
											"value": "7D0"
										},
										{
											"begin": 4646,
											"end": 4652,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4646,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 4646,
											"end": 4659,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4646,
											"end": 4659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4646,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 4646,
											"end": 4659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4646,
											"end": 4659,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 4646,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4645,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 4645,
											"end": 4675,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4645,
											"end": 4675,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4645,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 4645,
											"end": 4675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4645,
											"end": 4675,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 4645,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4675,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4627,
											"end": 4675,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1909,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 4733,
											"end": 4737,
											"name": "PUSH",
											"source": 9,
											"value": "BB8"
										},
										{
											"begin": 4724,
											"end": 4730,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4724,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 4724,
											"end": 4737,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4724,
											"end": 4737,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4724,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 4724,
											"end": 4737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4724,
											"end": 4737,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 4724,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4723,
											"end": 4753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 4723,
											"end": 4753,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4723,
											"end": 4753,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4723,
											"end": 4753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 4723,
											"end": 4753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4723,
											"end": 4753,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 4723,
											"end": 4753,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4701,
											"end": 4753,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4701,
											"end": 4753,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1909,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 4806,
											"end": 4810,
											"name": "PUSH",
											"source": 9,
											"value": "1388"
										},
										{
											"begin": 4797,
											"end": 4803,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4797,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 4797,
											"end": 4810,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4797,
											"end": 4810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4797,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 4797,
											"end": 4810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4797,
											"end": 4810,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 4797,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4796,
											"end": 4826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 4796,
											"end": 4826,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4796,
											"end": 4826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4796,
											"end": 4826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 4796,
											"end": 4826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4796,
											"end": 4826,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 4796,
											"end": 4826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4775,
											"end": 4826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4775,
											"end": 4826,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4281,
											"end": 4846,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 4281,
											"end": 4846,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 4846,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 3983,
											"end": 4846,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4927,
											"end": 4942,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4901,
											"end": 4911,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4901,
											"end": 4923,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4901,
											"end": 4923,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4901,
											"end": 4923,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4901,
											"end": 4942,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4901,
											"end": 4942,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4901,
											"end": 4942,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4901,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 4901,
											"end": 4942,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4901,
											"end": 4942,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4901,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 4901,
											"end": 4942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4901,
											"end": 4942,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 4901,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4901,
											"end": 4942,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4901,
											"end": 4942,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4901,
											"end": 4942,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4901,
											"end": 4942,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4901,
											"end": 4942,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4901,
											"end": 4942,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4901,
											"end": 4942,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4982,
											"end": 5001,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4952,
											"end": 4962,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4952,
											"end": 4978,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4952,
											"end": 4978,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4952,
											"end": 4978,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4952,
											"end": 5001,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4952,
											"end": 5001,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4952,
											"end": 5001,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4952,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 4952,
											"end": 5001,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4952,
											"end": 5001,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4952,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 4952,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4952,
											"end": 5001,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 4952,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4952,
											"end": 5001,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4952,
											"end": 5001,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4952,
											"end": 5001,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4952,
											"end": 5001,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4952,
											"end": 5001,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4952,
											"end": 5001,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4952,
											"end": 5001,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5058,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5011,
											"end": 5021,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5011,
											"end": 5036,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5011,
											"end": 5036,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5011,
											"end": 5036,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5011,
											"end": 5058,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5011,
											"end": 5058,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5011,
											"end": 5058,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5011,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 5011,
											"end": 5058,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5011,
											"end": 5058,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5011,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 5011,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5011,
											"end": 5058,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 5011,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5011,
											"end": 5058,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5011,
											"end": 5058,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5011,
											"end": 5058,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5011,
											"end": 5058,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5011,
											"end": 5058,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5011,
											"end": 5058,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5011,
											"end": 5058,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5143,
											"end": 5144,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5125,
											"end": 5140,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5144,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5203,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 5121,
											"end": 5203,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 5176,
											"end": 5191,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5160,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 5160,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5203,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 5121,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5238,
											"end": 5239,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5216,
											"end": 5235,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5216,
											"end": 5239,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5212,
											"end": 5306,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5212,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 5212,
											"end": 5306,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5255,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 5275,
											"end": 5294,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5255,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 5255,
											"end": 5295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5255,
											"end": 5295,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 5255,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5212,
											"end": 5306,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 5212,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5341,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5319,
											"end": 5337,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5319,
											"end": 5341,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5315,
											"end": 5406,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5315,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 5315,
											"end": 5406,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5357,
											"end": 5395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 5376,
											"end": 5394,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5357,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 5357,
											"end": 5395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5357,
											"end": 5395,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 5357,
											"end": 5395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5315,
											"end": 5406,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 5315,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 5412,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 5412,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 5412,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3786,
											"end": 5412,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3706,
											"end": 5412,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3706,
											"end": 5412,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3706,
											"end": 5412,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3706,
											"end": 5412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3075,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11502,
											"end": 12287,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 11502,
											"end": 12287,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11627,
											"end": 11640,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11642,
											"end": 11659,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11661,
											"end": 11677,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11711,
											"end": 11713,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 11698,
											"end": 11707,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11698,
											"end": 11713,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 11698,
											"end": 11713,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11698,
											"end": 11713,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 12281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 11694,
											"end": 12281,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1909,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 11752,
											"end": 11756,
											"name": "PUSH",
											"source": 9,
											"value": "1B58"
										},
										{
											"begin": 11738,
											"end": 11749,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11738,
											"end": 11756,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 11738,
											"end": 11756,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11738,
											"end": 11756,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11738,
											"end": 11756,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 11738,
											"end": 11756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11738,
											"end": 11756,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 11738,
											"end": 11756,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11737,
											"end": 11772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 11737,
											"end": 11772,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11737,
											"end": 11772,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11737,
											"end": 11772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 11737,
											"end": 11772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11737,
											"end": 11772,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 11737,
											"end": 11772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11729,
											"end": 11772,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11729,
											"end": 11772,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1909,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 11813,
											"end": 11817,
											"name": "PUSH",
											"source": 9,
											"value": "BB8"
										},
										{
											"begin": 11799,
											"end": 11810,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 11799,
											"end": 11817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11798,
											"end": 11833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 11798,
											"end": 11833,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11798,
											"end": 11833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11798,
											"end": 11833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 11798,
											"end": 11833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11798,
											"end": 11833,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 11798,
											"end": 11833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11833,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11786,
											"end": 11833,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11858,
											"end": 11859,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11847,
											"end": 11859,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11847,
											"end": 11859,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 12281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 11694,
											"end": 12281,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 12281,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 11694,
											"end": 12281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11893,
											"end": 11895,
											"name": "PUSH",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 11880,
											"end": 11889,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11880,
											"end": 11895,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 11880,
											"end": 11895,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11880,
											"end": 11895,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11876,
											"end": 12281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 11876,
											"end": 12281,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1909,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 11934,
											"end": 11938,
											"name": "PUSH",
											"source": 9,
											"value": "FA0"
										},
										{
											"begin": 11920,
											"end": 11931,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11920,
											"end": 11938,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 11920,
											"end": 11938,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11920,
											"end": 11938,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11920,
											"end": 11938,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 11920,
											"end": 11938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11920,
											"end": 11938,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 11920,
											"end": 11938,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11919,
											"end": 11954,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 11919,
											"end": 11954,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11919,
											"end": 11954,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11919,
											"end": 11954,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 11919,
											"end": 11954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11919,
											"end": 11954,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 11919,
											"end": 11954,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11911,
											"end": 11954,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11911,
											"end": 11954,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1909,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 11995,
											"end": 11999,
											"name": "PUSH",
											"source": 9,
											"value": "FA0"
										},
										{
											"begin": 11981,
											"end": 11992,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11981,
											"end": 11999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 11981,
											"end": 11999,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11981,
											"end": 11999,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11981,
											"end": 11999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 11981,
											"end": 11999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11981,
											"end": 11999,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 11981,
											"end": 11999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11980,
											"end": 12015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 11980,
											"end": 12015,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11980,
											"end": 12015,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11980,
											"end": 12015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 11980,
											"end": 12015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11980,
											"end": 12015,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 11980,
											"end": 12015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11968,
											"end": 12015,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11968,
											"end": 12015,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1909,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 12055,
											"end": 12059,
											"name": "PUSH",
											"source": 9,
											"value": "7D0"
										},
										{
											"begin": 12041,
											"end": 12052,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12041,
											"end": 12059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 12041,
											"end": 12059,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12041,
											"end": 12059,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12041,
											"end": 12059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 12041,
											"end": 12059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12041,
											"end": 12059,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 12041,
											"end": 12059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12040,
											"end": 12075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 12040,
											"end": 12075,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12040,
											"end": 12075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12040,
											"end": 12075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 12040,
											"end": 12075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12040,
											"end": 12075,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 12040,
											"end": 12075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12029,
											"end": 12075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12029,
											"end": 12075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11876,
											"end": 12281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 11876,
											"end": 12281,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11876,
											"end": 12281,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 11876,
											"end": 12281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1909,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 12129,
											"end": 12133,
											"name": "PUSH",
											"source": 9,
											"value": "7D0"
										},
										{
											"begin": 12115,
											"end": 12126,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 12115,
											"end": 12133,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12133,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 12115,
											"end": 12133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12133,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 12115,
											"end": 12133,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12114,
											"end": 12149,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 12114,
											"end": 12149,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12114,
											"end": 12149,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12114,
											"end": 12149,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 12114,
											"end": 12149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12114,
											"end": 12149,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 12114,
											"end": 12149,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12106,
											"end": 12149,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12106,
											"end": 12149,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1909,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 12190,
											"end": 12194,
											"name": "PUSH",
											"source": 9,
											"value": "BB8"
										},
										{
											"begin": 12176,
											"end": 12187,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12176,
											"end": 12194,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 12176,
											"end": 12194,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12176,
											"end": 12194,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12176,
											"end": 12194,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 12176,
											"end": 12194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12176,
											"end": 12194,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 12176,
											"end": 12194,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12175,
											"end": 12210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 12175,
											"end": 12210,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12175,
											"end": 12210,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12175,
											"end": 12210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 12175,
											"end": 12210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12175,
											"end": 12210,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 12175,
											"end": 12210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12210,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12163,
											"end": 12210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1909,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 12250,
											"end": 12254,
											"name": "PUSH",
											"source": 9,
											"value": "1388"
										},
										{
											"begin": 12236,
											"end": 12247,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 12236,
											"end": 12254,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12254,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 12236,
											"end": 12254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12236,
											"end": 12254,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 12236,
											"end": 12254,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12235,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 12235,
											"end": 12270,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12235,
											"end": 12270,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12235,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 12235,
											"end": 12270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12235,
											"end": 12270,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 12235,
											"end": 12270,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12224,
											"end": 12270,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12224,
											"end": 12270,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11876,
											"end": 12281,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 11876,
											"end": 12281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11694,
											"end": 12281,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 11694,
											"end": 12281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11502,
											"end": 12287,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11502,
											"end": 12287,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11502,
											"end": 12287,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11502,
											"end": 12287,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11502,
											"end": 12287,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11502,
											"end": 12287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12293,
											"end": 12822,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 12293,
											"end": 12822,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12513,
											"end": 12517,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12529,
											"end": 12546,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12571,
											"end": 12582,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12549,
											"end": 12556,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 12549,
											"end": 12568,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12549,
											"end": 12568,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12549,
											"end": 12568,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12549,
											"end": 12582,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12549,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 12549,
											"end": 12680,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12661,
											"end": 12668,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12661,
											"end": 12680,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12661,
											"end": 12680,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12661,
											"end": 12680,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12647,
											"end": 12658,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12647,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 12647,
											"end": 12680,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12647,
											"end": 12680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12647,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 12647,
											"end": 12680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12647,
											"end": 12680,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 12647,
											"end": 12680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12549,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 12549,
											"end": 12680,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12549,
											"end": 12680,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 12549,
											"end": 12680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12620,
											"end": 12631,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12598,
											"end": 12605,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 12598,
											"end": 12617,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12598,
											"end": 12617,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12598,
											"end": 12617,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12598,
											"end": 12631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 12598,
											"end": 12631,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12598,
											"end": 12631,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12598,
											"end": 12631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 12598,
											"end": 12631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12598,
											"end": 12631,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 12598,
											"end": 12631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12549,
											"end": 12680,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 12549,
											"end": 12680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12529,
											"end": 12680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12529,
											"end": 12680,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12699,
											"end": 12716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1904,
											"end": 1909,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 1824,
											"end": 1827,
											"name": "PUSH",
											"source": 9,
											"value": "1F4"
										},
										{
											"begin": 12720,
											"end": 12730,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12720,
											"end": 12752,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 12720,
											"end": 12752,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12720,
											"end": 12752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12720,
											"end": 12752,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 12720,
											"end": 12752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12720,
											"end": 12752,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 12720,
											"end": 12752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12719,
											"end": 12768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 12719,
											"end": 12768,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12719,
											"end": 12768,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12719,
											"end": 12768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 12719,
											"end": 12768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12719,
											"end": 12768,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 12719,
											"end": 12768,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12699,
											"end": 12768,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12699,
											"end": 12768,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12806,
											"end": 12815,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12794,
											"end": 12803,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12794,
											"end": 12815,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12787,
											"end": 12815,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12787,
											"end": 12815,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12787,
											"end": 12815,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12787,
											"end": 12815,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12293,
											"end": 12822,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 12293,
											"end": 12822,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 12293,
											"end": 12822,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12293,
											"end": 12822,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12293,
											"end": 12822,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12293,
											"end": 12822,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12293,
											"end": 12822,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12293,
											"end": 12822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12828,
											"end": 14539,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 12828,
											"end": 14539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13112,
											"end": 13128,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13160,
											"end": 13167,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13160,
											"end": 13179,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13160,
											"end": 13179,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13160,
											"end": 13179,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13138,
											"end": 13149,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13131,
											"end": 13180,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 13131,
											"end": 13180,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13131,
											"end": 13180,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13131,
											"end": 13180,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 13131,
											"end": 13180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13131,
											"end": 13180,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 13131,
											"end": 13180,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13112,
											"end": 13180,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13112,
											"end": 13180,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13190,
											"end": 13210,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13246,
											"end": 13253,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13246,
											"end": 13269,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 13246,
											"end": 13269,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13246,
											"end": 13269,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13220,
											"end": 13235,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13213,
											"end": 13270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 13213,
											"end": 13270,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13213,
											"end": 13270,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13213,
											"end": 13270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 13213,
											"end": 13270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13213,
											"end": 13270,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 13213,
											"end": 13270,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13190,
											"end": 13270,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13190,
											"end": 13270,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13280,
											"end": 13299,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13334,
											"end": 13341,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 13334,
											"end": 13356,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 13334,
											"end": 13356,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13334,
											"end": 13356,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13309,
											"end": 13323,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13302,
											"end": 13357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 13302,
											"end": 13357,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13302,
											"end": 13357,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13302,
											"end": 13357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 13302,
											"end": 13357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13302,
											"end": 13357,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 13302,
											"end": 13357,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13280,
											"end": 13357,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13280,
											"end": 13357,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13376,
											"end": 13398,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13495,
											"end": 13496,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13483,
											"end": 13492,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13483,
											"end": 13496,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 13479,
											"end": 13633,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13479,
											"end": 13633,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 13479,
											"end": 13633,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13512,
											"end": 13534,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13546,
											"end": 13555,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13545,
											"end": 13555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 13545,
											"end": 13555,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13545,
											"end": 13555,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 13545,
											"end": 13555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13545,
											"end": 13555,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 13545,
											"end": 13555,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13512,
											"end": 13556,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13512,
											"end": 13556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13588,
											"end": 13622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 13607,
											"end": 13621,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13588,
											"end": 13606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 13588,
											"end": 13622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13588,
											"end": 13622,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 13588,
											"end": 13622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13570,
											"end": 13622,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13570,
											"end": 13622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 13570,
											"end": 13622,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13570,
											"end": 13622,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13570,
											"end": 13622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 13570,
											"end": 13622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13570,
											"end": 13622,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 13570,
											"end": 13622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13570,
											"end": 13622,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13570,
											"end": 13622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13498,
											"end": 13633,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13479,
											"end": 13633,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 13479,
											"end": 13633,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13662,
											"end": 13663,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13646,
											"end": 13663,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 13642,
											"end": 13808,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13642,
											"end": 13808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 13642,
											"end": 13808,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13679,
											"end": 13701,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13713,
											"end": 13726,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13712,
											"end": 13726,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 13712,
											"end": 13726,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13712,
											"end": 13726,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 13712,
											"end": 13726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13712,
											"end": 13726,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 13712,
											"end": 13726,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13679,
											"end": 13727,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13679,
											"end": 13727,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13759,
											"end": 13797,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 13782,
											"end": 13796,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13759,
											"end": 13781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 13759,
											"end": 13797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13759,
											"end": 13797,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 13759,
											"end": 13797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13741,
											"end": 13797,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13741,
											"end": 13797,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 13741,
											"end": 13797,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13741,
											"end": 13797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13741,
											"end": 13797,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 13741,
											"end": 13797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13741,
											"end": 13797,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 13741,
											"end": 13797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13741,
											"end": 13797,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13741,
											"end": 13797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13665,
											"end": 13808,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13642,
											"end": 13808,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 13642,
											"end": 13808,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13836,
											"end": 13837,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13821,
											"end": 13833,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13821,
											"end": 13837,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 13817,
											"end": 13980,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13817,
											"end": 13980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 13817,
											"end": 13980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13853,
											"end": 13875,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13887,
											"end": 13899,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13886,
											"end": 13899,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 13886,
											"end": 13899,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13886,
											"end": 13899,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 13886,
											"end": 13899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13886,
											"end": 13899,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 13886,
											"end": 13899,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13853,
											"end": 13900,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13853,
											"end": 13900,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13932,
											"end": 13969,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 13954,
											"end": 13968,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13932,
											"end": 13953,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 13932,
											"end": 13969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13932,
											"end": 13969,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 13932,
											"end": 13969,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 13914,
											"end": 13969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13839,
											"end": 13980,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13817,
											"end": 13980,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 13817,
											"end": 13980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14070,
											"end": 14071,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14058,
											"end": 14067,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14058,
											"end": 14071,
											"name": "SGT",
											"source": 9
										},
										{
											"begin": 14054,
											"end": 14133,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14054,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 14054,
											"end": 14133,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14087,
											"end": 14122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 14111,
											"end": 14120,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14087,
											"end": 14102,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 14087,
											"end": 14122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14087,
											"end": 14122,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 14087,
											"end": 14122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14054,
											"end": 14133,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 14054,
											"end": 14133,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14162,
											"end": 14163,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14146,
											"end": 14159,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14146,
											"end": 14163,
											"name": "SGT",
											"source": 9
										},
										{
											"begin": 14142,
											"end": 14233,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14142,
											"end": 14233,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 14142,
											"end": 14233,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14179,
											"end": 14222,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 14207,
											"end": 14220,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14179,
											"end": 14198,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 14179,
											"end": 14222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14179,
											"end": 14222,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 14179,
											"end": 14222,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14142,
											"end": 14233,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 14142,
											"end": 14233,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14261,
											"end": 14262,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14246,
											"end": 14258,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14246,
											"end": 14262,
											"name": "SGT",
											"source": 9
										},
										{
											"begin": 14242,
											"end": 14330,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14242,
											"end": 14330,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 14242,
											"end": 14330,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14278,
											"end": 14319,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 14305,
											"end": 14317,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14278,
											"end": 14296,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 14278,
											"end": 14319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14278,
											"end": 14319,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 14278,
											"end": 14319,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14242,
											"end": 14330,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 14242,
											"end": 14330,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14421,
											"end": 14432,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 14399,
											"end": 14406,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 14399,
											"end": 14418,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14399,
											"end": 14418,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14399,
											"end": 14432,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14399,
											"end": 14432,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14399,
											"end": 14432,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 14399,
											"end": 14432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14468,
											"end": 14483,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14442,
											"end": 14449,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 14442,
											"end": 14465,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 14442,
											"end": 14465,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14442,
											"end": 14483,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14442,
											"end": 14483,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14442,
											"end": 14483,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 14442,
											"end": 14483,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14518,
											"end": 14532,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14493,
											"end": 14500,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 14493,
											"end": 14515,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 14493,
											"end": 14515,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14493,
											"end": 14532,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14493,
											"end": 14532,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14493,
											"end": 14532,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 14493,
											"end": 14532,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13030,
											"end": 14539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13030,
											"end": 14539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13030,
											"end": 14539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13030,
											"end": 14539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12828,
											"end": 14539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12828,
											"end": 14539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12828,
											"end": 14539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12828,
											"end": 14539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12828,
											"end": 14539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12828,
											"end": 14539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10221,
											"end": 10635,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 10221,
											"end": 10635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10289,
											"end": 10296,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10513,
											"end": 10536,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10591,
											"end": 10596,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 10583,
											"end": 10586,
											"name": "PUSH",
											"source": 9,
											"value": "16D"
										},
										{
											"begin": 10558,
											"end": 10571,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10558,
											"end": 10580,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10558,
											"end": 10580,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10558,
											"end": 10580,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10558,
											"end": 10586,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 10558,
											"end": 10586,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10558,
											"end": 10586,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10558,
											"end": 10586,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 10558,
											"end": 10586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10558,
											"end": 10586,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 10558,
											"end": 10586,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10550,
											"end": 10555,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 10550,
											"end": 10586,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 10550,
											"end": 10586,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10550,
											"end": 10586,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10550,
											"end": 10586,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 10550,
											"end": 10586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10550,
											"end": 10586,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 10550,
											"end": 10586,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10540,
											"end": 10546,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10540,
											"end": 10587,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 10540,
											"end": 10587,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10540,
											"end": 10587,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10540,
											"end": 10587,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 10540,
											"end": 10587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10540,
											"end": 10587,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 10540,
											"end": 10587,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10539,
											"end": 10596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 10539,
											"end": 10596,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10539,
											"end": 10596,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10539,
											"end": 10596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 10539,
											"end": 10596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10539,
											"end": 10596,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 10539,
											"end": 10596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10513,
											"end": 10596,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10513,
											"end": 10596,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10613,
											"end": 10628,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10606,
											"end": 10628,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10606,
											"end": 10628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10606,
											"end": 10628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10221,
											"end": 10635,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10221,
											"end": 10635,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10221,
											"end": 10635,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10221,
											"end": 10635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10641,
											"end": 11064,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 10641,
											"end": 11064,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10713,
											"end": 10720,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10938,
											"end": 10961,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11025,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 11012,
											"end": 11015,
											"name": "PUSH",
											"source": 9,
											"value": "16D"
										},
										{
											"begin": 10983,
											"end": 10996,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10983,
											"end": 11009,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10983,
											"end": 11009,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10983,
											"end": 11009,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10983,
											"end": 11015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 10983,
											"end": 11015,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10983,
											"end": 11015,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10983,
											"end": 11015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 10983,
											"end": 11015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10983,
											"end": 11015,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 10983,
											"end": 11015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10975,
											"end": 10980,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 10975,
											"end": 11015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 10975,
											"end": 11015,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10975,
											"end": 11015,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10975,
											"end": 11015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 10975,
											"end": 11015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10975,
											"end": 11015,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 10975,
											"end": 11015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10965,
											"end": 10971,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10965,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 10965,
											"end": 11016,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10965,
											"end": 11016,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10965,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 10965,
											"end": 11016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10965,
											"end": 11016,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 10965,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10964,
											"end": 11025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 10964,
											"end": 11025,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10964,
											"end": 11025,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10964,
											"end": 11025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 10964,
											"end": 11025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10964,
											"end": 11025,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 10964,
											"end": 11025,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10938,
											"end": 11025,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10938,
											"end": 11025,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11042,
											"end": 11057,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11057,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11057,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11057,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10641,
											"end": 11064,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10641,
											"end": 11064,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10641,
											"end": 11064,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10641,
											"end": 11064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11496,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 11070,
											"end": 11496,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11141,
											"end": 11148,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11371,
											"end": 11394,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11452,
											"end": 11457,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 11444,
											"end": 11447,
											"name": "PUSH",
											"source": 9,
											"value": "16D"
										},
										{
											"begin": 11416,
											"end": 11429,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11416,
											"end": 11441,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 11416,
											"end": 11441,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11416,
											"end": 11441,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11416,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 11416,
											"end": 11447,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11416,
											"end": 11447,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11416,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 11416,
											"end": 11447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11416,
											"end": 11447,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 11416,
											"end": 11447,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11413,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 11408,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 11408,
											"end": 11447,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11447,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 11408,
											"end": 11447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11408,
											"end": 11447,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 11408,
											"end": 11447,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11398,
											"end": 11404,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11398,
											"end": 11448,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 11398,
											"end": 11448,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11398,
											"end": 11448,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11398,
											"end": 11448,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 11398,
											"end": 11448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11398,
											"end": 11448,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 11398,
											"end": 11448,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11397,
											"end": 11457,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 11397,
											"end": 11457,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11397,
											"end": 11457,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11397,
											"end": 11457,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 11397,
											"end": 11457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11397,
											"end": 11457,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 11397,
											"end": 11457,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11457,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11371,
											"end": 11457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11474,
											"end": 11489,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11467,
											"end": 11489,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11467,
											"end": 11489,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11467,
											"end": 11489,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11496,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11496,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11496,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9696,
											"end": 9860,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 9696,
											"end": 9860,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9696,
											"end": 9860,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9696,
											"end": 9860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9866,
											"end": 10035,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 9866,
											"end": 10035,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9866,
											"end": 10035,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9866,
											"end": 10035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10215,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 10041,
											"end": 10215,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10215,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10041,
											"end": 10215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "135"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "137"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 420,
											"name": "tag",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 334,
											"end": 420,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 369,
											"end": 376,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 413,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 402,
											"end": 407,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 398,
											"end": 414,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 387,
											"end": 414,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 387,
											"end": 414,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 420,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 420,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 420,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 426,
											"end": 544,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 426,
											"end": 544,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 497,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 513,
											"end": 518,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 497,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 497,
											"end": 519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 497,
											"end": 519,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 497,
											"end": 519,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 490,
											"end": 495,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 487,
											"end": 520,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 477,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 477,
											"end": 538,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 534,
											"end": 535,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 532,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 524,
											"end": 536,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 477,
											"end": 538,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 477,
											"end": 538,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 426,
											"end": 544,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 426,
											"end": 544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 550,
											"end": 685,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 550,
											"end": 685,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 594,
											"end": 599,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 638,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 619,
											"end": 639,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 610,
											"end": 639,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 610,
											"end": 639,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 648,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 673,
											"end": 678,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 648,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 648,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 648,
											"end": 679,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 648,
											"end": 679,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 550,
											"end": 685,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 550,
											"end": 685,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 550,
											"end": 685,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 550,
											"end": 685,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 550,
											"end": 685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 691,
											"end": 1016,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 691,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 748,
											"end": 754,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 799,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 785,
											"end": 794,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 776,
											"end": 783,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 772,
											"end": 795,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 768,
											"end": 800,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 765,
											"end": 884,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 765,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 765,
											"end": 884,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 803,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 803,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 803,
											"end": 882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 803,
											"end": 882,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 803,
											"end": 882,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 765,
											"end": 884,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 765,
											"end": 884,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 923,
											"end": 924,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 991,
											"end": 998,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 982,
											"end": 988,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 971,
											"end": 980,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 967,
											"end": 989,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 948,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 948,
											"end": 999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 948,
											"end": 999,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 948,
											"end": 999,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 938,
											"end": 999,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 938,
											"end": 999,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 691,
											"end": 1016,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 691,
											"end": 1016,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 691,
											"end": 1016,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 691,
											"end": 1016,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 691,
											"end": 1016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1059,
											"end": 1066,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1141,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1092,
											"end": 1097,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1088,
											"end": 1142,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1142,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1142,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1022,
											"end": 1148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1250,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 1154,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1191,
											"end": 1198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 1238,
											"end": 1243,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1220,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 1220,
											"end": 1244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1220,
											"end": 1244,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 1220,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1209,
											"end": 1244,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1209,
											"end": 1244,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1250,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1250,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1250,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1374,
											"name": "tag",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 1256,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1343,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 1361,
											"end": 1366,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1343,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 1343,
											"end": 1367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1343,
											"end": 1367,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 1343,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1338,
											"end": 1341,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1368,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1374,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1374,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1380,
											"end": 1602,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 1380,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1473,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1511,
											"end": 1513,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1509,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1496,
											"end": 1514,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1488,
											"end": 1514,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1488,
											"end": 1514,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1524,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 1592,
											"end": 1593,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1590,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1568,
											"end": 1574,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1524,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 1524,
											"end": 1595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1524,
											"end": 1595,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 1524,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1380,
											"end": 1602,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1380,
											"end": 1602,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1380,
											"end": 1602,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1380,
											"end": 1602,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1380,
											"end": 1602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1608,
											"end": 1730,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 1608,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1681,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 1699,
											"end": 1704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1681,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 1681,
											"end": 1705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1681,
											"end": 1705,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 1681,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1674,
											"end": 1679,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1671,
											"end": 1706,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 1661,
											"end": 1724,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1718,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1710,
											"end": 1722,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1724,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 1661,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1608,
											"end": 1730,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1608,
											"end": 1730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1875,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 1736,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1820,
											"end": 1826,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1807,
											"end": 1827,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1827,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1827,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1836,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 1863,
											"end": 1868,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1836,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 1836,
											"end": 1869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1836,
											"end": 1869,
											"name": "tag",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 1836,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1875,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1875,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1875,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1875,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1881,
											"end": 2210,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 1881,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1940,
											"end": 1946,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1989,
											"end": 1991,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1977,
											"end": 1986,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1968,
											"end": 1975,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 1987,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1960,
											"end": 1992,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1957,
											"end": 2076,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1957,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 1957,
											"end": 2076,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 1995,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 1995,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2074,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 1995,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1957,
											"end": 2076,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 1957,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2115,
											"end": 2116,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 2185,
											"end": 2192,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2176,
											"end": 2182,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2165,
											"end": 2174,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2183,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2140,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 2140,
											"end": 2193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2140,
											"end": 2193,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 2140,
											"end": 2193,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2130,
											"end": 2193,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2130,
											"end": 2193,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2086,
											"end": 2203,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1881,
											"end": 2210,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1881,
											"end": 2210,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1881,
											"end": 2210,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1881,
											"end": 2210,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1881,
											"end": 2210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2216,
											"end": 2318,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 2216,
											"end": 2318,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2289,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 2305,
											"end": 2310,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2289,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 2289,
											"end": 2311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2289,
											"end": 2311,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 2289,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2284,
											"end": 2287,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2277,
											"end": 2312,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2216,
											"end": 2318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2216,
											"end": 2318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2216,
											"end": 2318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2324,
											"end": 2401,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 2324,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2368,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2395,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2379,
											"end": 2395,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2379,
											"end": 2395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2324,
											"end": 2401,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2324,
											"end": 2401,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2324,
											"end": 2401,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2324,
											"end": 2401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2407,
											"end": 2515,
											"name": "tag",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 2407,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 2502,
											"end": 2507,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 2484,
											"end": 2508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2508,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 2484,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2479,
											"end": 2482,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2472,
											"end": 2509,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2407,
											"end": 2515,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2407,
											"end": 2515,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2407,
											"end": 2515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2611,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 2521,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2555,
											"end": 2562,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2603,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2591,
											"end": 2604,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2584,
											"end": 2605,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2573,
											"end": 2605,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2573,
											"end": 2605,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2611,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2611,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2611,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2617,
											"end": 2716,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 2617,
											"end": 2716,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2688,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 2703,
											"end": 2708,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2688,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 2688,
											"end": 2709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2688,
											"end": 2709,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 2688,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2683,
											"end": 2686,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2676,
											"end": 2710,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2617,
											"end": 2716,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2617,
											"end": 2716,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2617,
											"end": 2716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 3684,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 2800,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2953,
											"end": 2957,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2948,
											"end": 2951,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2944,
											"end": 2958,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3045,
											"end": 3049,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 3043,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3034,
											"end": 3050,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3028,
											"end": 3051,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 3117,
											"end": 3121,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3112,
											"end": 3115,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3108,
											"end": 3122,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3094,
											"end": 3106,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 3064,
											"end": 3123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2968,
											"end": 3133,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3225,
											"end": 3229,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3218,
											"end": 3223,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3214,
											"end": 3230,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3208,
											"end": 3231,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3244,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 3301,
											"end": 3305,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3296,
											"end": 3299,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3292,
											"end": 3306,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3278,
											"end": 3290,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3244,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 3244,
											"end": 3307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3244,
											"end": 3307,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 3244,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3317,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3408,
											"end": 3412,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3401,
											"end": 3406,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3397,
											"end": 3413,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3391,
											"end": 3414,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3427,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 3484,
											"end": 3488,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3479,
											"end": 3482,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3489,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3461,
											"end": 3473,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3427,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 3427,
											"end": 3490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3427,
											"end": 3490,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 3427,
											"end": 3490,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3327,
											"end": 3500,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3591,
											"end": 3595,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3584,
											"end": 3589,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3580,
											"end": 3596,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3574,
											"end": 3597,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3610,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 3661,
											"end": 3665,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3656,
											"end": 3659,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3652,
											"end": 3666,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3638,
											"end": 3650,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3610,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 3610,
											"end": 3667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3610,
											"end": 3667,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 3610,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3510,
											"end": 3677,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2922,
											"end": 3684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 3684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 3684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 3684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3782,
											"end": 4511,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 3782,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3949,
											"end": 3953,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3944,
											"end": 3947,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3940,
											"end": 3954,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4043,
											"end": 4047,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4036,
											"end": 4041,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4032,
											"end": 4048,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4026,
											"end": 4049,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4062,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 4119,
											"end": 4123,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4117,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4110,
											"end": 4124,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4108,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4062,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 4062,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4062,
											"end": 4125,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 4062,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3964,
											"end": 4135,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4228,
											"end": 4232,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4221,
											"end": 4226,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4217,
											"end": 4233,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4211,
											"end": 4234,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4247,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 4304,
											"end": 4308,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4299,
											"end": 4302,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4309,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4281,
											"end": 4293,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4247,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 4247,
											"end": 4310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4247,
											"end": 4310,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 4247,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4145,
											"end": 4320,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4412,
											"end": 4416,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4405,
											"end": 4410,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4401,
											"end": 4417,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4395,
											"end": 4418,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4431,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 4488,
											"end": 4492,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4483,
											"end": 4486,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4479,
											"end": 4493,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4465,
											"end": 4477,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4431,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 4431,
											"end": 4494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4431,
											"end": 4494,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 4431,
											"end": 4494,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4330,
											"end": 4504,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3918,
											"end": 4511,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3782,
											"end": 4511,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3782,
											"end": 4511,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3782,
											"end": 4511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4517,
											"end": 4635,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 4517,
											"end": 4635,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4604,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 4622,
											"end": 4627,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4604,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 4604,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4604,
											"end": 4628,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 4604,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4599,
											"end": 4602,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4592,
											"end": 4629,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4517,
											"end": 4635,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4517,
											"end": 4635,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4517,
											"end": 4635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4641,
											"end": 5338,
											"name": "tag",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4641,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4954,
											"end": 4957,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4943,
											"end": 4952,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4939,
											"end": 4958,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4931,
											"end": 4958,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4931,
											"end": 4958,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4968,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 5092,
											"end": 5093,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5081,
											"end": 5090,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5077,
											"end": 5094,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5068,
											"end": 5074,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4968,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 4968,
											"end": 5095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4968,
											"end": 5095,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 4968,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5105,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 5243,
											"end": 5246,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5232,
											"end": 5241,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5228,
											"end": 5247,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5105,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 5105,
											"end": 5248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5105,
											"end": 5248,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 5105,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5258,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 5326,
											"end": 5329,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 5315,
											"end": 5324,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5311,
											"end": 5330,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5302,
											"end": 5308,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5258,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 5258,
											"end": 5331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5258,
											"end": 5331,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 5258,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4641,
											"end": 5338,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 4641,
											"end": 5338,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4641,
											"end": 5338,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4641,
											"end": 5338,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4641,
											"end": 5338,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4641,
											"end": 5338,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4641,
											"end": 5338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5344,
											"end": 5897,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 5344,
											"end": 5897,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5521,
											"end": 5525,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5559,
											"end": 5562,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5548,
											"end": 5557,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5544,
											"end": 5563,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5536,
											"end": 5563,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5536,
											"end": 5563,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5644,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 5641,
											"end": 5642,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5630,
											"end": 5639,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5626,
											"end": 5643,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5617,
											"end": 5623,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5644,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 5573,
											"end": 5644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5644,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 5573,
											"end": 5644,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5654,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 5722,
											"end": 5724,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5711,
											"end": 5720,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5707,
											"end": 5725,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5698,
											"end": 5704,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5654,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 5654,
											"end": 5726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5654,
											"end": 5726,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 5654,
											"end": 5726,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5736,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 5804,
											"end": 5806,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5793,
											"end": 5802,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5789,
											"end": 5807,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5780,
											"end": 5786,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5736,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 5736,
											"end": 5808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5736,
											"end": 5808,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 5736,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5818,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 5886,
											"end": 5888,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5875,
											"end": 5884,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5871,
											"end": 5889,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5862,
											"end": 5868,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5818,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 5818,
											"end": 5890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5818,
											"end": 5890,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 5818,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5344,
											"end": 5897,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 5344,
											"end": 5897,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5344,
											"end": 5897,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5344,
											"end": 5897,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5344,
											"end": 5897,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5344,
											"end": 5897,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5344,
											"end": 5897,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5344,
											"end": 5897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5903,
											"end": 6012,
											"name": "tag",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 5903,
											"end": 6012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5984,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 5999,
											"end": 6004,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5984,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 5984,
											"end": 6005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5984,
											"end": 6005,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 5984,
											"end": 6005,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5979,
											"end": 5982,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5972,
											"end": 6006,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5903,
											"end": 6012,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5903,
											"end": 6012,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5903,
											"end": 6012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6018,
											"end": 6559,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 6018,
											"end": 6559,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6189,
											"end": 6193,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6227,
											"end": 6230,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 6216,
											"end": 6225,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6212,
											"end": 6231,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6204,
											"end": 6231,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6204,
											"end": 6231,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6241,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 6303,
											"end": 6304,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6292,
											"end": 6301,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6288,
											"end": 6305,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6279,
											"end": 6285,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6241,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 6241,
											"end": 6306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6241,
											"end": 6306,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 6241,
											"end": 6306,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6316,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 6384,
											"end": 6386,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6373,
											"end": 6382,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6369,
											"end": 6387,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6360,
											"end": 6366,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6316,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 6316,
											"end": 6388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6316,
											"end": 6388,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 6316,
											"end": 6388,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6398,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 6466,
											"end": 6468,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6455,
											"end": 6464,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6469,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6442,
											"end": 6448,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6398,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 6398,
											"end": 6470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6398,
											"end": 6470,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 6398,
											"end": 6470,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6480,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 6548,
											"end": 6550,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6537,
											"end": 6546,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6533,
											"end": 6551,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6524,
											"end": 6530,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6480,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 6480,
											"end": 6552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6480,
											"end": 6552,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 6480,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6018,
											"end": 6559,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 6018,
											"end": 6559,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6018,
											"end": 6559,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6018,
											"end": 6559,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6018,
											"end": 6559,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6018,
											"end": 6559,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6018,
											"end": 6559,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6018,
											"end": 6559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6565,
											"end": 6677,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 6565,
											"end": 6677,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6648,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 6664,
											"end": 6669,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6648,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 6648,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6648,
											"end": 6670,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 6648,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6643,
											"end": 6646,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6565,
											"end": 6677,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6565,
											"end": 6677,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6565,
											"end": 6677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6683,
											"end": 7216,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 6683,
											"end": 7216,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6850,
											"end": 6854,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6891,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 6877,
											"end": 6886,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6873,
											"end": 6892,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6865,
											"end": 6892,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6865,
											"end": 6892,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6902,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 6966,
											"end": 6967,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6955,
											"end": 6964,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6951,
											"end": 6968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6942,
											"end": 6948,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6902,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 6902,
											"end": 6969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6902,
											"end": 6969,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 6902,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6979,
											"end": 7051,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 7047,
											"end": 7049,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7036,
											"end": 7045,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7032,
											"end": 7050,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7023,
											"end": 7029,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6979,
											"end": 7051,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 6979,
											"end": 7051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6979,
											"end": 7051,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 6979,
											"end": 7051,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7061,
											"end": 7133,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 7129,
											"end": 7131,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7118,
											"end": 7127,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7114,
											"end": 7132,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7105,
											"end": 7111,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7061,
											"end": 7133,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 7061,
											"end": 7133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7061,
											"end": 7133,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 7061,
											"end": 7133,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7143,
											"end": 7209,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 7205,
											"end": 7207,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7194,
											"end": 7203,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7190,
											"end": 7208,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7181,
											"end": 7187,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7143,
											"end": 7209,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 7143,
											"end": 7209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7143,
											"end": 7209,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 7143,
											"end": 7209,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6683,
											"end": 7216,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 6683,
											"end": 7216,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6683,
											"end": 7216,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6683,
											"end": 7216,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6683,
											"end": 7216,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6683,
											"end": 7216,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6683,
											"end": 7216,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6683,
											"end": 7216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7222,
											"end": 7664,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 7222,
											"end": 7664,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7371,
											"end": 7375,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7409,
											"end": 7411,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7398,
											"end": 7407,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7394,
											"end": 7412,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7386,
											"end": 7412,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7386,
											"end": 7412,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7422,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 7490,
											"end": 7491,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7479,
											"end": 7488,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7475,
											"end": 7492,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7466,
											"end": 7472,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7422,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 7422,
											"end": 7493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7422,
											"end": 7493,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 7422,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7503,
											"end": 7575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 7571,
											"end": 7573,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7560,
											"end": 7569,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7556,
											"end": 7574,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7547,
											"end": 7553,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7503,
											"end": 7575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 7503,
											"end": 7575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7503,
											"end": 7575,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 7503,
											"end": 7575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7657,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 7653,
											"end": 7655,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7642,
											"end": 7651,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7638,
											"end": 7656,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7629,
											"end": 7635,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7657,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 7585,
											"end": 7657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7657,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 7585,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7222,
											"end": 7664,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 7222,
											"end": 7664,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7222,
											"end": 7664,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7222,
											"end": 7664,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7222,
											"end": 7664,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7222,
											"end": 7664,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7222,
											"end": 7664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7670,
											"end": 7792,
											"name": "tag",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 7670,
											"end": 7792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7743,
											"end": 7767,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 7761,
											"end": 7766,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7743,
											"end": 7767,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 7743,
											"end": 7767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7743,
											"end": 7767,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 7743,
											"end": 7767,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7736,
											"end": 7741,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7733,
											"end": 7768,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 7723,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 7723,
											"end": 7786,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7782,
											"end": 7783,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7779,
											"end": 7780,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7772,
											"end": 7784,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7723,
											"end": 7786,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 7723,
											"end": 7786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7670,
											"end": 7792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7670,
											"end": 7792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7798,
											"end": 7937,
											"name": "tag",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 7798,
											"end": 7937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7844,
											"end": 7849,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7882,
											"end": 7888,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7860,
											"end": 7889,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7860,
											"end": 7889,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7898,
											"end": 7931,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 7925,
											"end": 7930,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7898,
											"end": 7931,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 7898,
											"end": 7931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7898,
											"end": 7931,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 7898,
											"end": 7931,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7798,
											"end": 7937,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7798,
											"end": 7937,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7798,
											"end": 7937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7798,
											"end": 7937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7798,
											"end": 7937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7943,
											"end": 8562,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 7943,
											"end": 8562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8020,
											"end": 8026,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8028,
											"end": 8034,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8036,
											"end": 8042,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8085,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8073,
											"end": 8082,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8064,
											"end": 8071,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8060,
											"end": 8083,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8056,
											"end": 8088,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8053,
											"end": 8172,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8053,
											"end": 8172,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 8053,
											"end": 8172,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 8091,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 8091,
											"end": 8170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8170,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 8091,
											"end": 8170,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8053,
											"end": 8172,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 8053,
											"end": 8172,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8211,
											"end": 8212,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8236,
											"end": 8289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 8281,
											"end": 8288,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8272,
											"end": 8278,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8261,
											"end": 8270,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 8257,
											"end": 8279,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8236,
											"end": 8289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 8236,
											"end": 8289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8236,
											"end": 8289,
											"name": "tag",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 8236,
											"end": 8289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8226,
											"end": 8289,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8226,
											"end": 8289,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8182,
											"end": 8299,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8338,
											"end": 8340,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8364,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 8409,
											"end": 8416,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8400,
											"end": 8406,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8389,
											"end": 8398,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 8385,
											"end": 8407,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8364,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 8364,
											"end": 8417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8364,
											"end": 8417,
											"name": "tag",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 8364,
											"end": 8417,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8354,
											"end": 8417,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8354,
											"end": 8417,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8309,
											"end": 8427,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8466,
											"end": 8468,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8492,
											"end": 8545,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 8537,
											"end": 8544,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8528,
											"end": 8534,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8517,
											"end": 8526,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 8513,
											"end": 8535,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8492,
											"end": 8545,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 8492,
											"end": 8545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8492,
											"end": 8545,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 8492,
											"end": 8545,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8482,
											"end": 8545,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8482,
											"end": 8545,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8437,
											"end": 8555,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7943,
											"end": 8562,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7943,
											"end": 8562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7943,
											"end": 8562,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7943,
											"end": 8562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7943,
											"end": 8562,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7943,
											"end": 8562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8568,
											"end": 8790,
											"name": "tag",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 8568,
											"end": 8790,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8661,
											"end": 8665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8699,
											"end": 8701,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8688,
											"end": 8697,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8684,
											"end": 8702,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8676,
											"end": 8702,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8676,
											"end": 8702,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8712,
											"end": 8783,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 8780,
											"end": 8781,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8769,
											"end": 8778,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8765,
											"end": 8782,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8756,
											"end": 8762,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8712,
											"end": 8783,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 8712,
											"end": 8783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8712,
											"end": 8783,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 8712,
											"end": 8783,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8568,
											"end": 8790,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8568,
											"end": 8790,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8568,
											"end": 8790,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8568,
											"end": 8790,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8568,
											"end": 8790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8796,
											"end": 8913,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 8796,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8905,
											"end": 8906,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8902,
											"end": 8903,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8895,
											"end": 8907,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8919,
											"end": 9036,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 8919,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9028,
											"end": 9029,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9025,
											"end": 9026,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9018,
											"end": 9030,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9042,
											"end": 9159,
											"name": "tag",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 9042,
											"end": 9159,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9151,
											"end": 9152,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9148,
											"end": 9149,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9141,
											"end": 9153,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9179,
											"end": 9732,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 9179,
											"end": 9732,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9237,
											"end": 9245,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9247,
											"end": 9253,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9297,
											"end": 9300,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9290,
											"end": 9294,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 9282,
											"end": 9288,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9278,
											"end": 9295,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9301,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9264,
											"end": 9386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 9264,
											"end": 9386,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9305,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 9305,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 9305,
											"end": 9384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9305,
											"end": 9384,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 9305,
											"end": 9384,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9264,
											"end": 9386,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 9264,
											"end": 9386,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9418,
											"end": 9424,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9405,
											"end": 9425,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 9395,
											"end": 9425,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9395,
											"end": 9425,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9448,
											"end": 9466,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9440,
											"end": 9446,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9437,
											"end": 9467,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9434,
											"end": 9551,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9434,
											"end": 9551,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 9434,
											"end": 9551,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9470,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 9470,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 9470,
											"end": 9549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9470,
											"end": 9549,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 9470,
											"end": 9549,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9434,
											"end": 9551,
											"name": "tag",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 9434,
											"end": 9551,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9584,
											"end": 9588,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9576,
											"end": 9582,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9572,
											"end": 9589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9560,
											"end": 9589,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9560,
											"end": 9589,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9638,
											"end": 9641,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9630,
											"end": 9634,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 9622,
											"end": 9628,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9618,
											"end": 9635,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 9608,
											"end": 9616,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9604,
											"end": 9636,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9601,
											"end": 9642,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9598,
											"end": 9726,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9598,
											"end": 9726,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 9598,
											"end": 9726,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9645,
											"end": 9724,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 9645,
											"end": 9724,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 9645,
											"end": 9724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9645,
											"end": 9724,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 9645,
											"end": 9724,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9598,
											"end": 9726,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 9598,
											"end": 9726,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9179,
											"end": 9732,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9179,
											"end": 9732,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9179,
											"end": 9732,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9179,
											"end": 9732,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9179,
											"end": 9732,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9179,
											"end": 9732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9738,
											"end": 10412,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 9738,
											"end": 10412,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9818,
											"end": 9824,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9826,
											"end": 9832,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9834,
											"end": 9840,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9883,
											"end": 9885,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9871,
											"end": 9880,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9862,
											"end": 9869,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9858,
											"end": 9881,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9854,
											"end": 9886,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9851,
											"end": 9970,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9851,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 9851,
											"end": 9970,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9889,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 9889,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 9889,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9889,
											"end": 9968,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 9889,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9851,
											"end": 9970,
											"name": "tag",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 9851,
											"end": 9970,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10037,
											"end": 10038,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10026,
											"end": 10035,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10022,
											"end": 10039,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10009,
											"end": 10040,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 10067,
											"end": 10085,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10059,
											"end": 10065,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10056,
											"end": 10086,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10053,
											"end": 10170,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10053,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 10053,
											"end": 10170,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10089,
											"end": 10168,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 10089,
											"end": 10168,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 10089,
											"end": 10168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10089,
											"end": 10168,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 10089,
											"end": 10168,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10053,
											"end": 10170,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 10053,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10202,
											"end": 10267,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 10259,
											"end": 10266,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10250,
											"end": 10256,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10248,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 10235,
											"end": 10257,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10202,
											"end": 10267,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 10202,
											"end": 10267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10202,
											"end": 10267,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 10202,
											"end": 10267,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10184,
											"end": 10267,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 10184,
											"end": 10267,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10184,
											"end": 10267,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 10184,
											"end": 10267,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9980,
											"end": 10277,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10316,
											"end": 10318,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10342,
											"end": 10395,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 10387,
											"end": 10394,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10378,
											"end": 10384,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10367,
											"end": 10376,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 10363,
											"end": 10385,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10342,
											"end": 10395,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 10342,
											"end": 10395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10342,
											"end": 10395,
											"name": "tag",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 10342,
											"end": 10395,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10332,
											"end": 10395,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10332,
											"end": 10395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10287,
											"end": 10405,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9738,
											"end": 10412,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9738,
											"end": 10412,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9738,
											"end": 10412,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9738,
											"end": 10412,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9738,
											"end": 10412,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9738,
											"end": 10412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10418,
											"end": 10587,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 10418,
											"end": 10587,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10502,
											"end": 10513,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10536,
											"end": 10542,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10531,
											"end": 10534,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10524,
											"end": 10543,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10576,
											"end": 10580,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10571,
											"end": 10574,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10567,
											"end": 10581,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10552,
											"end": 10581,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10552,
											"end": 10581,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10418,
											"end": 10587,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10418,
											"end": 10587,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10418,
											"end": 10587,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10418,
											"end": 10587,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10418,
											"end": 10587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10593,
											"end": 10760,
											"name": "tag",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 10593,
											"end": 10760,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10733,
											"end": 10752,
											"name": "PUSH",
											"source": 13,
											"value": "4465706F73697420746F6F20736D616C6C000000000000000000000000000000"
										},
										{
											"begin": 10729,
											"end": 10730,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10721,
											"end": 10727,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10717,
											"end": 10731,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10710,
											"end": 10753,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10593,
											"end": 10760,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10593,
											"end": 10760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10766,
											"end": 11132,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 10766,
											"end": 11132,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10908,
											"end": 10911,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10929,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 10993,
											"end": 10995,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 10988,
											"end": 10991,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10929,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 10929,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10929,
											"end": 10996,
											"name": "tag",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 10929,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10922,
											"end": 10996,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10922,
											"end": 10996,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11005,
											"end": 11098,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 11094,
											"end": 11097,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11005,
											"end": 11098,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 11005,
											"end": 11098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11005,
											"end": 11098,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 11005,
											"end": 11098,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11123,
											"end": 11125,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11118,
											"end": 11121,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11114,
											"end": 11126,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11107,
											"end": 11126,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11107,
											"end": 11126,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10766,
											"end": 11132,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10766,
											"end": 11132,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10766,
											"end": 11132,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10766,
											"end": 11132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11138,
											"end": 11557,
											"name": "tag",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 11138,
											"end": 11557,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11304,
											"end": 11308,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11342,
											"end": 11344,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11331,
											"end": 11340,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11327,
											"end": 11345,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11319,
											"end": 11345,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11319,
											"end": 11345,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11391,
											"end": 11400,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11385,
											"end": 11389,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11381,
											"end": 11401,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11377,
											"end": 11378,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11366,
											"end": 11375,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11362,
											"end": 11379,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11355,
											"end": 11402,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11419,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 11545,
											"end": 11549,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11419,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 11419,
											"end": 11550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11419,
											"end": 11550,
											"name": "tag",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 11419,
											"end": 11550,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11411,
											"end": 11550,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11411,
											"end": 11550,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11138,
											"end": 11557,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11138,
											"end": 11557,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11138,
											"end": 11557,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11138,
											"end": 11557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11563,
											"end": 11731,
											"name": "tag",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 11563,
											"end": 11731,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11703,
											"end": 11723,
											"name": "PUSH",
											"source": 13,
											"value": "496E76616C6964207269736B2073636F72650000000000000000000000000000"
										},
										{
											"begin": 11699,
											"end": 11700,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11691,
											"end": 11697,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11687,
											"end": 11701,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11680,
											"end": 11724,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11563,
											"end": 11731,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11563,
											"end": 11731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11737,
											"end": 12103,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 11737,
											"end": 12103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11879,
											"end": 11882,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11900,
											"end": 11967,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 11964,
											"end": 11966,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 11959,
											"end": 11962,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11900,
											"end": 11967,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 11900,
											"end": 11967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11900,
											"end": 11967,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 11900,
											"end": 11967,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11893,
											"end": 11967,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11893,
											"end": 11967,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11976,
											"end": 12069,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 12065,
											"end": 12068,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11976,
											"end": 12069,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 11976,
											"end": 12069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11976,
											"end": 12069,
											"name": "tag",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 11976,
											"end": 12069,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12094,
											"end": 12096,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12089,
											"end": 12092,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12078,
											"end": 12097,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12078,
											"end": 12097,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11737,
											"end": 12103,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11737,
											"end": 12103,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11737,
											"end": 12103,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11737,
											"end": 12103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12109,
											"end": 12528,
											"name": "tag",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 12109,
											"end": 12528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12275,
											"end": 12279,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12313,
											"end": 12315,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12302,
											"end": 12311,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12298,
											"end": 12316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12290,
											"end": 12316,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12290,
											"end": 12316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12362,
											"end": 12371,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12356,
											"end": 12360,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12352,
											"end": 12372,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12348,
											"end": 12349,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12337,
											"end": 12346,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12333,
											"end": 12350,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12326,
											"end": 12373,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12390,
											"end": 12521,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 12516,
											"end": 12520,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12390,
											"end": 12521,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 12390,
											"end": 12521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12390,
											"end": 12521,
											"name": "tag",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 12390,
											"end": 12521,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12382,
											"end": 12521,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12382,
											"end": 12521,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12109,
											"end": 12528,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12109,
											"end": 12528,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12109,
											"end": 12528,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12109,
											"end": 12528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12534,
											"end": 12714,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 12534,
											"end": 12714,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12582,
											"end": 12659,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12579,
											"end": 12580,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12572,
											"end": 12660,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12679,
											"end": 12683,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 12676,
											"end": 12677,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12669,
											"end": 12684,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12703,
											"end": 12707,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12700,
											"end": 12701,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12693,
											"end": 12708,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12911,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 12720,
											"end": 12911,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12760,
											"end": 12763,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12779,
											"end": 12799,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 12797,
											"end": 12798,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12779,
											"end": 12799,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 12779,
											"end": 12799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12779,
											"end": 12799,
											"name": "tag",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 12779,
											"end": 12799,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12774,
											"end": 12799,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12774,
											"end": 12799,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12813,
											"end": 12833,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 12831,
											"end": 12832,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12813,
											"end": 12833,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 12813,
											"end": 12833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12813,
											"end": 12833,
											"name": "tag",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 12813,
											"end": 12833,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12808,
											"end": 12833,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12808,
											"end": 12833,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12856,
											"end": 12857,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12853,
											"end": 12854,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12849,
											"end": 12858,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12842,
											"end": 12858,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12842,
											"end": 12858,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12877,
											"end": 12880,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12874,
											"end": 12875,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12871,
											"end": 12881,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 12868,
											"end": 12904,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12868,
											"end": 12904,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 12868,
											"end": 12904,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12884,
											"end": 12902,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 12884,
											"end": 12902,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 12884,
											"end": 12902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12884,
											"end": 12902,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 12884,
											"end": 12902,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12868,
											"end": 12904,
											"name": "tag",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 12868,
											"end": 12904,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12911,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12911,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12911,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12911,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12917,
											"end": 13241,
											"name": "tag",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 12917,
											"end": 13241,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13034,
											"end": 13038,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13072,
											"end": 13074,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13061,
											"end": 13070,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13057,
											"end": 13075,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13049,
											"end": 13075,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13049,
											"end": 13075,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13085,
											"end": 13156,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 13153,
											"end": 13154,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13142,
											"end": 13151,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13138,
											"end": 13155,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13129,
											"end": 13135,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13085,
											"end": 13156,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 13085,
											"end": 13156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13085,
											"end": 13156,
											"name": "tag",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 13085,
											"end": 13156,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13166,
											"end": 13234,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 13230,
											"end": 13232,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13219,
											"end": 13228,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13215,
											"end": 13233,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13206,
											"end": 13212,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13166,
											"end": 13234,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 13166,
											"end": 13234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13166,
											"end": 13234,
											"name": "tag",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 13166,
											"end": 13234,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12917,
											"end": 13241,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12917,
											"end": 13241,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12917,
											"end": 13241,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12917,
											"end": 13241,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12917,
											"end": 13241,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12917,
											"end": 13241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13247,
											"end": 13421,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 13247,
											"end": 13421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13387,
											"end": 13413,
											"name": "PUSH",
											"source": 13,
											"value": "4E6F206465706F7369747320746F20726562616C616E63650000000000000000"
										},
										{
											"begin": 13383,
											"end": 13384,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13375,
											"end": 13381,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13371,
											"end": 13385,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13364,
											"end": 13414,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13247,
											"end": 13421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13247,
											"end": 13421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13427,
											"end": 13793,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 13427,
											"end": 13793,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13569,
											"end": 13572,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13590,
											"end": 13657,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 13654,
											"end": 13656,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 13649,
											"end": 13652,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13590,
											"end": 13657,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 13590,
											"end": 13657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13590,
											"end": 13657,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 13590,
											"end": 13657,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13583,
											"end": 13657,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13583,
											"end": 13657,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13666,
											"end": 13759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 13755,
											"end": 13758,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13666,
											"end": 13759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 13666,
											"end": 13759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13666,
											"end": 13759,
											"name": "tag",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 13666,
											"end": 13759,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13784,
											"end": 13786,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13779,
											"end": 13782,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13775,
											"end": 13787,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13768,
											"end": 13787,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13768,
											"end": 13787,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13427,
											"end": 13793,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13427,
											"end": 13793,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13427,
											"end": 13793,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13427,
											"end": 13793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13799,
											"end": 14218,
											"name": "tag",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 13799,
											"end": 14218,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13965,
											"end": 13969,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14003,
											"end": 14005,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13992,
											"end": 14001,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13988,
											"end": 14006,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13980,
											"end": 14006,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13980,
											"end": 14006,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14052,
											"end": 14061,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14046,
											"end": 14050,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14042,
											"end": 14062,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14038,
											"end": 14039,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14027,
											"end": 14036,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14023,
											"end": 14040,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14016,
											"end": 14063,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14080,
											"end": 14211,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 14206,
											"end": 14210,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14080,
											"end": 14211,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 14080,
											"end": 14211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14080,
											"end": 14211,
											"name": "tag",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 14080,
											"end": 14211,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14072,
											"end": 14211,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14072,
											"end": 14211,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13799,
											"end": 14218,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13799,
											"end": 14218,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13799,
											"end": 14218,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13799,
											"end": 14218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14224,
											"end": 14372,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 14224,
											"end": 14372,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14326,
											"end": 14337,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14363,
											"end": 14366,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14348,
											"end": 14366,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14348,
											"end": 14366,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14224,
											"end": 14372,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14224,
											"end": 14372,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14224,
											"end": 14372,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14224,
											"end": 14372,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14224,
											"end": 14372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14378,
											"end": 14524,
											"name": "tag",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 14378,
											"end": 14524,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14475,
											"end": 14481,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14470,
											"end": 14473,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14465,
											"end": 14468,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14452,
											"end": 14482,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 14516,
											"end": 14517,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14507,
											"end": 14513,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14502,
											"end": 14505,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14498,
											"end": 14514,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14491,
											"end": 14518,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14378,
											"end": 14524,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14378,
											"end": 14524,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14378,
											"end": 14524,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14378,
											"end": 14524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14554,
											"end": 14884,
											"name": "tag",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 14554,
											"end": 14884,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14670,
											"end": 14673,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14691,
											"end": 14780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 14773,
											"end": 14779,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14768,
											"end": 14771,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14691,
											"end": 14780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 14691,
											"end": 14780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14691,
											"end": 14780,
											"name": "tag",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 14691,
											"end": 14780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14684,
											"end": 14780,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14684,
											"end": 14780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14790,
											"end": 14846,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 14839,
											"end": 14845,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14834,
											"end": 14837,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14827,
											"end": 14832,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14790,
											"end": 14846,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 14790,
											"end": 14846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14790,
											"end": 14846,
											"name": "tag",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 14790,
											"end": 14846,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14871,
											"end": 14877,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14866,
											"end": 14869,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14862,
											"end": 14878,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14855,
											"end": 14878,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14855,
											"end": 14878,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14554,
											"end": 14884,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14554,
											"end": 14884,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14554,
											"end": 14884,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14554,
											"end": 14884,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14554,
											"end": 14884,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14554,
											"end": 14884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14890,
											"end": 15185,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 14890,
											"end": 15185,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15032,
											"end": 15035,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15054,
											"end": 15159,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 15155,
											"end": 15158,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15146,
											"end": 15152,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15138,
											"end": 15144,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 15054,
											"end": 15159,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 15054,
											"end": 15159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15054,
											"end": 15159,
											"name": "tag",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 15054,
											"end": 15159,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15047,
											"end": 15159,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15047,
											"end": 15159,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15176,
											"end": 15179,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15169,
											"end": 15179,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15169,
											"end": 15179,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14890,
											"end": 15185,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14890,
											"end": 15185,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14890,
											"end": 15185,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14890,
											"end": 15185,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14890,
											"end": 15185,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14890,
											"end": 15185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15191,
											"end": 15350,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 15191,
											"end": 15350,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15331,
											"end": 15342,
											"name": "PUSH",
											"source": 13,
											"value": "7472616465726A6F650000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15327,
											"end": 15328,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15319,
											"end": 15325,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15315,
											"end": 15329,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15308,
											"end": 15343,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15191,
											"end": 15350,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15191,
											"end": 15350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15356,
											"end": 15756,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 15356,
											"end": 15756,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15516,
											"end": 15519,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15537,
											"end": 15621,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 15619,
											"end": 15620,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 15614,
											"end": 15617,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15537,
											"end": 15621,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 15537,
											"end": 15621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15537,
											"end": 15621,
											"name": "tag",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 15537,
											"end": 15621,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15530,
											"end": 15621,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15530,
											"end": 15621,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15630,
											"end": 15723,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 15719,
											"end": 15722,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15630,
											"end": 15723,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 15630,
											"end": 15723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15630,
											"end": 15723,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 15630,
											"end": 15723,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15748,
											"end": 15749,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 15743,
											"end": 15746,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15739,
											"end": 15750,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15732,
											"end": 15750,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15732,
											"end": 15750,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15356,
											"end": 15756,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15356,
											"end": 15756,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15356,
											"end": 15756,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15356,
											"end": 15756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15762,
											"end": 16143,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 15762,
											"end": 16143,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15947,
											"end": 15950,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15969,
											"end": 16117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 16113,
											"end": 16116,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15969,
											"end": 16117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 15969,
											"end": 16117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15969,
											"end": 16117,
											"name": "tag",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 15969,
											"end": 16117,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15962,
											"end": 16117,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15962,
											"end": 16117,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16134,
											"end": 16137,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16127,
											"end": 16137,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16127,
											"end": 16137,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15762,
											"end": 16143,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15762,
											"end": 16143,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15762,
											"end": 16143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15762,
											"end": 16143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16149,
											"end": 16304,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 16149,
											"end": 16304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16289,
											"end": 16296,
											"name": "PUSH",
											"source": 13,
											"value": "62656E7169000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16285,
											"end": 16286,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16277,
											"end": 16283,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16273,
											"end": 16287,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16266,
											"end": 16297,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16149,
											"end": 16304,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16149,
											"end": 16304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16310,
											"end": 16710,
											"name": "tag",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 16310,
											"end": 16710,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16470,
											"end": 16473,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16491,
											"end": 16575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 16573,
											"end": 16574,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 16568,
											"end": 16571,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16491,
											"end": 16575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 16491,
											"end": 16575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16491,
											"end": 16575,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 16491,
											"end": 16575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16484,
											"end": 16575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16484,
											"end": 16575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16584,
											"end": 16677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 16673,
											"end": 16676,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16584,
											"end": 16677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 16584,
											"end": 16677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16584,
											"end": 16677,
											"name": "tag",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 16584,
											"end": 16677,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16702,
											"end": 16703,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 16697,
											"end": 16700,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16693,
											"end": 16704,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16686,
											"end": 16704,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16686,
											"end": 16704,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16310,
											"end": 16710,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16310,
											"end": 16710,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16310,
											"end": 16710,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16310,
											"end": 16710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16716,
											"end": 17097,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 16716,
											"end": 17097,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16901,
											"end": 16904,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16923,
											"end": 17071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 17067,
											"end": 17070,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16923,
											"end": 17071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 16923,
											"end": 17071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16923,
											"end": 17071,
											"name": "tag",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 16923,
											"end": 17071,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16916,
											"end": 17071,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16916,
											"end": 17071,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17088,
											"end": 17091,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17081,
											"end": 17091,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17081,
											"end": 17091,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16716,
											"end": 17097,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16716,
											"end": 17097,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16716,
											"end": 17097,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16716,
											"end": 17097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17103,
											"end": 17261,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 17103,
											"end": 17261,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17243,
											"end": 17253,
											"name": "PUSH",
											"source": 13,
											"value": "7969656C6479616B000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17239,
											"end": 17240,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17231,
											"end": 17237,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17227,
											"end": 17241,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17220,
											"end": 17254,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17103,
											"end": 17261,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17103,
											"end": 17261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17267,
											"end": 17667,
											"name": "tag",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 17267,
											"end": 17667,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17427,
											"end": 17430,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17448,
											"end": 17532,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 17530,
											"end": 17531,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 17525,
											"end": 17528,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17448,
											"end": 17532,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 17448,
											"end": 17532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17448,
											"end": 17532,
											"name": "tag",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 17448,
											"end": 17532,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17441,
											"end": 17532,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17441,
											"end": 17532,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17541,
											"end": 17634,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 17630,
											"end": 17633,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17541,
											"end": 17634,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 17541,
											"end": 17634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17541,
											"end": 17634,
											"name": "tag",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 17541,
											"end": 17634,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17659,
											"end": 17660,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 17654,
											"end": 17657,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17650,
											"end": 17661,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17643,
											"end": 17661,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17643,
											"end": 17661,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17267,
											"end": 17667,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17267,
											"end": 17667,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17267,
											"end": 17667,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17267,
											"end": 17667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17673,
											"end": 18054,
											"name": "tag",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 17673,
											"end": 18054,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17858,
											"end": 17861,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17880,
											"end": 18028,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 18024,
											"end": 18027,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17880,
											"end": 18028,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 17880,
											"end": 18028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17880,
											"end": 18028,
											"name": "tag",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 17880,
											"end": 18028,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17873,
											"end": 18028,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17873,
											"end": 18028,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18045,
											"end": 18048,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18038,
											"end": 18048,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18038,
											"end": 18048,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17673,
											"end": 18054,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17673,
											"end": 18054,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17673,
											"end": 18054,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17673,
											"end": 18054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18060,
											"end": 18226,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 18060,
											"end": 18226,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18200,
											"end": 18218,
											"name": "PUSH",
											"source": 13,
											"value": "496E76616C69642070726F746F636F6C00000000000000000000000000000000"
										},
										{
											"begin": 18196,
											"end": 18197,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18188,
											"end": 18194,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18184,
											"end": 18198,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18177,
											"end": 18219,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18060,
											"end": 18226,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18060,
											"end": 18226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18232,
											"end": 18598,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 18232,
											"end": 18598,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18374,
											"end": 18377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18395,
											"end": 18462,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 18459,
											"end": 18461,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 18454,
											"end": 18457,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18395,
											"end": 18462,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 18395,
											"end": 18462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18395,
											"end": 18462,
											"name": "tag",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 18395,
											"end": 18462,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18388,
											"end": 18462,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18388,
											"end": 18462,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18471,
											"end": 18564,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 18560,
											"end": 18563,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18471,
											"end": 18564,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 18471,
											"end": 18564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18471,
											"end": 18564,
											"name": "tag",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 18471,
											"end": 18564,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18589,
											"end": 18591,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18584,
											"end": 18587,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18580,
											"end": 18592,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18573,
											"end": 18592,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18573,
											"end": 18592,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18232,
											"end": 18598,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18232,
											"end": 18598,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18232,
											"end": 18598,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18232,
											"end": 18598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18604,
											"end": 19023,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 18604,
											"end": 19023,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18770,
											"end": 18774,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18808,
											"end": 18810,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18797,
											"end": 18806,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18793,
											"end": 18811,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18785,
											"end": 18811,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18785,
											"end": 18811,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18857,
											"end": 18866,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18851,
											"end": 18855,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18847,
											"end": 18867,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18843,
											"end": 18844,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18832,
											"end": 18841,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18828,
											"end": 18845,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18821,
											"end": 18868,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18885,
											"end": 19016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 19011,
											"end": 19015,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18885,
											"end": 19016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 18885,
											"end": 19016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18885,
											"end": 19016,
											"name": "tag",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 18885,
											"end": 19016,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18877,
											"end": 19016,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18877,
											"end": 19016,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18604,
											"end": 19023,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18604,
											"end": 19023,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18604,
											"end": 19023,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18604,
											"end": 19023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19029,
											"end": 19131,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 19029,
											"end": 19131,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19070,
											"end": 19076,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19121,
											"end": 19123,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 19117,
											"end": 19124,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 19112,
											"end": 19114,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 19105,
											"end": 19110,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19101,
											"end": 19115,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19097,
											"end": 19125,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 19087,
											"end": 19125,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19087,
											"end": 19125,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19029,
											"end": 19131,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19029,
											"end": 19131,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19029,
											"end": 19131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19029,
											"end": 19131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19161,
											"end": 19478,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 19161,
											"end": 19478,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19259,
											"end": 19262,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19280,
											"end": 19351,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 19344,
											"end": 19350,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19339,
											"end": 19342,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19280,
											"end": 19351,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 19280,
											"end": 19351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19280,
											"end": 19351,
											"name": "tag",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 19280,
											"end": 19351,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19273,
											"end": 19351,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 19273,
											"end": 19351,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19361,
											"end": 19417,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 19410,
											"end": 19416,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19405,
											"end": 19408,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19398,
											"end": 19403,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19361,
											"end": 19417,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 19361,
											"end": 19417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19361,
											"end": 19417,
											"name": "tag",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 19361,
											"end": 19417,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19442,
											"end": 19471,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 19464,
											"end": 19470,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19442,
											"end": 19471,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 19442,
											"end": 19471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19442,
											"end": 19471,
											"name": "tag",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 19442,
											"end": 19471,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19437,
											"end": 19440,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19433,
											"end": 19472,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19426,
											"end": 19472,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19426,
											"end": 19472,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19161,
											"end": 19478,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 19161,
											"end": 19478,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19161,
											"end": 19478,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19161,
											"end": 19478,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19161,
											"end": 19478,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19161,
											"end": 19478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19484,
											"end": 19927,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 19484,
											"end": 19927,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19635,
											"end": 19639,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19673,
											"end": 19675,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 19662,
											"end": 19671,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19658,
											"end": 19676,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19650,
											"end": 19676,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19650,
											"end": 19676,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19722,
											"end": 19731,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19716,
											"end": 19720,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19712,
											"end": 19732,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 19708,
											"end": 19709,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19697,
											"end": 19706,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19693,
											"end": 19710,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19686,
											"end": 19733,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19750,
											"end": 19838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 19833,
											"end": 19837,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19824,
											"end": 19830,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19816,
											"end": 19822,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 19750,
											"end": 19838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 19750,
											"end": 19838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19750,
											"end": 19838,
											"name": "tag",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 19750,
											"end": 19838,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19742,
											"end": 19838,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19742,
											"end": 19838,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19848,
											"end": 19920,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "563"
										},
										{
											"begin": 19916,
											"end": 19918,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19905,
											"end": 19914,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19901,
											"end": 19919,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19892,
											"end": 19898,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19848,
											"end": 19920,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 19848,
											"end": 19920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19848,
											"end": 19920,
											"name": "tag",
											"source": 13,
											"value": "563"
										},
										{
											"begin": 19848,
											"end": 19920,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19484,
											"end": 19927,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 19484,
											"end": 19927,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 19484,
											"end": 19927,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19484,
											"end": 19927,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19484,
											"end": 19927,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19484,
											"end": 19927,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19484,
											"end": 19927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19933,
											"end": 20343,
											"name": "tag",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 19933,
											"end": 20343,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19973,
											"end": 19980,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19996,
											"end": 20016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 20014,
											"end": 20015,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19996,
											"end": 20016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 19996,
											"end": 20016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19996,
											"end": 20016,
											"name": "tag",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 19996,
											"end": 20016,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19991,
											"end": 20016,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19991,
											"end": 20016,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20030,
											"end": 20050,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 20048,
											"end": 20049,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20030,
											"end": 20050,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 20030,
											"end": 20050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20030,
											"end": 20050,
											"name": "tag",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 20030,
											"end": 20050,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20025,
											"end": 20050,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20025,
											"end": 20050,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20085,
											"end": 20086,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20082,
											"end": 20083,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20078,
											"end": 20087,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 20107,
											"end": 20137,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 20125,
											"end": 20136,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20107,
											"end": 20137,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 20107,
											"end": 20137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20107,
											"end": 20137,
											"name": "tag",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 20107,
											"end": 20137,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20096,
											"end": 20137,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20096,
											"end": 20137,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20286,
											"end": 20287,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20277,
											"end": 20284,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20273,
											"end": 20288,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 20270,
											"end": 20271,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 20267,
											"end": 20289,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 20247,
											"end": 20248,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20240,
											"end": 20249,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 20220,
											"end": 20303,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 20197,
											"end": 20336,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 20197,
											"end": 20336,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20316,
											"end": 20334,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 20316,
											"end": 20334,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 20316,
											"end": 20334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20316,
											"end": 20334,
											"name": "tag",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 20316,
											"end": 20334,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20197,
											"end": 20336,
											"name": "tag",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 20197,
											"end": 20336,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19981,
											"end": 20343,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19933,
											"end": 20343,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19933,
											"end": 20343,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19933,
											"end": 20343,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19933,
											"end": 20343,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19933,
											"end": 20343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20349,
											"end": 20529,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 20349,
											"end": 20529,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20397,
											"end": 20474,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20394,
											"end": 20395,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20387,
											"end": 20475,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20494,
											"end": 20498,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 20491,
											"end": 20492,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 20484,
											"end": 20499,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20518,
											"end": 20522,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 20515,
											"end": 20516,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20508,
											"end": 20523,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 20535,
											"end": 20720,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 20535,
											"end": 20720,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20575,
											"end": 20576,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20592,
											"end": 20612,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 20610,
											"end": 20611,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20592,
											"end": 20612,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 20592,
											"end": 20612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20592,
											"end": 20612,
											"name": "tag",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 20592,
											"end": 20612,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20587,
											"end": 20612,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20587,
											"end": 20612,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20626,
											"end": 20646,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 20644,
											"end": 20645,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20626,
											"end": 20646,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 20626,
											"end": 20646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20626,
											"end": 20646,
											"name": "tag",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 20626,
											"end": 20646,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20621,
											"end": 20646,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20621,
											"end": 20646,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20665,
											"end": 20666,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20655,
											"end": 20690,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 20655,
											"end": 20690,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20670,
											"end": 20688,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 20670,
											"end": 20688,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 20670,
											"end": 20688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20670,
											"end": 20688,
											"name": "tag",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 20670,
											"end": 20688,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20655,
											"end": 20690,
											"name": "tag",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 20655,
											"end": 20690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20712,
											"end": 20713,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20709,
											"end": 20710,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20705,
											"end": 20714,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 20700,
											"end": 20714,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20700,
											"end": 20714,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20535,
											"end": 20720,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20535,
											"end": 20720,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20535,
											"end": 20720,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20535,
											"end": 20720,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20535,
											"end": 20720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20726,
											"end": 20920,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 20726,
											"end": 20920,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20766,
											"end": 20770,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20786,
											"end": 20806,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 20804,
											"end": 20805,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20786,
											"end": 20806,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 20786,
											"end": 20806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20786,
											"end": 20806,
											"name": "tag",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 20786,
											"end": 20806,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20781,
											"end": 20806,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20781,
											"end": 20806,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20820,
											"end": 20840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 20838,
											"end": 20839,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20820,
											"end": 20840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 20820,
											"end": 20840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20820,
											"end": 20840,
											"name": "tag",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 20820,
											"end": 20840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20815,
											"end": 20840,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20815,
											"end": 20840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20864,
											"end": 20865,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20861,
											"end": 20862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20857,
											"end": 20866,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20849,
											"end": 20866,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20849,
											"end": 20866,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20888,
											"end": 20889,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20882,
											"end": 20886,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20879,
											"end": 20890,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 20876,
											"end": 20913,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 20876,
											"end": 20913,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 20876,
											"end": 20913,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20893,
											"end": 20911,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 20893,
											"end": 20911,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 20893,
											"end": 20911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20893,
											"end": 20911,
											"name": "tag",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 20893,
											"end": 20911,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20876,
											"end": 20913,
											"name": "tag",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 20876,
											"end": 20913,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20726,
											"end": 20920,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20726,
											"end": 20920,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20726,
											"end": 20920,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20726,
											"end": 20920,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20726,
											"end": 20920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20926,
											"end": 21002,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 20926,
											"end": 21002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20962,
											"end": 20969,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20991,
											"end": 20996,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20980,
											"end": 20996,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20980,
											"end": 20996,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20926,
											"end": 21002,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20926,
											"end": 21002,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20926,
											"end": 21002,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20926,
											"end": 21002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21008,
											"end": 21380,
											"name": "tag",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 21008,
											"end": 21380,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21047,
											"end": 21051,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21067,
											"end": 21086,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 21084,
											"end": 21085,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21067,
											"end": 21086,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 21067,
											"end": 21086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21067,
											"end": 21086,
											"name": "tag",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 21067,
											"end": 21086,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21062,
											"end": 21086,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21062,
											"end": 21086,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21100,
											"end": 21119,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 21117,
											"end": 21118,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21100,
											"end": 21119,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 21100,
											"end": 21119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21100,
											"end": 21119,
											"name": "tag",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 21100,
											"end": 21119,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21095,
											"end": 21119,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21095,
											"end": 21119,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21143,
											"end": 21144,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21140,
											"end": 21141,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21136,
											"end": 21145,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 21128,
											"end": 21145,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21128,
											"end": 21145,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21337,
											"end": 21338,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21331,
											"end": 21335,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21327,
											"end": 21339,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 21323,
											"end": 21324,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21320,
											"end": 21321,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 21316,
											"end": 21325,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 21312,
											"end": 21340,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 21295,
											"end": 21296,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21289,
											"end": 21293,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21285,
											"end": 21297,
											"name": "SGT",
											"source": 13
										},
										{
											"begin": 21280,
											"end": 21281,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21277,
											"end": 21278,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 21273,
											"end": 21282,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 21266,
											"end": 21283,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 21262,
											"end": 21298,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 21246,
											"end": 21350,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 21243,
											"end": 21373,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 21243,
											"end": 21373,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "585"
										},
										{
											"begin": 21243,
											"end": 21373,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 21353,
											"end": 21371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 21353,
											"end": 21371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 21353,
											"end": 21371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21353,
											"end": 21371,
											"name": "tag",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 21353,
											"end": 21371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21243,
											"end": 21373,
											"name": "tag",
											"source": 13,
											"value": "585"
										},
										{
											"begin": 21243,
											"end": 21373,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21008,
											"end": 21380,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21008,
											"end": 21380,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21008,
											"end": 21380,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21008,
											"end": 21380,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21008,
											"end": 21380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21386,
											"end": 21614,
											"name": "tag",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 21386,
											"end": 21614,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21421,
											"end": 21424,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21444,
											"end": 21467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "588"
										},
										{
											"begin": 21461,
											"end": 21466,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21444,
											"end": 21467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 21444,
											"end": 21467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21444,
											"end": 21467,
											"name": "tag",
											"source": 13,
											"value": "588"
										},
										{
											"begin": 21444,
											"end": 21467,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21435,
											"end": 21467,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21435,
											"end": 21467,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21489,
											"end": 21555,
											"name": "PUSH",
											"source": 13,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21482,
											"end": 21487,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21479,
											"end": 21556,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 21476,
											"end": 21579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 21476,
											"end": 21579,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 21559,
											"end": 21577,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 21559,
											"end": 21577,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 21559,
											"end": 21577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21559,
											"end": 21577,
											"name": "tag",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 21559,
											"end": 21577,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21476,
											"end": 21579,
											"name": "tag",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 21476,
											"end": 21579,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21602,
											"end": 21607,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21599,
											"end": 21600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21595,
											"end": 21608,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 21588,
											"end": 21608,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21588,
											"end": 21608,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21386,
											"end": 21614,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21386,
											"end": 21614,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21386,
											"end": 21614,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21386,
											"end": 21614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/src/YieldOptimizer.sol",
								"contracts/src/interfaces/IBenqi.sol",
								"contracts/src/interfaces/ITraderJoe.sol",
								"contracts/src/interfaces/IYieldYak.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BASIS_POINTS()": "e1f1c4a7",
							"MIN_DEPOSIT()": "e1e158a5",
							"REBALANCE_THRESHOLD()": "c85b967d",
							"benqiComptroller()": "324be9ef",
							"currentYields()": "8ccbe9f5",
							"emergencyWithdraw()": "db2e21bc",
							"getCurrentYields()": "22a16952",
							"getRebalanceRecommendation(address)": "2ab8895f",
							"getUserPortfolio(address)": "1edb27e9",
							"optimizeYield(uint8)": "00349f3a",
							"owner()": "8da5cb5b",
							"rebalance()": "7d7c2a1c",
							"renounceOwnership()": "715018a6",
							"traderJoeRouter()": "2faff427",
							"transferOwnership(address)": "f2fde38b",
							"updateProtocolAddress(string,address)": "d076e8b4",
							"updateYields(uint256,uint256,uint256)": "99e32287",
							"userAllocations(address)": "4c0c87ff",
							"userProfiles(address)": "332d56d7",
							"yieldYakFarm()": "071a8ef5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"protocol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ProtocolAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalValue\",\"type\":\"uint256\"}],\"name\":\"Rebalanced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"riskScore\",\"type\":\"uint8\"}],\"name\":\"YieldOptimized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"benqiAPY\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"traderJoeAPY\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"yieldYakAPY\",\"type\":\"uint256\"}],\"name\":\"YieldsUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASIS_POINTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_DEPOSIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REBALANCE_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"benqiComptroller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentYields\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"benqiAPY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"traderJoeAPY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yieldYakAPY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdated\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentYields\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"benqiAPY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"traderJoeAPY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yieldYakAPY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdated\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getRebalanceRecommendation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"shouldRebalance\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"newBenqiAllocation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newTraderJoeAllocation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newYieldYakAllocation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserPortfolio\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"riskScore\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalDeposited\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRebalance\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"autoRebalance\",\"type\":\"bool\"}],\"internalType\":\"struct YieldOptimizer.UserProfile\",\"name\":\"profile\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"benqiAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"traderJoeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yieldYakAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct YieldOptimizer.ProtocolAllocation\",\"name\":\"allocation\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"estimatedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_riskScore\",\"type\":\"uint8\"}],\"name\":\"optimizeYield\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"traderJoeRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"protocol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateProtocolAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_benqiAPY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_traderJoeAPY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_yieldYakAPY\",\"type\":\"uint256\"}],\"name\":\"updateYields\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userAllocations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"benqiAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"traderJoeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yieldYakAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userProfiles\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"riskScore\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalDeposited\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRebalance\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"autoRebalance\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yieldYakFarm\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"emergencyWithdraw()\":{\"details\":\"Emergency withdrawal function\"},\"getCurrentYields()\":{\"details\":\"Get current yields from all protocols\"},\"getRebalanceRecommendation(address)\":{\"details\":\"Calculate recommended rebalancing for a user\"},\"getUserPortfolio(address)\":{\"details\":\"Get user's complete portfolio information\"},\"optimizeYield(uint8)\":{\"details\":\"Main function to optimize yield based on user's risk profile\",\"params\":{\"_riskScore\":\"Risk score from 0 (conservative) to 100 (aggressive)\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"rebalance()\":{\"details\":\"Execute rebalancing for a user\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/YieldOptimizer.sol\":\"YieldOptimizer\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/src/YieldOptimizer.sol\":{\"keccak256\":\"0xa12d0513453d2a4905ed9b13655367731746dda267cc062dbdc732d1cc0cd46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c832138c7714e7fd216a108839dc6f7d0487bead690064a31d73829e8e1ac2f\",\"dweb:/ipfs/Qmbff9VSjsCMMHN4vwzBtt5NsiBKL65zQjWvutAC8uHHM1\"]},\"contracts/src/interfaces/IBenqi.sol\":{\"keccak256\":\"0xf377cd7bb36eb34c119236126d548b93b94af0752f82b2fff6b7857f883f5f07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2b3b6eb4f49f2252ce3af5ba2a26728e823259a6a430fe0cba9f4217170a3bc\",\"dweb:/ipfs/QmUnX5RRDkm4nVh4ZLue7Pr27jYaXYKScCpbtLa5S4Ghkp\"]},\"contracts/src/interfaces/ITraderJoe.sol\":{\"keccak256\":\"0x3aff5087ea19bec74716ed4139652dec0afadccf4cec52351cd0753a317dfe9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5689482faad39e778d59a30d6c743e1ddae41843c34000c5b9e512f1fe40959\",\"dweb:/ipfs/QmTyga1VuCFsPQCDfCXsXr9aK8AHsCYe9vBqjcmStYEQmV\"]},\"contracts/src/interfaces/IYieldYak.sol\":{\"keccak256\":\"0x5646ff2a537c28ea7bfd7c081f64a27b1e1d1c6804272f6864abcc5c6670945f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a526f8ec6e3b4ee6cd8651b9d90e523d3810622c32cbcb12532818d38c81f06\",\"dweb:/ipfs/QmXpKBu5JBdXxjeqpKUjaZsWrxjnQupwXhgbf4mmQ3vERS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/src/YieldOptimizer.sol:YieldOptimizer",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 820,
								"contract": "contracts/src/YieldOptimizer.sol:YieldOptimizer",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 937,
								"contract": "contracts/src/YieldOptimizer.sol:YieldOptimizer",
								"label": "userProfiles",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(UserProfile)916_storage)"
							},
							{
								"astId": 942,
								"contract": "contracts/src/YieldOptimizer.sol:YieldOptimizer",
								"label": "userAllocations",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_struct(ProtocolAllocation)923_storage)"
							},
							{
								"astId": 945,
								"contract": "contracts/src/YieldOptimizer.sol:YieldOptimizer",
								"label": "currentYields",
								"offset": 0,
								"slot": "4",
								"type": "t_struct(YieldData)932_storage"
							},
							{
								"astId": 947,
								"contract": "contracts/src/YieldOptimizer.sol:YieldOptimizer",
								"label": "traderJoeRouter",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 949,
								"contract": "contracts/src/YieldOptimizer.sol:YieldOptimizer",
								"label": "benqiComptroller",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 951,
								"contract": "contracts/src/YieldOptimizer.sol:YieldOptimizer",
								"label": "yieldYakFarm",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(ProtocolAllocation)923_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct YieldOptimizer.ProtocolAllocation)",
								"numberOfBytes": "32",
								"value": "t_struct(ProtocolAllocation)923_storage"
							},
							"t_mapping(t_address,t_struct(UserProfile)916_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct YieldOptimizer.UserProfile)",
								"numberOfBytes": "32",
								"value": "t_struct(UserProfile)916_storage"
							},
							"t_struct(ProtocolAllocation)923_storage": {
								"encoding": "inplace",
								"label": "struct YieldOptimizer.ProtocolAllocation",
								"members": [
									{
										"astId": 918,
										"contract": "contracts/src/YieldOptimizer.sol:YieldOptimizer",
										"label": "benqiAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 920,
										"contract": "contracts/src/YieldOptimizer.sol:YieldOptimizer",
										"label": "traderJoeAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 922,
										"contract": "contracts/src/YieldOptimizer.sol:YieldOptimizer",
										"label": "yieldYakAmount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(UserProfile)916_storage": {
								"encoding": "inplace",
								"label": "struct YieldOptimizer.UserProfile",
								"members": [
									{
										"astId": 909,
										"contract": "contracts/src/YieldOptimizer.sol:YieldOptimizer",
										"label": "riskScore",
										"offset": 0,
										"slot": "0",
										"type": "t_uint8"
									},
									{
										"astId": 911,
										"contract": "contracts/src/YieldOptimizer.sol:YieldOptimizer",
										"label": "totalDeposited",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 913,
										"contract": "contracts/src/YieldOptimizer.sol:YieldOptimizer",
										"label": "lastRebalance",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 915,
										"contract": "contracts/src/YieldOptimizer.sol:YieldOptimizer",
										"label": "autoRebalance",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(YieldData)932_storage": {
								"encoding": "inplace",
								"label": "struct YieldOptimizer.YieldData",
								"members": [
									{
										"astId": 925,
										"contract": "contracts/src/YieldOptimizer.sol:YieldOptimizer",
										"label": "benqiAPY",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 927,
										"contract": "contracts/src/YieldOptimizer.sol:YieldOptimizer",
										"label": "traderJoeAPY",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 929,
										"contract": "contracts/src/YieldOptimizer.sol:YieldOptimizer",
										"label": "yieldYakAPY",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 931,
										"contract": "contracts/src/YieldOptimizer.sol:YieldOptimizer",
										"label": "lastUpdated",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/src/interfaces/IBenqi.sol": {
				"IBenqi": {
					"abi": [
						{
							"inputs": [],
							"name": "accrueInterest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "success",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOfUnderlying",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "borrowRatePerTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "rate",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "exchangeRateCurrent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "rate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "exchangeRateStored",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "rate",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCash",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "cash",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "redeemTokens",
									"type": "uint256"
								}
							],
							"name": "redeem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "success",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "redeemAmount",
									"type": "uint256"
								}
							],
							"name": "redeemUnderlying",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "success",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "supplyRatePerTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "rate",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalReserves",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reserves",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "supply",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for Benqi lending protocol interactions",
						"kind": "dev",
						"methods": {
							"accrueInterest()": {
								"details": "Accrue interest and update rates",
								"returns": {
									"success": "Whether interest accrual was successful"
								}
							},
							"allowance(address,address)": {
								"details": "Get allowance for qiAVAX tokens",
								"params": {
									"owner": "Token owner address",
									"spender": "Spender address"
								},
								"returns": {
									"allowance": "Current allowance amount"
								}
							},
							"approve(address,uint256)": {
								"details": "Approve qiAVAX token spending",
								"params": {
									"amount": "Amount to approve",
									"spender": "Address to approve"
								},
								"returns": {
									"success": "Whether approval was successful"
								}
							},
							"balanceOf(address)": {
								"details": "Get account's current qiAVAX balance",
								"params": {
									"account": "The address to check"
								},
								"returns": {
									"balance": "The qiAVAX token balance"
								}
							},
							"balanceOfUnderlying(address)": {
								"details": "Get account's underlying AVAX balance",
								"params": {
									"account": "The address to check"
								},
								"returns": {
									"balance": "The underlying AVAX balance"
								}
							},
							"borrowRatePerTimestamp()": {
								"details": "Get the current borrow rate per timestamp",
								"returns": {
									"rate": "The current borrow APY in mantissa format"
								}
							},
							"exchangeRateCurrent()": {
								"details": "Get the current exchange rate (may accrue interest)",
								"returns": {
									"rate": "The current exchange rate in mantissa format"
								}
							},
							"exchangeRateStored()": {
								"details": "Get the exchange rate from qiAVAX to underlying AVAX",
								"returns": {
									"rate": "The current exchange rate in mantissa format"
								}
							},
							"getCash()": {
								"details": "Get the total cash (available liquidity)",
								"returns": {
									"cash": "Total available cash"
								}
							},
							"mint()": {
								"details": "Supply AVAX to the protocol and receive qiAVAX tokens"
							},
							"redeem(uint256)": {
								"details": "Redeem qiAVAX tokens for underlying AVAX",
								"params": {
									"redeemTokens": "Amount of qiAVAX tokens to redeem"
								},
								"returns": {
									"success": "Whether the redemption was successful"
								}
							},
							"redeemUnderlying(uint256)": {
								"details": "Redeem qiAVAX tokens for a specific amount of underlying AVAX",
								"params": {
									"redeemAmount": "Amount of underlying AVAX to redeem"
								},
								"returns": {
									"success": "Whether the redemption was successful"
								}
							},
							"supplyRatePerTimestamp()": {
								"details": "Get the current supply rate per timestamp",
								"returns": {
									"rate": "The current supply APY in mantissa format"
								}
							},
							"totalReserves()": {
								"details": "Get the total reserves",
								"returns": {
									"reserves": "Total reserves amount"
								}
							},
							"totalSupply()": {
								"details": "Get the total supply of qiAVAX tokens",
								"returns": {
									"supply": "Total qiAVAX token supply"
								}
							},
							"transfer(address,uint256)": {
								"details": "Transfer qiAVAX tokens",
								"params": {
									"amount": "Amount to transfer",
									"to": "Recipient address"
								},
								"returns": {
									"success": "Whether transfer was successful"
								}
							}
						},
						"title": "IBenqi",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"accrueInterest()": "a6afed95",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balanceOfUnderlying(address)": "3af9e669",
							"borrowRatePerTimestamp()": "cd91801c",
							"exchangeRateCurrent()": "bd6d894d",
							"exchangeRateStored()": "182df0f5",
							"getCash()": "3b1d21a2",
							"mint()": "1249c58b",
							"redeem(uint256)": "db006a75",
							"redeemUnderlying(uint256)": "852a12e3",
							"supplyRatePerTimestamp()": "d3bd2c72",
							"totalReserves()": "8f840ddd",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"accrueInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"success\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOfUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowRatePerTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeRateCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeRateStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"redeemTokens\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"success\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"redeemAmount\",\"type\":\"uint256\"}],\"name\":\"redeemUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"success\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supplyRatePerTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserves\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for Benqi lending protocol interactions\",\"kind\":\"dev\",\"methods\":{\"accrueInterest()\":{\"details\":\"Accrue interest and update rates\",\"returns\":{\"success\":\"Whether interest accrual was successful\"}},\"allowance(address,address)\":{\"details\":\"Get allowance for qiAVAX tokens\",\"params\":{\"owner\":\"Token owner address\",\"spender\":\"Spender address\"},\"returns\":{\"allowance\":\"Current allowance amount\"}},\"approve(address,uint256)\":{\"details\":\"Approve qiAVAX token spending\",\"params\":{\"amount\":\"Amount to approve\",\"spender\":\"Address to approve\"},\"returns\":{\"success\":\"Whether approval was successful\"}},\"balanceOf(address)\":{\"details\":\"Get account's current qiAVAX balance\",\"params\":{\"account\":\"The address to check\"},\"returns\":{\"balance\":\"The qiAVAX token balance\"}},\"balanceOfUnderlying(address)\":{\"details\":\"Get account's underlying AVAX balance\",\"params\":{\"account\":\"The address to check\"},\"returns\":{\"balance\":\"The underlying AVAX balance\"}},\"borrowRatePerTimestamp()\":{\"details\":\"Get the current borrow rate per timestamp\",\"returns\":{\"rate\":\"The current borrow APY in mantissa format\"}},\"exchangeRateCurrent()\":{\"details\":\"Get the current exchange rate (may accrue interest)\",\"returns\":{\"rate\":\"The current exchange rate in mantissa format\"}},\"exchangeRateStored()\":{\"details\":\"Get the exchange rate from qiAVAX to underlying AVAX\",\"returns\":{\"rate\":\"The current exchange rate in mantissa format\"}},\"getCash()\":{\"details\":\"Get the total cash (available liquidity)\",\"returns\":{\"cash\":\"Total available cash\"}},\"mint()\":{\"details\":\"Supply AVAX to the protocol and receive qiAVAX tokens\"},\"redeem(uint256)\":{\"details\":\"Redeem qiAVAX tokens for underlying AVAX\",\"params\":{\"redeemTokens\":\"Amount of qiAVAX tokens to redeem\"},\"returns\":{\"success\":\"Whether the redemption was successful\"}},\"redeemUnderlying(uint256)\":{\"details\":\"Redeem qiAVAX tokens for a specific amount of underlying AVAX\",\"params\":{\"redeemAmount\":\"Amount of underlying AVAX to redeem\"},\"returns\":{\"success\":\"Whether the redemption was successful\"}},\"supplyRatePerTimestamp()\":{\"details\":\"Get the current supply rate per timestamp\",\"returns\":{\"rate\":\"The current supply APY in mantissa format\"}},\"totalReserves()\":{\"details\":\"Get the total reserves\",\"returns\":{\"reserves\":\"Total reserves amount\"}},\"totalSupply()\":{\"details\":\"Get the total supply of qiAVAX tokens\",\"returns\":{\"supply\":\"Total qiAVAX token supply\"}},\"transfer(address,uint256)\":{\"details\":\"Transfer qiAVAX tokens\",\"params\":{\"amount\":\"Amount to transfer\",\"to\":\"Recipient address\"},\"returns\":{\"success\":\"Whether transfer was successful\"}}},\"title\":\"IBenqi\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"mint()\":{\"notice\":\"Payable function that accepts AVAX deposits\"}},\"notice\":\"This interface covers the main Benqi functions needed for yield optimization\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/interfaces/IBenqi.sol\":\"IBenqi\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/src/interfaces/IBenqi.sol\":{\"keccak256\":\"0xf377cd7bb36eb34c119236126d548b93b94af0752f82b2fff6b7857f883f5f07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2b3b6eb4f49f2252ce3af5ba2a26728e823259a6a430fe0cba9f4217170a3bc\",\"dweb:/ipfs/QmUnX5RRDkm4nVh4ZLue7Pr27jYaXYKScCpbtLa5S4Ghkp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"mint()": {
								"notice": "Payable function that accepts AVAX deposits"
							}
						},
						"notice": "This interface covers the main Benqi functions needed for yield optimization",
						"version": 1
					}
				},
				"IBenqiComptroller": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "qiTokens",
									"type": "address[]"
								}
							],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "qiTokens",
									"type": "address[]"
								}
							],
							"name": "enterMarkets",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "results",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "qiToken",
									"type": "address"
								}
							],
							"name": "exitMarket",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "success",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getAccountLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "error",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "shortfall",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "qiToken",
									"type": "address"
								}
							],
							"name": "markets",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isListed",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "collateralFactorMantissa",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								}
							],
							"name": "rewardAccrued",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "rewards",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "qiToken",
									"type": "address"
								}
							],
							"name": "rewardSpeeds",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "supplySpeed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "borrowSpeed",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for Benqi Comptroller contract",
						"kind": "dev",
						"methods": {
							"claimReward(address,address[])": {
								"details": "Claim accrued QI rewards",
								"params": {
									"holder": "Address to claim rewards for",
									"qiTokens": "Array of qiTokens to claim from"
								}
							},
							"enterMarkets(address[])": {
								"details": "Enter markets to enable borrowing",
								"params": {
									"qiTokens": "Array of qiToken addresses to enter"
								},
								"returns": {
									"results": "Array of error codes (0 = success)"
								}
							},
							"exitMarket(address)": {
								"details": "Exit a market to disable borrowing",
								"params": {
									"qiToken": "The qiToken address to exit"
								},
								"returns": {
									"success": "Whether exit was successful (0 = success)"
								}
							},
							"getAccountLiquidity(address)": {
								"details": "Get account's liquidity information",
								"params": {
									"account": "Account address to check"
								},
								"returns": {
									"error": "Error code (0 = success)",
									"liquidity": "Account liquidity in USD",
									"shortfall": "Account shortfall in USD"
								}
							},
							"markets(address)": {
								"details": "Check if an address is a listed market",
								"params": {
									"qiToken": "The qiToken address to check"
								},
								"returns": {
									"collateralFactorMantissa": "The collateral factor",
									"isListed": "Whether the market is listed"
								}
							},
							"rewardAccrued(address)": {
								"details": "Get accrued QI rewards for an account",
								"params": {
									"holder": "Address to check rewards for"
								},
								"returns": {
									"rewards": "Accrued reward amount"
								}
							},
							"rewardSpeeds(address)": {
								"details": "Get the current QI reward speeds",
								"params": {
									"qiToken": "The qiToken address"
								},
								"returns": {
									"borrowSpeed": "QI borrow reward speed",
									"supplySpeed": "QI supply reward speed"
								}
							}
						},
						"title": "IBenqiComptroller",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claimReward(address,address[])": "3685ffe7",
							"enterMarkets(address[])": "c2998238",
							"exitMarket(address)": "ede4edd0",
							"getAccountLiquidity(address)": "5ec88c79",
							"markets(address)": "8e8f294b",
							"rewardAccrued(address)": "007e3c46",
							"rewardSpeeds(address)": "ff278d2d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"qiTokens\",\"type\":\"address[]\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"qiTokens\",\"type\":\"address[]\"}],\"name\":\"enterMarkets\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"results\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"qiToken\",\"type\":\"address\"}],\"name\":\"exitMarket\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"success\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"error\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortfall\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"qiToken\",\"type\":\"address\"}],\"name\":\"markets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isListed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collateralFactorMantissa\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"rewardAccrued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"qiToken\",\"type\":\"address\"}],\"name\":\"rewardSpeeds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supplySpeed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowSpeed\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for Benqi Comptroller contract\",\"kind\":\"dev\",\"methods\":{\"claimReward(address,address[])\":{\"details\":\"Claim accrued QI rewards\",\"params\":{\"holder\":\"Address to claim rewards for\",\"qiTokens\":\"Array of qiTokens to claim from\"}},\"enterMarkets(address[])\":{\"details\":\"Enter markets to enable borrowing\",\"params\":{\"qiTokens\":\"Array of qiToken addresses to enter\"},\"returns\":{\"results\":\"Array of error codes (0 = success)\"}},\"exitMarket(address)\":{\"details\":\"Exit a market to disable borrowing\",\"params\":{\"qiToken\":\"The qiToken address to exit\"},\"returns\":{\"success\":\"Whether exit was successful (0 = success)\"}},\"getAccountLiquidity(address)\":{\"details\":\"Get account's liquidity information\",\"params\":{\"account\":\"Account address to check\"},\"returns\":{\"error\":\"Error code (0 = success)\",\"liquidity\":\"Account liquidity in USD\",\"shortfall\":\"Account shortfall in USD\"}},\"markets(address)\":{\"details\":\"Check if an address is a listed market\",\"params\":{\"qiToken\":\"The qiToken address to check\"},\"returns\":{\"collateralFactorMantissa\":\"The collateral factor\",\"isListed\":\"Whether the market is listed\"}},\"rewardAccrued(address)\":{\"details\":\"Get accrued QI rewards for an account\",\"params\":{\"holder\":\"Address to check rewards for\"},\"returns\":{\"rewards\":\"Accrued reward amount\"}},\"rewardSpeeds(address)\":{\"details\":\"Get the current QI reward speeds\",\"params\":{\"qiToken\":\"The qiToken address\"},\"returns\":{\"borrowSpeed\":\"QI borrow reward speed\",\"supplySpeed\":\"QI supply reward speed\"}}},\"title\":\"IBenqiComptroller\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/interfaces/IBenqi.sol\":\"IBenqiComptroller\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/src/interfaces/IBenqi.sol\":{\"keccak256\":\"0xf377cd7bb36eb34c119236126d548b93b94af0752f82b2fff6b7857f883f5f07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2b3b6eb4f49f2252ce3af5ba2a26728e823259a6a430fe0cba9f4217170a3bc\",\"dweb:/ipfs/QmUnX5RRDkm4nVh4ZLue7Pr27jYaXYKScCpbtLa5S4Ghkp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBenqiLens": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "qiToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getAccountSnapshot",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "error",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "borrowBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "exchangeRateMantissa",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "qiToken",
									"type": "address"
								}
							],
							"name": "qiTokenMetadata",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "qiToken",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "exchangeRateCurrent",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "supplyRatePerTimestamp",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "borrowRatePerTimestamp",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "reserveFactorMantissa",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalBorrows",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalReserves",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalSupply",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalCash",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "isListed",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "collateralFactorMantissa",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "underlyingAssetAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "qiTokenDecimals",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "underlyingDecimals",
											"type": "uint256"
										}
									],
									"internalType": "struct IBenqiLens.QiTokenMetadata",
									"name": "metadata",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "qiTokens",
									"type": "address[]"
								}
							],
							"name": "qiTokenMetadataAll",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "qiToken",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "exchangeRateCurrent",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "supplyRatePerTimestamp",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "borrowRatePerTimestamp",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "reserveFactorMantissa",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalBorrows",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalReserves",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalSupply",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalCash",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "isListed",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "collateralFactorMantissa",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "underlyingAssetAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "qiTokenDecimals",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "underlyingDecimals",
											"type": "uint256"
										}
									],
									"internalType": "struct IBenqiLens.QiTokenMetadata[]",
									"name": "metadata",
									"type": "tuple[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for Benqi Lens contract (for reading protocol data)",
						"kind": "dev",
						"methods": {
							"getAccountSnapshot(address,address)": {
								"details": "Get account snapshot for a qiToken",
								"params": {
									"account": "The account address",
									"qiToken": "The qiToken address"
								},
								"returns": {
									"balance": "qiToken balance",
									"borrowBalance": "Borrow balance",
									"error": "Error code",
									"exchangeRateMantissa": "Exchange rate"
								}
							},
							"qiTokenMetadata(address)": {
								"details": "Get metadata for a qiToken",
								"params": {
									"qiToken": "The qiToken address"
								},
								"returns": {
									"metadata": "Complete metadata for the qiToken"
								}
							},
							"qiTokenMetadataAll(address[])": {
								"details": "Get metadata for all qiTokens",
								"params": {
									"qiTokens": "Array of qiToken addresses"
								},
								"returns": {
									"metadata": "Array of metadata for each qiToken"
								}
							}
						},
						"title": "IBenqiLens",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAccountSnapshot(address,address)": "32221cf6",
							"qiTokenMetadata(address)": "b04a42c6",
							"qiTokenMetadataAll(address[])": "d900bd35"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"qiToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"error\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeRateMantissa\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"qiToken\",\"type\":\"address\"}],\"name\":\"qiTokenMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"qiToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exchangeRateCurrent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRatePerTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRatePerTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveFactorMantissa\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrows\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalCash\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isListed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collateralFactorMantissa\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"underlyingAssetAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"qiTokenDecimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingDecimals\",\"type\":\"uint256\"}],\"internalType\":\"struct IBenqiLens.QiTokenMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"qiTokens\",\"type\":\"address[]\"}],\"name\":\"qiTokenMetadataAll\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"qiToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"exchangeRateCurrent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRatePerTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRatePerTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveFactorMantissa\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrows\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalCash\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isListed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collateralFactorMantissa\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"underlyingAssetAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"qiTokenDecimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingDecimals\",\"type\":\"uint256\"}],\"internalType\":\"struct IBenqiLens.QiTokenMetadata[]\",\"name\":\"metadata\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for Benqi Lens contract (for reading protocol data)\",\"kind\":\"dev\",\"methods\":{\"getAccountSnapshot(address,address)\":{\"details\":\"Get account snapshot for a qiToken\",\"params\":{\"account\":\"The account address\",\"qiToken\":\"The qiToken address\"},\"returns\":{\"balance\":\"qiToken balance\",\"borrowBalance\":\"Borrow balance\",\"error\":\"Error code\",\"exchangeRateMantissa\":\"Exchange rate\"}},\"qiTokenMetadata(address)\":{\"details\":\"Get metadata for a qiToken\",\"params\":{\"qiToken\":\"The qiToken address\"},\"returns\":{\"metadata\":\"Complete metadata for the qiToken\"}},\"qiTokenMetadataAll(address[])\":{\"details\":\"Get metadata for all qiTokens\",\"params\":{\"qiTokens\":\"Array of qiToken addresses\"},\"returns\":{\"metadata\":\"Array of metadata for each qiToken\"}}},\"title\":\"IBenqiLens\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/interfaces/IBenqi.sol\":\"IBenqiLens\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/src/interfaces/IBenqi.sol\":{\"keccak256\":\"0xf377cd7bb36eb34c119236126d548b93b94af0752f82b2fff6b7857f883f5f07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2b3b6eb4f49f2252ce3af5ba2a26728e823259a6a430fe0cba9f4217170a3bc\",\"dweb:/ipfs/QmUnX5RRDkm4nVh4ZLue7Pr27jYaXYKScCpbtLa5S4Ghkp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/src/interfaces/ITraderJoe.sol": {
				"ITraderJoe": {
					"abi": [
						{
							"inputs": [],
							"name": "WAVAX",
							"outputs": [
								{
									"internalType": "address",
									"name": "WAVAX",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAVAXMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityAVAX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAVAX",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "factory",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"name": "getPoolAPY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "apy",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAVAXMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityAVAX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAVAX",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactAVAXForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForAVAX",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for TraderJoe DEX interactions",
						"kind": "dev",
						"methods": {
							"WAVAX()": {
								"details": "Get the WAVAX token address",
								"returns": {
									"WAVAX": "The wrapped AVAX token address"
								}
							},
							"addLiquidityAVAX(address,uint256,uint256,uint256,address,uint256)": {
								"details": "Add liquidity to AVAX/Token pair",
								"params": {
									"amountAVAXMin": "Minimum amount of AVAX (slippage protection)",
									"amountTokenDesired": "Amount of tokens to add as liquidity",
									"amountTokenMin": "Minimum amount of tokens (slippage protection)",
									"deadline": "Transaction deadline timestamp",
									"to": "Address to receive LP tokens",
									"token": "The ERC20 token to pair with AVAX"
								},
								"returns": {
									"amountAVAX": "Actual amount of AVAX added",
									"amountToken": "Actual amount of tokens added",
									"liquidity": "Amount of LP tokens minted"
								}
							},
							"factory()": {
								"details": "Get the factory address",
								"returns": {
									"factory": "The factory contract address"
								}
							},
							"getPoolAPY(address)": {
								"details": "Get current APY for a specific LP pair",
								"params": {
									"pair": "The LP pair address"
								},
								"returns": {
									"apy": "Current APY in basis points (e.g., 800 = 8%)"
								}
							},
							"getReserves(address,address)": {
								"details": "Get reserves for a trading pair",
								"params": {
									"tokenA": "First token in the pair",
									"tokenB": "Second token in the pair"
								},
								"returns": {
									"reserveA": "Reserve amount of tokenA",
									"reserveB": "Reserve amount of tokenB"
								}
							},
							"quote(address,address,uint256,uint256,uint256,uint256)": {
								"details": "Calculate optimal amounts for adding liquidity",
								"params": {
									"amountADesired": "Desired amount of tokenA",
									"amountAMin": "Minimum amount of tokenA",
									"amountBDesired": "Desired amount of tokenB",
									"amountBMin": "Minimum amount of tokenB",
									"tokenA": "First token address",
									"tokenB": "Second token address"
								},
								"returns": {
									"amountA": "Optimal amount of tokenA",
									"amountB": "Optimal amount of tokenB"
								}
							},
							"removeLiquidityAVAX(address,uint256,uint256,uint256,address,uint256)": {
								"details": "Remove liquidity from AVAX/Token pair",
								"params": {
									"amountAVAXMin": "Minimum amount of AVAX to receive",
									"amountTokenMin": "Minimum amount of tokens to receive",
									"deadline": "Transaction deadline timestamp",
									"liquidity": "Amount of LP tokens to burn",
									"to": "Address to receive tokens and AVAX",
									"token": "The ERC20 token paired with AVAX"
								},
								"returns": {
									"amountAVAX": "Amount of AVAX received",
									"amountToken": "Amount of tokens received"
								}
							},
							"swapExactAVAXForTokens(uint256,address[],address,uint256)": {
								"details": "Swap exact AVAX for tokens",
								"params": {
									"amountOutMin": "Minimum amount of tokens to receive",
									"deadline": "Transaction deadline timestamp",
									"path": "Array of token addresses representing the swap path",
									"to": "Address to receive tokens"
								},
								"returns": {
									"amounts": "Array of amounts for each step in the path"
								}
							},
							"swapExactTokensForAVAX(uint256,uint256,address[],address,uint256)": {
								"details": "Swap exact tokens for AVAX",
								"params": {
									"amountIn": "Amount of tokens to swap",
									"amountOutMin": "Minimum amount of AVAX to receive",
									"deadline": "Transaction deadline timestamp",
									"path": "Array of token addresses representing the swap path",
									"to": "Address to receive AVAX"
								},
								"returns": {
									"amounts": "Array of amounts for each step in the path"
								}
							}
						},
						"title": "ITraderJoe",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WAVAX()": "73b295c2",
							"addLiquidityAVAX(address,uint256,uint256,uint256,address,uint256)": "f91b3f72",
							"factory()": "c45a0155",
							"getPoolAPY(address)": "26d768e9",
							"getReserves(address,address)": "d52bb6f4",
							"quote(address,address,uint256,uint256,uint256,uint256)": "c45e628b",
							"removeLiquidityAVAX(address,uint256,uint256,uint256,address,uint256)": "33c6b725",
							"swapExactAVAXForTokens(uint256,address[],address,uint256)": "a2a1623d",
							"swapExactTokensForAVAX(uint256,uint256,address[],address,uint256)": "676528d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WAVAX\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"WAVAX\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAVAXMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityAVAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAVAX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"getPoolAPY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAVAXMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityAVAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAVAX\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactAVAXForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForAVAX\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for TraderJoe DEX interactions\",\"kind\":\"dev\",\"methods\":{\"WAVAX()\":{\"details\":\"Get the WAVAX token address\",\"returns\":{\"WAVAX\":\"The wrapped AVAX token address\"}},\"addLiquidityAVAX(address,uint256,uint256,uint256,address,uint256)\":{\"details\":\"Add liquidity to AVAX/Token pair\",\"params\":{\"amountAVAXMin\":\"Minimum amount of AVAX (slippage protection)\",\"amountTokenDesired\":\"Amount of tokens to add as liquidity\",\"amountTokenMin\":\"Minimum amount of tokens (slippage protection)\",\"deadline\":\"Transaction deadline timestamp\",\"to\":\"Address to receive LP tokens\",\"token\":\"The ERC20 token to pair with AVAX\"},\"returns\":{\"amountAVAX\":\"Actual amount of AVAX added\",\"amountToken\":\"Actual amount of tokens added\",\"liquidity\":\"Amount of LP tokens minted\"}},\"factory()\":{\"details\":\"Get the factory address\",\"returns\":{\"factory\":\"The factory contract address\"}},\"getPoolAPY(address)\":{\"details\":\"Get current APY for a specific LP pair\",\"params\":{\"pair\":\"The LP pair address\"},\"returns\":{\"apy\":\"Current APY in basis points (e.g., 800 = 8%)\"}},\"getReserves(address,address)\":{\"details\":\"Get reserves for a trading pair\",\"params\":{\"tokenA\":\"First token in the pair\",\"tokenB\":\"Second token in the pair\"},\"returns\":{\"reserveA\":\"Reserve amount of tokenA\",\"reserveB\":\"Reserve amount of tokenB\"}},\"quote(address,address,uint256,uint256,uint256,uint256)\":{\"details\":\"Calculate optimal amounts for adding liquidity\",\"params\":{\"amountADesired\":\"Desired amount of tokenA\",\"amountAMin\":\"Minimum amount of tokenA\",\"amountBDesired\":\"Desired amount of tokenB\",\"amountBMin\":\"Minimum amount of tokenB\",\"tokenA\":\"First token address\",\"tokenB\":\"Second token address\"},\"returns\":{\"amountA\":\"Optimal amount of tokenA\",\"amountB\":\"Optimal amount of tokenB\"}},\"removeLiquidityAVAX(address,uint256,uint256,uint256,address,uint256)\":{\"details\":\"Remove liquidity from AVAX/Token pair\",\"params\":{\"amountAVAXMin\":\"Minimum amount of AVAX to receive\",\"amountTokenMin\":\"Minimum amount of tokens to receive\",\"deadline\":\"Transaction deadline timestamp\",\"liquidity\":\"Amount of LP tokens to burn\",\"to\":\"Address to receive tokens and AVAX\",\"token\":\"The ERC20 token paired with AVAX\"},\"returns\":{\"amountAVAX\":\"Amount of AVAX received\",\"amountToken\":\"Amount of tokens received\"}},\"swapExactAVAXForTokens(uint256,address[],address,uint256)\":{\"details\":\"Swap exact AVAX for tokens\",\"params\":{\"amountOutMin\":\"Minimum amount of tokens to receive\",\"deadline\":\"Transaction deadline timestamp\",\"path\":\"Array of token addresses representing the swap path\",\"to\":\"Address to receive tokens\"},\"returns\":{\"amounts\":\"Array of amounts for each step in the path\"}},\"swapExactTokensForAVAX(uint256,uint256,address[],address,uint256)\":{\"details\":\"Swap exact tokens for AVAX\",\"params\":{\"amountIn\":\"Amount of tokens to swap\",\"amountOutMin\":\"Minimum amount of AVAX to receive\",\"deadline\":\"Transaction deadline timestamp\",\"path\":\"Array of token addresses representing the swap path\",\"to\":\"Address to receive AVAX\"},\"returns\":{\"amounts\":\"Array of amounts for each step in the path\"}}},\"title\":\"ITraderJoe\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This interface covers the main TraderJoe router functions needed for our yield optimization\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/interfaces/ITraderJoe.sol\":\"ITraderJoe\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/src/interfaces/ITraderJoe.sol\":{\"keccak256\":\"0x3aff5087ea19bec74716ed4139652dec0afadccf4cec52351cd0753a317dfe9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5689482faad39e778d59a30d6c743e1ddae41843c34000c5b9e512f1fe40959\",\"dweb:/ipfs/QmTyga1VuCFsPQCDfCXsXr9aK8AHsCYe9vBqjcmStYEQmV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This interface covers the main TraderJoe router functions needed for our yield optimization",
						"version": 1
					}
				},
				"ITraderJoeFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for TraderJoe Factory contract",
						"kind": "dev",
						"methods": {
							"createPair(address,address)": {
								"details": "Create a new trading pair",
								"params": {
									"tokenA": "First token address",
									"tokenB": "Second token address"
								},
								"returns": {
									"pair": "The new pair contract address"
								}
							},
							"getPair(address,address)": {
								"details": "Get pair address for two tokens",
								"params": {
									"tokenA": "First token address",
									"tokenB": "Second token address"
								},
								"returns": {
									"pair": "The pair contract address"
								}
							}
						},
						"title": "ITraderJoeFactory",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPair(address,address)": "c9c65396",
							"getPair(address,address)": "e6a43905"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for TraderJoe Factory contract\",\"kind\":\"dev\",\"methods\":{\"createPair(address,address)\":{\"details\":\"Create a new trading pair\",\"params\":{\"tokenA\":\"First token address\",\"tokenB\":\"Second token address\"},\"returns\":{\"pair\":\"The new pair contract address\"}},\"getPair(address,address)\":{\"details\":\"Get pair address for two tokens\",\"params\":{\"tokenA\":\"First token address\",\"tokenB\":\"Second token address\"},\"returns\":{\"pair\":\"The pair contract address\"}}},\"title\":\"ITraderJoeFactory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/interfaces/ITraderJoe.sol\":\"ITraderJoeFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/src/interfaces/ITraderJoe.sol\":{\"keccak256\":\"0x3aff5087ea19bec74716ed4139652dec0afadccf4cec52351cd0753a317dfe9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5689482faad39e778d59a30d6c743e1ddae41843c34000c5b9e512f1fe40959\",\"dweb:/ipfs/QmTyga1VuCFsPQCDfCXsXr9aK8AHsCYe9vBqjcmStYEQmV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ITraderJoePair": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for TraderJoe LP token contract",
						"kind": "dev",
						"methods": {
							"burn(address)": {
								"details": "Burn LP tokens and receive underlying tokens",
								"params": {
									"to": "Address to receive tokens"
								},
								"returns": {
									"amount0": "Amount of token0 received",
									"amount1": "Amount of token1 received"
								}
							},
							"getReserves()": {
								"details": "Get token reserves",
								"returns": {
									"blockTimestampLast": "Timestamp of last update",
									"reserve0": "Reserve of token0",
									"reserve1": "Reserve of token1"
								}
							},
							"mint(address)": {
								"details": "Mint LP tokens by providing liquidity",
								"params": {
									"to": "Address to receive LP tokens"
								},
								"returns": {
									"liquidity": "Amount of LP tokens minted"
								}
							},
							"token0()": {
								"details": "Get token0 address",
								"returns": {
									"token0": "Address of first token in the pair"
								}
							},
							"token1()": {
								"details": "Get token1 address",
								"returns": {
									"token1": "Address of second token in the pair"
								}
							},
							"totalSupply()": {
								"details": "Get total supply of LP tokens",
								"returns": {
									"totalSupply": "Total LP token supply"
								}
							}
						},
						"title": "ITraderJoePair",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(address)": "89afcb44",
							"getReserves()": "0902f1ac",
							"mint(address)": "6a627842",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for TraderJoe LP token contract\",\"kind\":\"dev\",\"methods\":{\"burn(address)\":{\"details\":\"Burn LP tokens and receive underlying tokens\",\"params\":{\"to\":\"Address to receive tokens\"},\"returns\":{\"amount0\":\"Amount of token0 received\",\"amount1\":\"Amount of token1 received\"}},\"getReserves()\":{\"details\":\"Get token reserves\",\"returns\":{\"blockTimestampLast\":\"Timestamp of last update\",\"reserve0\":\"Reserve of token0\",\"reserve1\":\"Reserve of token1\"}},\"mint(address)\":{\"details\":\"Mint LP tokens by providing liquidity\",\"params\":{\"to\":\"Address to receive LP tokens\"},\"returns\":{\"liquidity\":\"Amount of LP tokens minted\"}},\"token0()\":{\"details\":\"Get token0 address\",\"returns\":{\"token0\":\"Address of first token in the pair\"}},\"token1()\":{\"details\":\"Get token1 address\",\"returns\":{\"token1\":\"Address of second token in the pair\"}},\"totalSupply()\":{\"details\":\"Get total supply of LP tokens\",\"returns\":{\"totalSupply\":\"Total LP token supply\"}}},\"title\":\"ITraderJoePair\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/interfaces/ITraderJoe.sol\":\"ITraderJoePair\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/src/interfaces/ITraderJoe.sol\":{\"keccak256\":\"0x3aff5087ea19bec74716ed4139652dec0afadccf4cec52351cd0753a317dfe9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5689482faad39e778d59a30d6c743e1ddae41843c34000c5b9e512f1fe40959\",\"dweb:/ipfs/QmTyga1VuCFsPQCDfCXsXr9aK8AHsCYe9vBqjcmStYEQmV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/src/interfaces/IYieldYak.sol": {
				"IYieldYak": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "available",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "available",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "decimals",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentAPY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "apy",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPricePerFullShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "supply",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalYield",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "yield",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for YieldYak yield farming protocol interactions",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Get allowance for strategy shares",
								"params": {
									"owner": "Share owner address",
									"spender": "Spender address"
								},
								"returns": {
									"allowance": "Current allowance amount"
								}
							},
							"approve(address,uint256)": {
								"details": "Approve share spending",
								"params": {
									"amount": "Amount to approve",
									"spender": "Address to approve"
								},
								"returns": {
									"success": "Whether approval was successful"
								}
							},
							"available()": {
								"details": "Get available funds in the strategy (not invested)",
								"returns": {
									"available": "Available balance"
								}
							},
							"balance()": {
								"details": "Get the strategy's total deposited amount",
								"returns": {
									"balance": "Total deposited balance in underlying tokens"
								}
							},
							"balanceOf(address)": {
								"details": "Get the balance of shares for an account",
								"params": {
									"account": "Account address"
								},
								"returns": {
									"balance": "Share balance"
								}
							},
							"decimals()": {
								"details": "Get strategy decimals",
								"returns": {
									"decimals": "Number of decimals"
								}
							},
							"deposit()": {
								"details": "Deposit AVAX into a yield farming strategy"
							},
							"depositToken(uint256)": {
								"details": "Deposit a specific amount of tokens into the strategy",
								"params": {
									"amount": "Amount of tokens to deposit"
								}
							},
							"getCurrentAPY()": {
								"details": "Get the current APY of the strategy",
								"returns": {
									"apy": "Current APY in basis points"
								}
							},
							"getPricePerFullShare()": {
								"details": "Get the price per full share",
								"returns": {
									"price": "Price per share in underlying token units"
								}
							},
							"harvest()": {
								"details": "Harvest rewards and compound them"
							},
							"name()": {
								"details": "Get the strategy name",
								"returns": {
									"name": "Strategy name"
								}
							},
							"symbol()": {
								"details": "Get the strategy symbol",
								"returns": {
									"symbol": "Strategy symbol"
								}
							},
							"token()": {
								"details": "Get the underlying token address",
								"returns": {
									"token": "Underlying token address"
								}
							},
							"totalSupply()": {
								"details": "Get the total supply of strategy shares",
								"returns": {
									"supply": "Total share supply"
								}
							},
							"totalYield()": {
								"details": "Get the total yield generated by the strategy",
								"returns": {
									"yield": "Total yield in basis points (e.g., 1200 = 12%)"
								}
							},
							"transfer(address,uint256)": {
								"details": "Transfer strategy shares",
								"params": {
									"amount": "Amount to transfer",
									"to": "Recipient address"
								},
								"returns": {
									"success": "Whether transfer was successful"
								}
							},
							"withdraw(uint256)": {
								"details": "Withdraw tokens from the strategy",
								"params": {
									"amount": "Amount of shares to withdraw"
								}
							},
							"withdrawAll()": {
								"details": "Withdraw all tokens from the strategy"
							}
						},
						"title": "IYieldYak",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"available()": "48a0d754",
							"balance()": "b69ef8a8",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"deposit()": "d0e30db0",
							"depositToken(uint256)": "6215be77",
							"getCurrentAPY()": "962ca496",
							"getPricePerFullShare()": "77c7b8fc",
							"harvest()": "4641257d",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"token()": "fc0c546a",
							"totalSupply()": "18160ddd",
							"totalYield()": "01418205",
							"transfer(address,uint256)": "a9059cbb",
							"withdraw(uint256)": "2e1a7d4d",
							"withdrawAll()": "853828b6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"available\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentAPY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPricePerFullShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalYield\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"yield\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for YieldYak yield farming protocol interactions\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Get allowance for strategy shares\",\"params\":{\"owner\":\"Share owner address\",\"spender\":\"Spender address\"},\"returns\":{\"allowance\":\"Current allowance amount\"}},\"approve(address,uint256)\":{\"details\":\"Approve share spending\",\"params\":{\"amount\":\"Amount to approve\",\"spender\":\"Address to approve\"},\"returns\":{\"success\":\"Whether approval was successful\"}},\"available()\":{\"details\":\"Get available funds in the strategy (not invested)\",\"returns\":{\"available\":\"Available balance\"}},\"balance()\":{\"details\":\"Get the strategy's total deposited amount\",\"returns\":{\"balance\":\"Total deposited balance in underlying tokens\"}},\"balanceOf(address)\":{\"details\":\"Get the balance of shares for an account\",\"params\":{\"account\":\"Account address\"},\"returns\":{\"balance\":\"Share balance\"}},\"decimals()\":{\"details\":\"Get strategy decimals\",\"returns\":{\"decimals\":\"Number of decimals\"}},\"deposit()\":{\"details\":\"Deposit AVAX into a yield farming strategy\"},\"depositToken(uint256)\":{\"details\":\"Deposit a specific amount of tokens into the strategy\",\"params\":{\"amount\":\"Amount of tokens to deposit\"}},\"getCurrentAPY()\":{\"details\":\"Get the current APY of the strategy\",\"returns\":{\"apy\":\"Current APY in basis points\"}},\"getPricePerFullShare()\":{\"details\":\"Get the price per full share\",\"returns\":{\"price\":\"Price per share in underlying token units\"}},\"harvest()\":{\"details\":\"Harvest rewards and compound them\"},\"name()\":{\"details\":\"Get the strategy name\",\"returns\":{\"name\":\"Strategy name\"}},\"symbol()\":{\"details\":\"Get the strategy symbol\",\"returns\":{\"symbol\":\"Strategy symbol\"}},\"token()\":{\"details\":\"Get the underlying token address\",\"returns\":{\"token\":\"Underlying token address\"}},\"totalSupply()\":{\"details\":\"Get the total supply of strategy shares\",\"returns\":{\"supply\":\"Total share supply\"}},\"totalYield()\":{\"details\":\"Get the total yield generated by the strategy\",\"returns\":{\"yield\":\"Total yield in basis points (e.g., 1200 = 12%)\"}},\"transfer(address,uint256)\":{\"details\":\"Transfer strategy shares\",\"params\":{\"amount\":\"Amount to transfer\",\"to\":\"Recipient address\"},\"returns\":{\"success\":\"Whether transfer was successful\"}},\"withdraw(uint256)\":{\"details\":\"Withdraw tokens from the strategy\",\"params\":{\"amount\":\"Amount of shares to withdraw\"}},\"withdrawAll()\":{\"details\":\"Withdraw all tokens from the strategy\"}},\"title\":\"IYieldYak\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit()\":{\"notice\":\"Payable function that accepts AVAX deposits\"}},\"notice\":\"This interface covers the main YieldYak functions needed for yield optimization\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/interfaces/IYieldYak.sol\":\"IYieldYak\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/src/interfaces/IYieldYak.sol\":{\"keccak256\":\"0x5646ff2a537c28ea7bfd7c081f64a27b1e1d1c6804272f6864abcc5c6670945f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a526f8ec6e3b4ee6cd8651b9d90e523d3810622c32cbcb12532818d38c81f06\",\"dweb:/ipfs/QmXpKBu5JBdXxjeqpKUjaZsWrxjnQupwXhgbf4mmQ3vERS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deposit()": {
								"notice": "Payable function that accepts AVAX deposits"
							}
						},
						"notice": "This interface covers the main YieldYak functions needed for yield optimization",
						"version": 1
					}
				},
				"IYieldYakFarm": {
					"abi": [
						{
							"inputs": [],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getFarmInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "stakingToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rewardToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "totalStaked",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "active",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "pendingRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "rewards",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "rate",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "rewardToken",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "stakedBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "stakingToken",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalStaked",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for YieldYak Farm contracts (specific farming strategies)",
						"kind": "dev",
						"methods": {
							"claimRewards()": {
								"details": "Claim pending rewards"
							},
							"emergencyWithdraw()": {
								"details": "Emergency withdraw (forfeit rewards)"
							},
							"getFarmInfo()": {
								"details": "Get farm information",
								"returns": {
									"active": "Whether farm is active",
									"rewardRate": "Current reward rate",
									"rewardToken": "Reward token address",
									"stakingToken": "Staking token address",
									"totalStaked": "Total staked amount"
								}
							},
							"pendingRewards(address)": {
								"details": "Get pending reward amount for an account",
								"params": {
									"account": "Account address"
								},
								"returns": {
									"rewards": "Pending reward amount"
								}
							},
							"rewardRate()": {
								"details": "Get reward rate per second",
								"returns": {
									"rate": "Reward rate"
								}
							},
							"rewardToken()": {
								"details": "Get reward token address",
								"returns": {
									"rewardToken": "Reward token address"
								}
							},
							"stake(uint256)": {
								"details": "Stake tokens in the farm",
								"params": {
									"amount": "Amount to stake"
								}
							},
							"stakedBalance(address)": {
								"details": "Get staked balance for an account",
								"params": {
									"account": "Account address"
								},
								"returns": {
									"balance": "Staked balance"
								}
							},
							"stakingToken()": {
								"details": "Get staking token address",
								"returns": {
									"stakingToken": "Staking token address"
								}
							},
							"totalStaked()": {
								"details": "Get total staked amount in the farm",
								"returns": {
									"totalStaked": "Total staked amount"
								}
							},
							"unstake(uint256)": {
								"details": "Unstake tokens from the farm",
								"params": {
									"amount": "Amount to unstake"
								}
							}
						},
						"title": "IYieldYakFarm",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claimRewards()": "372500ab",
							"emergencyWithdraw()": "db2e21bc",
							"getFarmInfo()": "09434f28",
							"pendingRewards(address)": "31d7a262",
							"rewardRate()": "7b0a47ee",
							"rewardToken()": "f7c618c1",
							"stake(uint256)": "a694fc3a",
							"stakedBalance(address)": "60217267",
							"stakingToken()": "72f702f3",
							"totalStaked()": "817b1cd2",
							"unstake(uint256)": "2e17de78"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFarmInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"pendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"stakedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for YieldYak Farm contracts (specific farming strategies)\",\"kind\":\"dev\",\"methods\":{\"claimRewards()\":{\"details\":\"Claim pending rewards\"},\"emergencyWithdraw()\":{\"details\":\"Emergency withdraw (forfeit rewards)\"},\"getFarmInfo()\":{\"details\":\"Get farm information\",\"returns\":{\"active\":\"Whether farm is active\",\"rewardRate\":\"Current reward rate\",\"rewardToken\":\"Reward token address\",\"stakingToken\":\"Staking token address\",\"totalStaked\":\"Total staked amount\"}},\"pendingRewards(address)\":{\"details\":\"Get pending reward amount for an account\",\"params\":{\"account\":\"Account address\"},\"returns\":{\"rewards\":\"Pending reward amount\"}},\"rewardRate()\":{\"details\":\"Get reward rate per second\",\"returns\":{\"rate\":\"Reward rate\"}},\"rewardToken()\":{\"details\":\"Get reward token address\",\"returns\":{\"rewardToken\":\"Reward token address\"}},\"stake(uint256)\":{\"details\":\"Stake tokens in the farm\",\"params\":{\"amount\":\"Amount to stake\"}},\"stakedBalance(address)\":{\"details\":\"Get staked balance for an account\",\"params\":{\"account\":\"Account address\"},\"returns\":{\"balance\":\"Staked balance\"}},\"stakingToken()\":{\"details\":\"Get staking token address\",\"returns\":{\"stakingToken\":\"Staking token address\"}},\"totalStaked()\":{\"details\":\"Get total staked amount in the farm\",\"returns\":{\"totalStaked\":\"Total staked amount\"}},\"unstake(uint256)\":{\"details\":\"Unstake tokens from the farm\",\"params\":{\"amount\":\"Amount to unstake\"}}},\"title\":\"IYieldYakFarm\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/interfaces/IYieldYak.sol\":\"IYieldYakFarm\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/src/interfaces/IYieldYak.sol\":{\"keccak256\":\"0x5646ff2a537c28ea7bfd7c081f64a27b1e1d1c6804272f6864abcc5c6670945f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a526f8ec6e3b4ee6cd8651b9d90e523d3810622c32cbcb12532818d38c81f06\",\"dweb:/ipfs/QmXpKBu5JBdXxjeqpKUjaZsWrxjnQupwXhgbf4mmQ3vERS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IYieldYakRouter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositToBestStrategy",
							"outputs": [
								{
									"internalType": "address",
									"name": "strategyAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllStrategies",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "strategyAddress",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "address",
											"name": "depositToken",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "rewardToken",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "apy",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tvl",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "active",
											"type": "bool"
										}
									],
									"internalType": "struct IYieldYakRouter.Strategy[]",
									"name": "strategies",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getBestStrategy",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "strategyAddress",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "address",
											"name": "depositToken",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "rewardToken",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "apy",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tvl",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "active",
											"type": "bool"
										}
									],
									"internalType": "struct IYieldYakRouter.Strategy",
									"name": "strategy",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategyAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timeHorizon",
									"type": "uint256"
								}
							],
							"name": "getEstimatedReturn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "estimatedReturn",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getStrategiesForToken",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "strategyAddress",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "address",
											"name": "depositToken",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "rewardToken",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "apy",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tvl",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "active",
											"type": "bool"
										}
									],
									"internalType": "struct IYieldYakRouter.Strategy[]",
									"name": "strategies",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for YieldYak Router contract",
						"kind": "dev",
						"methods": {
							"depositToBestStrategy(address,uint256)": {
								"details": "Deposit into the best strategy for a token",
								"params": {
									"amount": "Amount to deposit",
									"token": "Token address"
								},
								"returns": {
									"strategyAddress": "Address of the strategy used"
								}
							},
							"getAllStrategies()": {
								"details": "Get all available strategies",
								"returns": {
									"strategies": "Array of strategy information"
								}
							},
							"getBestStrategy(address)": {
								"details": "Get the best strategy for a token based on APY",
								"params": {
									"token": "Token address"
								},
								"returns": {
									"strategy": "Best strategy information"
								}
							},
							"getEstimatedReturn(address,uint256,uint256)": {
								"details": "Get estimated returns for a deposit",
								"params": {
									"amount": "Deposit amount",
									"strategyAddress": "Strategy to check",
									"timeHorizon": "Time horizon in seconds"
								},
								"returns": {
									"estimatedReturn": "Estimated return amount"
								}
							},
							"getStrategiesForToken(address)": {
								"details": "Get strategies for a specific token",
								"params": {
									"token": "Token address to find strategies for"
								},
								"returns": {
									"strategies": "Array of strategy information for the token"
								}
							}
						},
						"title": "IYieldYakRouter",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"depositToBestStrategy(address,uint256)": "5a19507b",
							"getAllStrategies()": "c3b28864",
							"getBestStrategy(address)": "a9afd13e",
							"getEstimatedReturn(address,uint256,uint256)": "eccda6af",
							"getStrategiesForToken(address)": "267ae830"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositToBestStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"strategyAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllStrategies\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"strategyAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"depositToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tvl\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"internalType\":\"struct IYieldYakRouter.Strategy[]\",\"name\":\"strategies\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getBestStrategy\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"strategyAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"depositToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tvl\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"internalType\":\"struct IYieldYakRouter.Strategy\",\"name\":\"strategy\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategyAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeHorizon\",\"type\":\"uint256\"}],\"name\":\"getEstimatedReturn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"estimatedReturn\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getStrategiesForToken\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"strategyAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"depositToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tvl\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"internalType\":\"struct IYieldYakRouter.Strategy[]\",\"name\":\"strategies\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for YieldYak Router contract\",\"kind\":\"dev\",\"methods\":{\"depositToBestStrategy(address,uint256)\":{\"details\":\"Deposit into the best strategy for a token\",\"params\":{\"amount\":\"Amount to deposit\",\"token\":\"Token address\"},\"returns\":{\"strategyAddress\":\"Address of the strategy used\"}},\"getAllStrategies()\":{\"details\":\"Get all available strategies\",\"returns\":{\"strategies\":\"Array of strategy information\"}},\"getBestStrategy(address)\":{\"details\":\"Get the best strategy for a token based on APY\",\"params\":{\"token\":\"Token address\"},\"returns\":{\"strategy\":\"Best strategy information\"}},\"getEstimatedReturn(address,uint256,uint256)\":{\"details\":\"Get estimated returns for a deposit\",\"params\":{\"amount\":\"Deposit amount\",\"strategyAddress\":\"Strategy to check\",\"timeHorizon\":\"Time horizon in seconds\"},\"returns\":{\"estimatedReturn\":\"Estimated return amount\"}},\"getStrategiesForToken(address)\":{\"details\":\"Get strategies for a specific token\",\"params\":{\"token\":\"Token address to find strategies for\"},\"returns\":{\"strategies\":\"Array of strategy information for the token\"}}},\"title\":\"IYieldYakRouter\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/interfaces/IYieldYak.sol\":\"IYieldYakRouter\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/src/interfaces/IYieldYak.sol\":{\"keccak256\":\"0x5646ff2a537c28ea7bfd7c081f64a27b1e1d1c6804272f6864abcc5c6670945f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a526f8ec6e3b4ee6cd8651b9d90e523d3810622c32cbcb12532818d38c81f06\",\"dweb:/ipfs/QmXpKBu5JBdXxjeqpKUjaZsWrxjnQupwXhgbf4mmQ3vERS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/src/YieldOptimizer.sol:311:9:\n    |\n311 |         uint256 targetTraderJoe,\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 12423,
					"file": "contracts/src/YieldOptimizer.sol",
					"start": 12400
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/src/YieldOptimizer.sol:312:9:\n    |\n312 |         uint256 targetYieldYak,\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 12455,
					"file": "contracts/src/YieldOptimizer.sol",
					"start": 12433
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/src/YieldOptimizer.sol:325:9:\n    |\n325 |         address user,\n    |         ^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 12876,
					"file": "contracts/src/YieldOptimizer.sol",
					"start": 12864
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							809
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 810,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 809,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 809,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								809
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							890
						],
						"IERC20": [
							315
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 890,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 890,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								890,
								315
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							890
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 891,
							"src": "133:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 890,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 316,
							"src": "132:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "140:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 315,
							"linearizedBaseContracts": [
								315
							],
							"name": "IERC20",
							"nameLocation": "215:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 249,
									"name": "Transfer",
									"nameLocation": "397:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "406:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "428:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "448:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:4"
									},
									"src": "391:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 258,
									"name": "Approval",
									"nameLocation": "628:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "637:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "660:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "685:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:4"
									},
									"src": "622:78:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:4"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "822:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:4"
									},
									"scope": 315,
									"src": "776:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "932:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:4"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "972:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:4"
									},
									"scope": 315,
									"src": "913:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1223:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1235:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:4"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1268:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:4"
									},
									"scope": 315,
									"src": "1205:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1568:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1583:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:4"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1623:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:4"
									},
									"scope": 315,
									"src": "1549:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2327:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2344:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:4"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:4"
									},
									"scope": 315,
									"src": "2310:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2713:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2727:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2739:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:4"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2772:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:4"
									},
									"scope": 315,
									"src": "2691:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 316,
							"src": "205:2575:4",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "106:2675:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"SafeERC20": [
							779
						]
					},
					"id": 780,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 780,
							"sourceUnit": 316,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 318,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 780,
							"sourceUnit": 230,
							"src": "179:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 320,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 779,
							"linearizedBaseContracts": [
								779
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:5",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 327,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "823:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:5"
									},
									"src": "792:46:5"
								},
								{
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 336,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "959:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "976:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1002:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:5"
									},
									"src": "920:109:5"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "1291:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 348,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "1321:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 351,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "1343:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "1343:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 353,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "1360:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 354,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 344,
																			"src": "1364:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 355,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 349,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 347,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1301:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:5"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1241:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 339,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 338,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1241:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1241:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1255:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1267:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:5"
									},
									"scope": 779,
									"src": "1219:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "1708:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 374,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "1738:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 377,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "1760:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "1760:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 379,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 366,
																			"src": "1781:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 380,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 368,
																			"src": "1787:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 381,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "1791:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 382,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 375,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 373,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1718:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:5"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1644:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 363,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 362,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1644:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1644:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1658:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1672:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:5"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:5"
									},
									"scope": 779,
									"src": "1618:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "2033:99:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "2074:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 404,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "2096:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "2096:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 406,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 393,
																			"src": "2113:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 407,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 395,
																			"src": "2117:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 408,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 402,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 400,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2050:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 399,
												"id": 411,
												"nodeType": "Return",
												"src": "2043:82:5"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:5",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1968:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 390,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 389,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1968:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1968:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1982:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1994:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:5"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2027:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:5"
									},
									"scope": 779,
									"src": "1943:189:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "2381:109:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 429,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "2422:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 432,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "2444:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "2444:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 434,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 419,
																			"src": "2465:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 435,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 421,
																			"src": "2471:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 436,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "2475:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 437,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 430,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 428,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2398:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 427,
												"id": 440,
												"nodeType": "Return",
												"src": "2391:92:5"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:5",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2302:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 416,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 415,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "2302:6:5"
													},
													"referencedDeclaration": 315,
													"src": "2302:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2316:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2330:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:5"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 779,
									"src": "2273:217:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "3232:139:5",
										"statements": [
											{
												"assignments": [
													454
												],
												"declarations": [
													{
														"constant": false,
														"id": 454,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "3242:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 453,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 463,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 459,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$779",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$779",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3296:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 455,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3265:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 292,
														"src": "3265:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3327:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 466,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3334:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 467,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "3343:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 468,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "3358:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 464,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "3314:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:5"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3177:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 445,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 444,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "3177:6:5"
													},
													"referencedDeclaration": 315,
													"src": "3177:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3208:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:5"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:5"
									},
									"scope": 779,
									"src": "3146:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "4137:370:5",
										"statements": [
											{
												"id": 514,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:5",
												"statements": [
													{
														"assignments": [
															485
														],
														"declarations": [
															{
																"constant": false,
																"id": 485,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 514,
																"src": "4171:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 484,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 494,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 490,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$779",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$779",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 488,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 492,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "4229:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 486,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "4198:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 292,
																"src": "4198:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 495,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "4255:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 496,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "4274:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 505,
														"nodeType": "IfStatement",
														"src": "4251:160:5",
														"trueBody": {
															"id": 504,
															"nodeType": "Block",
															"src": "4293:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 499,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 479,
																				"src": "4351:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 500,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 485,
																				"src": "4360:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 501,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 481,
																				"src": "4378:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 498,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "4318:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 503,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 507,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "4437:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 508,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "4444:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 509,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "4453:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 510,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 481,
																		"src": "4472:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 506,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "4424:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 513,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4070:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 476,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 475,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "4070:6:5"
													},
													"referencedDeclaration": 315,
													"src": "4070:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4084:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4101:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:5"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:5"
									},
									"scope": 779,
									"src": "4039:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "5161:303:5",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "5171:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 527,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 537,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 531,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "5214:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "5214:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 533,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "5230:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 534,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "5239:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 535,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 529,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:5"
											},
											{
												"condition": {
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 539,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "5286:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 540,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "5293:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 538,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "5262:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 561,
												"nodeType": "IfStatement",
												"src": "5257:201:5",
												"trueBody": {
													"id": 560,
													"nodeType": "Block",
													"src": "5308:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 544,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "5342:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 547,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 520,
																					"src": "5364:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$315",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 548,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 302,
																				"src": "5364:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 549,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 522,
																						"src": "5380:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 550,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 551,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 545,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 543,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "5322:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 554,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 556,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "5427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 557,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "5434:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 555,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "5407:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 559,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5106:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 519,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 518,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "5106:6:5"
													},
													"referencedDeclaration": 315,
													"src": "5106:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5120:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5137:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:5"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:5"
									},
									"scope": 779,
									"src": "5084:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "5911:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 576,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "5925:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 590,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 569,
																	"src": "6034:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 591,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "6038:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 592,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "6045:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 588,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "6012:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:5",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 603,
													"nodeType": "IfStatement",
													"src": "6007:117:5",
													"trueBody": {
														"id": 602,
														"nodeType": "Block",
														"src": "6052:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 598,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 567,
																					"src": "6106:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 596,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 595,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "6073:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 601,
																"nodeType": "RevertStatement",
																"src": "6066:47:5"
															}
														]
													}
												},
												"id": 604,
												"nodeType": "IfStatement",
												"src": "5921:203:5",
												"trueBody": {
													"id": 587,
													"nodeType": "Block",
													"src": "5946:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 582,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "5973:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 583,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "5980:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 584,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 571,
																		"src": "5984:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 581,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "5960:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 586,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:5",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5840:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 566,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 565,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:5"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5856:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5883:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 572,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:5"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:5"
									},
									"scope": 779,
									"src": "5808:322:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "6649:239:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 621,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "6663:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 636,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "6786:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 637,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "6792:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 638,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "6796:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 639,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "6803:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 634,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "6760:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:5",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 650,
													"nodeType": "IfStatement",
													"src": "6755:127:5",
													"trueBody": {
														"id": 649,
														"nodeType": "Block",
														"src": "6810:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 645,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "6864:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 643,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 642,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "6831:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 648,
																"nodeType": "RevertStatement",
																"src": "6824:47:5"
															}
														]
													}
												},
												"id": 651,
												"nodeType": "IfStatement",
												"src": "6659:223:5",
												"trueBody": {
													"id": 633,
													"nodeType": "Block",
													"src": "6684:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 627,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "6715:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 628,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "6722:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 629,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 614,
																		"src": "6728:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 630,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "6732:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 626,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "6698:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 632,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:5",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6527:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 609,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 608,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:5"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6551:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6573:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6593:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:5"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:5"
									},
									"scope": 779,
									"src": "6482:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "7655:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 666,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "7669:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 680,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "7777:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 681,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "7781:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 682,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "7788:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 678,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "7756:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:5",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 693,
													"nodeType": "IfStatement",
													"src": "7751:116:5",
													"trueBody": {
														"id": 692,
														"nodeType": "Block",
														"src": "7795:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 688,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 657,
																					"src": "7849:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 686,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 685,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "7816:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 691,
																"nodeType": "RevertStatement",
																"src": "7809:47:5"
															}
														]
													}
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "7665:202:5",
												"trueBody": {
													"id": 677,
													"nodeType": "Block",
													"src": "7690:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 672,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 657,
																		"src": "7717:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 673,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "7724:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 674,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 661,
																		"src": "7728:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 671,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "7704:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 676,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:5",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7584:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 656,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 655,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:5"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7600:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7612:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7627:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 662,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:5"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:5"
									},
									"scope": 779,
									"src": "7553:320:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8440:650:5",
										"statements": [
											{
												"assignments": [
													706
												],
												"declarations": [
													{
														"constant": false,
														"id": 706,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "8450:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 705,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 707,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:5"
											},
											{
												"assignments": [
													709
												],
												"declarations": [
													{
														"constant": false,
														"id": 709,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "8478:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 708,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 710,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:5"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:5",
													"nodeType": "YulBlock",
													"src": "8532:396:5",
													"statements": [
														{
															"nativeSrc": "8546:75:5",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:5"
																		},
																		"nativeSrc": "8566:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:5",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:5"
																		},
																		"nativeSrc": "8583:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:5"
																		},
																		"nativeSrc": "8600:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:5"
																},
																"nativeSrc": "8561:60:5",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:5"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:5",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:5",
																"nodeType": "YulBlock",
																"src": "8682:157:5",
																"statements": [
																	{
																		"nativeSrc": "8700:22:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:5",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:5",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:5"
																			},
																			"nativeSrc": "8711:11:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:5"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:5",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:5"
																					},
																					"nativeSrc": "8762:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:5"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:5",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:5"
																			},
																			"nativeSrc": "8739:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:5"
																		},
																		"nativeSrc": "8739:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:5"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:5"
																					},
																					"nativeSrc": "8808:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:5"
																			},
																			"nativeSrc": "8796:29:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:5"
																		},
																		"nativeSrc": "8796:29:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:5"
																},
																"nativeSrc": "8666:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:5"
															},
															"nativeSrc": "8663:176:5",
															"nodeType": "YulIf",
															"src": "8663:176:5"
														},
														{
															"nativeSrc": "8852:30:5",
															"nodeType": "YulAssignment",
															"src": "8852:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:5"
																},
																"nativeSrc": "8866:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:5"
																}
															]
														},
														{
															"nativeSrc": "8895:23:5",
															"nodeType": "YulAssignment",
															"src": "8895:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:5"
																},
																"nativeSrc": "8910:8:5",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:5",
														"valueSize": 1
													},
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:5",
														"valueSize": 1
													},
													{
														"declaration": 706,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:5",
														"valueSize": 1
													},
													{
														"declaration": 709,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:5",
														"valueSize": 1
													},
													{
														"declaration": 700,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 711,
												"nodeType": "InlineAssembly",
												"src": "8507:421:5"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 712,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "8942:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 723,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8994:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:5",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 717,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 700,
																			"src": "8968:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 715,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 735,
												"nodeType": "IfStatement",
												"src": "8938:146:5",
												"trueBody": {
													"id": 734,
													"nodeType": "Block",
													"src": "9012:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 730,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 700,
																				"src": "9066:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 728,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 727,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "9033:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 733,
															"nodeType": "RevertStatement",
															"src": "9026:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8399:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 699,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 698,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "8399:6:5"
													},
													"referencedDeclaration": 315,
													"src": "8399:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8413:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:5"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:5"
									},
									"scope": 779,
									"src": "8370:720:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "9681:391:5",
										"statements": [
											{
												"assignments": [
													749
												],
												"declarations": [
													{
														"constant": false,
														"id": 749,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9691:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 748,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 750,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:5"
											},
											{
												"assignments": [
													752
												],
												"declarations": [
													{
														"constant": false,
														"id": 752,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9713:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:5"
											},
											{
												"assignments": [
													755
												],
												"declarations": [
													{
														"constant": false,
														"id": 755,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9741:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 754,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 756,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:5"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:5",
													"nodeType": "YulBlock",
													"src": "9795:174:5",
													"statements": [
														{
															"nativeSrc": "9809:71:5",
															"nodeType": "YulAssignment",
															"src": "9809:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:5"
																		},
																		"nativeSrc": "9825:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:5"
																		},
																		"nativeSrc": "9842:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:5"
																		},
																		"nativeSrc": "9859:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:5"
																},
																"nativeSrc": "9820:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:5"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:5"
																}
															]
														},
														{
															"nativeSrc": "9893:30:5",
															"nodeType": "YulAssignment",
															"src": "9893:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:5"
																},
																"nativeSrc": "9907:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:5"
																}
															]
														},
														{
															"nativeSrc": "9936:23:5",
															"nodeType": "YulAssignment",
															"src": "9936:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:5"
																},
																"nativeSrc": "9951:8:5",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 743,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:5",
														"valueSize": 1
													},
													{
														"declaration": 743,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:5",
														"valueSize": 1
													},
													{
														"declaration": 752,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:5",
														"valueSize": 1
													},
													{
														"declaration": 755,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:5",
														"valueSize": 1
													},
													{
														"declaration": 749,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:5",
														"valueSize": 1
													},
													{
														"declaration": 741,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 757,
												"nodeType": "InlineAssembly",
												"src": "9770:199:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 758,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "9985:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 759,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 752,
																		"src": "9997:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 770,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 755,
																		"src": "10048:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:5",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 764,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 741,
																						"src": "10023:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 763,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 762,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 765,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 774,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 747,
												"id": 776,
												"nodeType": "Return",
												"src": "9978:87:5"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9625:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 740,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 739,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "9625:6:5"
													},
													"referencedDeclaration": 315,
													"src": "9625:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9639:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 742,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:5"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9675:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:5"
									},
									"scope": 779,
									"src": "9592:480:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 780,
							"src": "698:9376:5",
							"usedErrors": [
								327,
								336
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							809
						]
					},
					"id": 810,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 781,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 782,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 809,
							"linearizedBaseContracts": [
								809
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 787,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 786,
												"id": 789,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 809,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 796,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 795,
												"id": 798,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 793,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 809,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 804,
												"id": 806,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 809,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 810,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							878
						]
					},
					"id": 879,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 811,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 812,
								"nodeType": "StructuredDocumentation",
								"src": "135:894:7",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 878,
							"linearizedBaseContracts": [
								878
							],
							"name": "ReentrancyGuard",
							"nameLocation": "1048:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 815,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1843:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 878,
									"src": "1818:40:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 813,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1818:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 814,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1857:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 818,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1889:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 878,
									"src": "1864:36:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 816,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1864:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 817,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1899:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 820,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1923:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 878,
									"src": "1907:23:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 819,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1907:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "1937:52:7",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 823,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "2000:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:7"
									},
									"src": "1994:37:7"
								},
								{
									"body": {
										"id": 830,
										"nodeType": "Block",
										"src": "2051:38:7",
										"statements": [
											{
												"expression": {
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 826,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "2061:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 827,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "2071:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2061:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 829,
												"nodeType": "ExpressionStatement",
												"src": "2061:21:7"
											}
										]
									},
									"id": 831,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2048:2:7"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:0:7"
									},
									"scope": 878,
									"src": "2037:52:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 841,
										"nodeType": "Block",
										"src": "2490:79:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 834,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "2500:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2500:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "2500:21:7"
											},
											{
												"id": 837,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 838,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "2542:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2542:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "2542:20:7"
											}
										]
									},
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "2095:366:7",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 842,
									"name": "nonReentrant",
									"nameLocation": "2475:12:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2487:2:7"
									},
									"src": "2466:103:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "2614:268:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 845,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "2702:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 846,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "2713:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2702:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 852,
												"nodeType": "IfStatement",
												"src": "2698:86:7",
												"trueBody": {
													"id": 851,
													"nodeType": "Block",
													"src": "2722:62:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 848,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "2743:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2743:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 850,
															"nodeType": "RevertStatement",
															"src": "2736:37:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 853,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "2858:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 854,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "2868:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2858:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "2858:17:7"
											}
										]
									},
									"id": 858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2584:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:7"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2614:0:7"
									},
									"scope": 878,
									"src": "2575:307:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "2926:170:7",
										"statements": [
											{
												"expression": {
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 861,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "3068:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 862,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "3078:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3068:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 864,
												"nodeType": "ExpressionStatement",
												"src": "3068:21:7"
											}
										]
									},
									"id": 866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2897:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2915:2:7"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2926:0:7"
									},
									"scope": 878,
									"src": "2888:208:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "3339:42:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 872,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "3356:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 873,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "3367:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3356:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 871,
												"id": 875,
												"nodeType": "Return",
												"src": "3349:25:7"
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "3102:168:7",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3284:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3307:2:7"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "3333:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 869,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3333:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:6:7"
									},
									"scope": 878,
									"src": "3275:106:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 879,
							"src": "1030:2353:7",
							"usedErrors": [
								823
							],
							"usedEvents": []
						}
					],
					"src": "109:3275:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							890
						]
					},
					"id": 891,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 880,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 881,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 890,
							"linearizedBaseContracts": [
								890
							],
							"name": "IERC165",
							"nameLocation": "433:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 889,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "819:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 883,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:8"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "862:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 886,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:8"
									},
									"scope": 890,
									"src": "792:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 891,
							"src": "423:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:8"
				},
				"id": 8
			},
			"contracts/src/YieldOptimizer.sol": {
				"ast": {
					"absolutePath": "contracts/src/YieldOptimizer.sol",
					"exportedSymbols": {
						"Context": [
							809
						],
						"IBenqi": [
							2218
						],
						"IBenqiComptroller": [
							2287
						],
						"IBenqiLens": [
							2354
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"ITraderJoe": [
							2486
						],
						"ITraderJoeFactory": [
							2508
						],
						"ITraderJoePair": [
							2556
						],
						"IYieldYak": [
							2682
						],
						"IYieldYakFarm": [
							2824
						],
						"IYieldYakRouter": [
							2748
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							878
						],
						"SafeERC20": [
							779
						],
						"YieldOptimizer": [
							2100
						]
					},
					"id": 2101,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 892,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 893,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2101,
							"sourceUnit": 148,
							"src": "58:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 894,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2101,
							"sourceUnit": 879,
							"src": "111:59:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 895,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2101,
							"sourceUnit": 316,
							"src": "171:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 896,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2101,
							"sourceUnit": 780,
							"src": "228:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/src/interfaces/ITraderJoe.sol",
							"file": "./interfaces/ITraderJoe.sol",
							"id": 897,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2101,
							"sourceUnit": 2557,
							"src": "295:37:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/src/interfaces/IBenqi.sol",
							"file": "./interfaces/IBenqi.sol",
							"id": 898,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2101,
							"sourceUnit": 2355,
							"src": "333:33:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/src/interfaces/IYieldYak.sol",
							"file": "./interfaces/IYieldYak.sol",
							"id": 899,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2101,
							"sourceUnit": 2825,
							"src": "367:36:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 900,
										"name": "Ownable",
										"nameLocations": [
											"432:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "432:7:9"
									},
									"id": 901,
									"nodeType": "InheritanceSpecifier",
									"src": "432:7:9"
								},
								{
									"baseName": {
										"id": 902,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"441:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 878,
										"src": "441:15:9"
									},
									"id": 903,
									"nodeType": "InheritanceSpecifier",
									"src": "441:15:9"
								}
							],
							"canonicalName": "YieldOptimizer",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2100,
							"linearizedBaseContracts": [
								2100,
								878,
								147,
								809
							],
							"name": "YieldOptimizer",
							"nameLocation": "414:14:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 907,
									"libraryName": {
										"id": 904,
										"name": "SafeERC20",
										"nameLocations": [
											"469:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 779,
										"src": "469:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "463:27:9",
									"typeName": {
										"id": 906,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 905,
											"name": "IERC20",
											"nameLocations": [
												"483:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "483:6:9"
										},
										"referencedDeclaration": 315,
										"src": "483:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "YieldOptimizer.UserProfile",
									"id": 916,
									"members": [
										{
											"constant": false,
											"id": 909,
											"mutability": "mutable",
											"name": "riskScore",
											"nameLocation": "531:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 916,
											"src": "525:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 908,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "525:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 911,
											"mutability": "mutable",
											"name": "totalDeposited",
											"nameLocation": "587:14:9",
											"nodeType": "VariableDeclaration",
											"scope": 916,
											"src": "579:22:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 910,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "579:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 913,
											"mutability": "mutable",
											"name": "lastRebalance",
											"nameLocation": "645:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 916,
											"src": "637:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 912,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "637:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 915,
											"mutability": "mutable",
											"name": "autoRebalance",
											"nameLocation": "707:13:9",
											"nodeType": "VariableDeclaration",
											"scope": 916,
											"src": "702:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 914,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "702:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserProfile",
									"nameLocation": "503:11:9",
									"nodeType": "StructDefinition",
									"scope": 2100,
									"src": "496:263:9",
									"visibility": "public"
								},
								{
									"canonicalName": "YieldOptimizer.ProtocolAllocation",
									"id": 923,
									"members": [
										{
											"constant": false,
											"id": 918,
											"mutability": "mutable",
											"name": "benqiAmount",
											"nameLocation": "809:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 923,
											"src": "801:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 917,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "801:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 920,
											"mutability": "mutable",
											"name": "traderJoeAmount",
											"nameLocation": "872:15:9",
											"nodeType": "VariableDeclaration",
											"scope": 923,
											"src": "864:23:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 919,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "864:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 922,
											"mutability": "mutable",
											"name": "yieldYakAmount",
											"nameLocation": "939:14:9",
											"nodeType": "VariableDeclaration",
											"scope": 923,
											"src": "931:22:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 921,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ProtocolAllocation",
									"nameLocation": "772:18:9",
									"nodeType": "StructDefinition",
									"scope": 2100,
									"src": "765:229:9",
									"visibility": "public"
								},
								{
									"canonicalName": "YieldOptimizer.YieldData",
									"id": 932,
									"members": [
										{
											"constant": false,
											"id": 925,
											"mutability": "mutable",
											"name": "benqiAPY",
											"nameLocation": "1035:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 932,
											"src": "1027:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 924,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1027:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 927,
											"mutability": "mutable",
											"name": "traderJoeAPY",
											"nameLocation": "1105:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 932,
											"src": "1097:20:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 926,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1097:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 929,
											"mutability": "mutable",
											"name": "yieldYakAPY",
											"nameLocation": "1179:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 932,
											"src": "1171:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 928,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1171:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 931,
											"mutability": "mutable",
											"name": "lastUpdated",
											"nameLocation": "1252:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 932,
											"src": "1244:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 930,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1244:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "YieldData",
									"nameLocation": "1007:9:9",
									"nodeType": "StructDefinition",
									"scope": 2100,
									"src": "1000:309:9",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "332d56d7",
									"id": 937,
									"mutability": "mutable",
									"name": "userProfiles",
									"nameLocation": "1377:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2100,
									"src": "1338:51:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProfile_$916_storage_$",
										"typeString": "mapping(address => struct YieldOptimizer.UserProfile)"
									},
									"typeName": {
										"id": 936,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 933,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1346:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1338:31:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProfile_$916_storage_$",
											"typeString": "mapping(address => struct YieldOptimizer.UserProfile)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 935,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 934,
												"name": "UserProfile",
												"nameLocations": [
													"1357:11:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 916,
												"src": "1357:11:9"
											},
											"referencedDeclaration": 916,
											"src": "1357:11:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserProfile_$916_storage_ptr",
												"typeString": "struct YieldOptimizer.UserProfile"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4c0c87ff",
									"id": 942,
									"mutability": "mutable",
									"name": "userAllocations",
									"nameLocation": "1441:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 2100,
									"src": "1395:61:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ProtocolAllocation_$923_storage_$",
										"typeString": "mapping(address => struct YieldOptimizer.ProtocolAllocation)"
									},
									"typeName": {
										"id": 941,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 938,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1403:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1395:38:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ProtocolAllocation_$923_storage_$",
											"typeString": "mapping(address => struct YieldOptimizer.ProtocolAllocation)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 940,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 939,
												"name": "ProtocolAllocation",
												"nameLocations": [
													"1414:18:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 923,
												"src": "1414:18:9"
											},
											"referencedDeclaration": 923,
											"src": "1414:18:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
												"typeString": "struct YieldOptimizer.ProtocolAllocation"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8ccbe9f5",
									"id": 945,
									"mutability": "mutable",
									"name": "currentYields",
									"nameLocation": "1479:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 2100,
									"src": "1462:30:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_YieldData_$932_storage",
										"typeString": "struct YieldOptimizer.YieldData"
									},
									"typeName": {
										"id": 944,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 943,
											"name": "YieldData",
											"nameLocations": [
												"1462:9:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 932,
											"src": "1462:9:9"
										},
										"referencedDeclaration": 932,
										"src": "1462:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_YieldData_$932_storage_ptr",
											"typeString": "struct YieldOptimizer.YieldData"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2faff427",
									"id": 947,
									"mutability": "mutable",
									"name": "traderJoeRouter",
									"nameLocation": "1589:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 2100,
									"src": "1574:30:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 946,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1574:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "324be9ef",
									"id": 949,
									"mutability": "mutable",
									"name": "benqiComptroller",
									"nameLocation": "1625:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 2100,
									"src": "1610:31:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 948,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1610:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "071a8ef5",
									"id": 951,
									"mutability": "mutable",
									"name": "yieldYakFarm",
									"nameLocation": "1662:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2100,
									"src": "1647:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 950,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1647:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e1e158a5",
									"id": 954,
									"mutability": "constant",
									"name": "MIN_DEPOSIT",
									"nameLocation": "1726:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 2100,
									"src": "1702:48:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 952,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1702:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e3031",
										"id": 953,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1740:10:9",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										},
										"value": "0.01"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c85b967d",
									"id": 957,
									"mutability": "constant",
									"name": "REBALANCE_THRESHOLD",
									"nameLocation": "1802:19:9",
									"nodeType": "VariableDeclaration",
									"scope": 2100,
									"src": "1778:49:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 955,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1778:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353030",
										"id": 956,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1824:3:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500_by_1",
											"typeString": "int_const 500"
										},
										"value": "500"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e1f1c4a7",
									"id": 960,
									"mutability": "constant",
									"name": "BASIS_POINTS",
									"nameLocation": "1889:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2100,
									"src": "1865:44:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 958,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1865:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 959,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1904:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "0ffa6b713fe8ff42bd695a98451844fdf6abd6dd3999ab520f344f84aff7d2a0",
									"id": 968,
									"name": "YieldOptimized",
									"nameLocation": "1971:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2002:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "1986:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1986:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2016:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "2008:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"indexed": false,
												"mutability": "mutable",
												"name": "riskScore",
												"nameLocation": "2030:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "2024:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 965,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2024:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1985:55:9"
									},
									"src": "1965:76:9"
								},
								{
									"anonymous": false,
									"eventSelector": "1427d1942829759938581ce754fd0f7f116bfb7a4b77f80f0cb32cd62c2138c7",
									"id": 974,
									"name": "Rebalanced",
									"nameLocation": "2052:10:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2079:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "2063:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2063:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalValue",
												"nameLocation": "2093:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "2085:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2085:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2062:42:9"
									},
									"src": "2046:59:9"
								},
								{
									"anonymous": false,
									"eventSelector": "eb5e818d5254a980eae621ccdcf791eb702d2f526caf4d0833b622e27964d549",
									"id": 982,
									"name": "YieldsUpdated",
									"nameLocation": "2116:13:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"indexed": false,
												"mutability": "mutable",
												"name": "benqiAPY",
												"nameLocation": "2138:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "2130:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2130:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"indexed": false,
												"mutability": "mutable",
												"name": "traderJoeAPY",
												"nameLocation": "2156:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "2148:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"indexed": false,
												"mutability": "mutable",
												"name": "yieldYakAPY",
												"nameLocation": "2178:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "2170:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2129:61:9"
									},
									"src": "2110:81:9"
								},
								{
									"anonymous": false,
									"eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
									"id": 988,
									"name": "Withdrawn",
									"nameLocation": "2202:9:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2228:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "2212:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2212:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2242:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "2234:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2234:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2211:38:9"
									},
									"src": "2196:54:9"
								},
								{
									"anonymous": false,
									"eventSelector": "50df56c33b3bd3dac7a2db51a3f7c8bdaabf78a57ff1fab3a72992006a77e69e",
									"id": 994,
									"name": "ProtocolAddressUpdated",
									"nameLocation": "2261:22:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"indexed": false,
												"mutability": "mutable",
												"name": "protocol",
												"nameLocation": "2291:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "2284:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 989,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2284:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "2309:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "2301:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2301:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:37:9"
									},
									"src": "2255:66:9"
								},
								{
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "2361:312:9",
										"statements": [
											{
												"expression": {
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1001,
														"name": "currentYields",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "2452:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_YieldData_$932_storage",
															"typeString": "struct YieldOptimizer.YieldData storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "353030",
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2502:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_500_by_1",
																	"typeString": "int_const 500"
																},
																"value": "500"
															},
															{
																"hexValue": "383030",
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2550:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_800_by_1",
																	"typeString": "int_const 800"
																},
																"value": "800"
															},
															{
																"hexValue": "31323030",
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2595:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1200_by_1",
																	"typeString": "int_const 1200"
																},
																"value": "1200"
															},
															{
																"expression": {
																	"id": 1006,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2640:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2646:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2640:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_500_by_1",
																	"typeString": "int_const 500"
																},
																{
																	"typeIdentifier": "t_rational_800_by_1",
																	"typeString": "int_const 800"
																},
																{
																	"typeIdentifier": "t_rational_1200_by_1",
																	"typeString": "int_const 1200"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1002,
															"name": "YieldData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "2468:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_YieldData_$932_storage_ptr_$",
																"typeString": "type(struct YieldOptimizer.YieldData storage pointer)"
															}
														},
														"id": 1008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2492:8:9",
															"2536:12:9",
															"2582:11:9",
															"2627:11:9"
														],
														"names": [
															"benqiAPY",
															"traderJoeAPY",
															"yieldYakAPY",
															"lastUpdated"
														],
														"nodeType": "FunctionCall",
														"src": "2468:198:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_YieldData_$932_memory_ptr",
															"typeString": "struct YieldOptimizer.YieldData memory"
														}
													},
													"src": "2452:214:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_YieldData_$932_storage",
														"typeString": "struct YieldOptimizer.YieldData storage ref"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "2452:214:9"
											}
										]
									},
									"id": 1012,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 997,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2349:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2353:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2349:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 999,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 996,
												"name": "Ownable",
												"nameLocations": [
													"2341:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2341:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2341:19:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2338:2:9"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2361:0:9"
									},
									"scope": 2100,
									"src": "2327:346:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "2917:513:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1021,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2935:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2939:5:9",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2935:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1023,
																"name": "MIN_DEPOSIT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 954,
																"src": "2948:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2935:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4465706f73697420746f6f20736d616c6c",
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2961:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e47e4d4019fbc3201dd7924d57a3f1daa90e6a7f83fef433220dabdb84cceb65",
																"typeString": "literal_string \"Deposit too small\""
															},
															"value": "Deposit too small"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e47e4d4019fbc3201dd7924d57a3f1daa90e6a7f83fef433220dabdb84cceb65",
																"typeString": "literal_string \"Deposit too small\""
															}
														],
														"id": 1020,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2927:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2927:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "2927:54:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1029,
																"name": "_riskScore",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1015,
																"src": "2999:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3013:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "2999:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207269736b2073636f7265",
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3018:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f3530f04718d4d533ba4472936463d898d6bb1446e605473122cb9219ca1a7a",
																"typeString": "literal_string \"Invalid risk score\""
															},
															"value": "Invalid risk score"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f3530f04718d4d533ba4472936463d898d6bb1446e605473122cb9219ca1a7a",
																"typeString": "literal_string \"Invalid risk score\""
															}
														],
														"id": 1028,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2991:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2991:48:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1034,
												"nodeType": "ExpressionStatement",
												"src": "2991:48:9"
											},
											{
												"assignments": [
													1037
												],
												"declarations": [
													{
														"constant": false,
														"id": 1037,
														"mutability": "mutable",
														"name": "profile",
														"nameLocation": "3070:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1079,
														"src": "3050:27:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserProfile_$916_storage_ptr",
															"typeString": "struct YieldOptimizer.UserProfile"
														},
														"typeName": {
															"id": 1036,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1035,
																"name": "UserProfile",
																"nameLocations": [
																	"3050:11:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 916,
																"src": "3050:11:9"
															},
															"referencedDeclaration": 916,
															"src": "3050:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserProfile_$916_storage_ptr",
																"typeString": "struct YieldOptimizer.UserProfile"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1042,
												"initialValue": {
													"baseExpression": {
														"id": 1038,
														"name": "userProfiles",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "3080:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProfile_$916_storage_$",
															"typeString": "mapping(address => struct YieldOptimizer.UserProfile storage ref)"
														}
													},
													"id": 1041,
													"indexExpression": {
														"expression": {
															"id": 1039,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3093:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1040,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3097:6:9",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3093:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3080:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserProfile_$916_storage",
														"typeString": "struct YieldOptimizer.UserProfile storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3050:54:9"
											},
											{
												"expression": {
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1043,
															"name": "profile",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "3114:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserProfile_$916_storage_ptr",
																"typeString": "struct YieldOptimizer.UserProfile storage pointer"
															}
														},
														"id": 1045,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3122:9:9",
														"memberName": "riskScore",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 909,
														"src": "3114:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1046,
														"name": "_riskScore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1015,
														"src": "3134:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "3114:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1048,
												"nodeType": "ExpressionStatement",
												"src": "3114:30:9"
											},
											{
												"expression": {
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1049,
															"name": "profile",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "3154:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserProfile_$916_storage_ptr",
																"typeString": "struct YieldOptimizer.UserProfile storage pointer"
															}
														},
														"id": 1051,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3162:14:9",
														"memberName": "totalDeposited",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 911,
														"src": "3154:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1052,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3180:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3184:5:9",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "3180:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3154:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "3154:35:9"
											},
											{
												"expression": {
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1056,
															"name": "profile",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "3199:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserProfile_$916_storage_ptr",
																"typeString": "struct YieldOptimizer.UserProfile storage pointer"
															}
														},
														"id": 1058,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3207:13:9",
														"memberName": "lastRebalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 913,
														"src": "3199:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1059,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3223:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3229:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3223:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3199:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "3199:39:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1064,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3316:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3320:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3316:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1066,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3328:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3332:5:9",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "3328:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1068,
															"name": "_riskScore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "3339:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1063,
														"name": "_allocateFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "3301:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint8_$returns$__$",
															"typeString": "function (address,uint256,uint8)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3301:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "3301:49:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1072,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3389:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3393:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3389:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1074,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3401:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3405:5:9",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "3401:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1076,
															"name": "_riskScore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "3412:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1071,
														"name": "YieldOptimized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "3374:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint8_$returns$__$",
															"typeString": "function (address,uint256,uint8)"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3374:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1078,
												"nodeType": "EmitStatement",
												"src": "3369:54:9"
											}
										]
									},
									"documentation": {
										"id": 1013,
										"nodeType": "StructuredDocumentation",
										"src": "2679:162:9",
										"text": " @dev Main function to optimize yield based on user's risk profile\n @param _riskScore Risk score from 0 (conservative) to 100 (aggressive)"
									},
									"functionSelector": "00349f3a",
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1018,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1017,
												"name": "nonReentrant",
												"nameLocations": [
													"2904:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 842,
												"src": "2904:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2904:12:9"
										}
									],
									"name": "optimizeYield",
									"nameLocation": "2855:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "_riskScore",
												"nameLocation": "2875:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "2869:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1014,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2869:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2868:18:9"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2917:0:9"
									},
									"scope": 2100,
									"src": "2846:584:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1238,
										"nodeType": "Block",
										"src": "3786:1626:9",
										"statements": [
											{
												"assignments": [
													1092
												],
												"declarations": [
													{
														"constant": false,
														"id": 1092,
														"mutability": "mutable",
														"name": "allocation",
														"nameLocation": "3823:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1238,
														"src": "3796:37:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
															"typeString": "struct YieldOptimizer.ProtocolAllocation"
														},
														"typeName": {
															"id": 1091,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1090,
																"name": "ProtocolAllocation",
																"nameLocations": [
																	"3796:18:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 923,
																"src": "3796:18:9"
															},
															"referencedDeclaration": 923,
															"src": "3796:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
																"typeString": "struct YieldOptimizer.ProtocolAllocation"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1096,
												"initialValue": {
													"baseExpression": {
														"id": 1093,
														"name": "userAllocations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "3836:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ProtocolAllocation_$923_storage_$",
															"typeString": "mapping(address => struct YieldOptimizer.ProtocolAllocation storage ref)"
														}
													},
													"id": 1095,
													"indexExpression": {
														"id": 1094,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "3852:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3836:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage",
														"typeString": "struct YieldOptimizer.ProtocolAllocation storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3796:61:9"
											},
											{
												"assignments": [
													1098
												],
												"declarations": [
													{
														"constant": false,
														"id": 1098,
														"mutability": "mutable",
														"name": "benqiAllocation",
														"nameLocation": "3884:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 1238,
														"src": "3876:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1097,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3876:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1099,
												"nodeType": "VariableDeclarationStatement",
												"src": "3876:23:9"
											},
											{
												"assignments": [
													1101
												],
												"declarations": [
													{
														"constant": false,
														"id": 1101,
														"mutability": "mutable",
														"name": "traderJoeAllocation",
														"nameLocation": "3917:19:9",
														"nodeType": "VariableDeclaration",
														"scope": 1238,
														"src": "3909:27:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1100,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3909:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1102,
												"nodeType": "VariableDeclarationStatement",
												"src": "3909:27:9"
											},
											{
												"assignments": [
													1104
												],
												"declarations": [
													{
														"constant": false,
														"id": 1104,
														"mutability": "mutable",
														"name": "yieldYakAllocation",
														"nameLocation": "3954:18:9",
														"nodeType": "VariableDeclaration",
														"scope": 1238,
														"src": "3946:26:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1103,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3946:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1105,
												"nodeType": "VariableDeclarationStatement",
												"src": "3946:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1106,
														"name": "riskScore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "3987:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "3333",
														"id": 1107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4000:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_33_by_1",
															"typeString": "int_const 33"
														},
														"value": "33"
													},
													"src": "3987:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1132,
															"name": "riskScore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "4285:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"hexValue": "3636",
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4298:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_66_by_1",
																"typeString": "int_const 66"
															},
															"value": "66"
														},
														"src": "4285:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1190,
														"nodeType": "Block",
														"src": "4576:270:9",
														"statements": [
															{
																"expression": {
																	"id": 1170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1163,
																		"name": "benqiAllocation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1098,
																		"src": "4627:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1166,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1164,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1085,
																						"src": "4646:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"hexValue": "32303030",
																						"id": 1165,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4655:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2000_by_1",
																							"typeString": "int_const 2000"
																						},
																						"value": "2000"
																					},
																					"src": "4646:13:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1167,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4645:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1168,
																			"name": "BASIS_POINTS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 960,
																			"src": "4663:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4645:30:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4627:48:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1171,
																"nodeType": "ExpressionStatement",
																"src": "4627:48:9"
															},
															{
																"expression": {
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1172,
																		"name": "traderJoeAllocation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "4701:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1175,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1173,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1085,
																						"src": "4724:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"hexValue": "33303030",
																						"id": 1174,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4733:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_3000_by_1",
																							"typeString": "int_const 3000"
																						},
																						"value": "3000"
																					},
																					"src": "4724:13:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1176,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4723:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1177,
																			"name": "BASIS_POINTS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 960,
																			"src": "4741:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4723:30:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4701:52:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1180,
																"nodeType": "ExpressionStatement",
																"src": "4701:52:9"
															},
															{
																"expression": {
																	"id": 1188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1181,
																		"name": "yieldYakAllocation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "4775:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1184,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1182,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1085,
																						"src": "4797:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"hexValue": "35303030",
																						"id": 1183,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4806:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_5000_by_1",
																							"typeString": "int_const 5000"
																						},
																						"value": "5000"
																					},
																					"src": "4797:13:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1185,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4796:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1186,
																			"name": "BASIS_POINTS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 960,
																			"src": "4814:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4796:30:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4775:51:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1189,
																"nodeType": "ExpressionStatement",
																"src": "4775:51:9"
															}
														]
													},
													"id": 1191,
													"nodeType": "IfStatement",
													"src": "4281:565:9",
													"trueBody": {
														"id": 1162,
														"nodeType": "Block",
														"src": "4302:268:9",
														"statements": [
															{
																"expression": {
																	"id": 1142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1135,
																		"name": "benqiAllocation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1098,
																		"src": "4351:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1138,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1136,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1085,
																						"src": "4370:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"hexValue": "34303030",
																						"id": 1137,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4379:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4000_by_1",
																							"typeString": "int_const 4000"
																						},
																						"value": "4000"
																					},
																					"src": "4370:13:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1139,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4369:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1140,
																			"name": "BASIS_POINTS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 960,
																			"src": "4387:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4369:30:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4351:48:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1143,
																"nodeType": "ExpressionStatement",
																"src": "4351:48:9"
															},
															{
																"expression": {
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1144,
																		"name": "traderJoeAllocation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "4425:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1147,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1145,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1085,
																						"src": "4448:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"hexValue": "34303030",
																						"id": 1146,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4457:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4000_by_1",
																							"typeString": "int_const 4000"
																						},
																						"value": "4000"
																					},
																					"src": "4448:13:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1148,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4447:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1149,
																			"name": "BASIS_POINTS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 960,
																			"src": "4465:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4447:30:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4425:52:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1152,
																"nodeType": "ExpressionStatement",
																"src": "4425:52:9"
															},
															{
																"expression": {
																	"id": 1160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1153,
																		"name": "yieldYakAllocation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "4499:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1156,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1154,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1085,
																						"src": "4521:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"hexValue": "32303030",
																						"id": 1155,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4530:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2000_by_1",
																							"typeString": "int_const 2000"
																						},
																						"value": "2000"
																					},
																					"src": "4521:13:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1157,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4520:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1158,
																			"name": "BASIS_POINTS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 960,
																			"src": "4538:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4520:30:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4499:51:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1161,
																"nodeType": "ExpressionStatement",
																"src": "4499:51:9"
															}
														]
													}
												},
												"id": 1192,
												"nodeType": "IfStatement",
												"src": "3983:863:9",
												"trueBody": {
													"id": 1131,
													"nodeType": "Block",
													"src": "4004:271:9",
													"statements": [
														{
															"expression": {
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1109,
																	"name": "benqiAllocation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "4057:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1112,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1110,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1085,
																					"src": "4076:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "37303030",
																					"id": 1111,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4085:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_7000_by_1",
																						"typeString": "int_const 7000"
																					},
																					"value": "7000"
																				},
																				"src": "4076:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1113,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4075:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1114,
																		"name": "BASIS_POINTS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 960,
																		"src": "4093:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4075:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4057:48:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1117,
															"nodeType": "ExpressionStatement",
															"src": "4057:48:9"
														},
														{
															"expression": {
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1118,
																	"name": "traderJoeAllocation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1101,
																	"src": "4131:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1121,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1119,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1085,
																					"src": "4154:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "33303030",
																					"id": 1120,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4163:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_3000_by_1",
																						"typeString": "int_const 3000"
																					},
																					"value": "3000"
																				},
																				"src": "4154:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1122,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4153:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1123,
																		"name": "BASIS_POINTS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 960,
																		"src": "4171:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4153:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4131:52:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1126,
															"nodeType": "ExpressionStatement",
															"src": "4131:52:9"
														},
														{
															"expression": {
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1127,
																	"name": "yieldYakAllocation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "4205:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4226:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4205:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1130,
															"nodeType": "ExpressionStatement",
															"src": "4205:22:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1193,
															"name": "allocation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "4901:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
																"typeString": "struct YieldOptimizer.ProtocolAllocation storage pointer"
															}
														},
														"id": 1195,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4912:11:9",
														"memberName": "benqiAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 918,
														"src": "4901:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1196,
														"name": "benqiAllocation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "4927:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4901:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "4901:41:9"
											},
											{
												"expression": {
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1199,
															"name": "allocation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "4952:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
																"typeString": "struct YieldOptimizer.ProtocolAllocation storage pointer"
															}
														},
														"id": 1201,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4963:15:9",
														"memberName": "traderJoeAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 920,
														"src": "4952:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1202,
														"name": "traderJoeAllocation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1101,
														"src": "4982:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4952:49:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1204,
												"nodeType": "ExpressionStatement",
												"src": "4952:49:9"
											},
											{
												"expression": {
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1205,
															"name": "allocation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "5011:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
																"typeString": "struct YieldOptimizer.ProtocolAllocation storage pointer"
															}
														},
														"id": 1207,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5022:14:9",
														"memberName": "yieldYakAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 922,
														"src": "5011:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1208,
														"name": "yieldYakAllocation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "5040:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5011:47:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1210,
												"nodeType": "ExpressionStatement",
												"src": "5011:47:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1211,
														"name": "benqiAllocation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "5125:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5143:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5125:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1219,
												"nodeType": "IfStatement",
												"src": "5121:82:9",
												"trueBody": {
													"id": 1218,
													"nodeType": "Block",
													"src": "5146:57:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1215,
																		"name": "benqiAllocation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1098,
																		"src": "5176:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1214,
																	"name": "_depositToBenqi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1582,
																	"src": "5160:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5160:32:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1217,
															"nodeType": "ExpressionStatement",
															"src": "5160:32:9"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1220,
														"name": "traderJoeAllocation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1101,
														"src": "5216:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1221,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5238:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5216:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1228,
												"nodeType": "IfStatement",
												"src": "5212:94:9",
												"trueBody": {
													"id": 1227,
													"nodeType": "Block",
													"src": "5241:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1224,
																		"name": "traderJoeAllocation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "5275:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1223,
																	"name": "_depositToTraderJoe",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1588,
																	"src": "5255:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5255:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1226,
															"nodeType": "ExpressionStatement",
															"src": "5255:40:9"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1229,
														"name": "yieldYakAllocation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "5319:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5340:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5319:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1237,
												"nodeType": "IfStatement",
												"src": "5315:91:9",
												"trueBody": {
													"id": 1236,
													"nodeType": "Block",
													"src": "5343:63:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1233,
																		"name": "yieldYakAllocation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "5376:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1232,
																	"name": "_depositToYieldYak",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "5357:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5357:38:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1235,
															"nodeType": "ExpressionStatement",
															"src": "5357:38:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "3436:265:9",
										"text": " @dev Internal function to allocate funds based on risk score\n Conservative (0-33): 70% Benqi, 30% TraderJoe\n Balanced (34-66): 40% Benqi, 40% TraderJoe, 20% YieldYak  \n Aggressive (67-100): 20% Benqi, 30% TraderJoe, 50% YieldYak"
									},
									"id": 1239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_allocateFunds",
									"nameLocation": "3715:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3738:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "3730:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3730:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3752:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "3744:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3744:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "riskScore",
												"nameLocation": "3766:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "3760:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1086,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3760:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3729:47:9"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3786:0:9"
									},
									"scope": 2100,
									"src": "3706:1706:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1261,
										"nodeType": "Block",
										"src": "5655:188:9",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 1251,
																"name": "currentYields",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 945,
																"src": "5686:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_YieldData_$932_storage",
																	"typeString": "struct YieldOptimizer.YieldData storage ref"
																}
															},
															"id": 1252,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5700:8:9",
															"memberName": "benqiAPY",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 925,
															"src": "5686:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1253,
																"name": "currentYields",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 945,
																"src": "5722:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_YieldData_$932_storage",
																	"typeString": "struct YieldOptimizer.YieldData storage ref"
																}
															},
															"id": 1254,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5736:12:9",
															"memberName": "traderJoeAPY",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 927,
															"src": "5722:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1255,
																"name": "currentYields",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 945,
																"src": "5762:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_YieldData_$932_storage",
																	"typeString": "struct YieldOptimizer.YieldData storage ref"
																}
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5776:11:9",
															"memberName": "yieldYakAPY",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 929,
															"src": "5762:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1257,
																"name": "currentYields",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 945,
																"src": "5801:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_YieldData_$932_storage",
																	"typeString": "struct YieldOptimizer.YieldData storage ref"
																}
															},
															"id": 1258,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5815:11:9",
															"memberName": "lastUpdated",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 931,
															"src": "5801:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1259,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5672:164:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1250,
												"id": 1260,
												"nodeType": "Return",
												"src": "5665:171:9"
											}
										]
									},
									"documentation": {
										"id": 1240,
										"nodeType": "StructuredDocumentation",
										"src": "5418:61:9",
										"text": " @dev Get current yields from all protocols"
									},
									"functionSelector": "22a16952",
									"id": 1262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentYields",
									"nameLocation": "5493:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5509:2:9"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "benqiAPY",
												"nameLocation": "5552:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "5544:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5544:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "traderJoeAPY",
												"nameLocation": "5578:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "5570:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5570:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "yieldYakAPY",
												"nameLocation": "5608:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "5600:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5600:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "lastUpdated",
												"nameLocation": "5637:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "5629:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5629:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5534:120:9"
									},
									"scope": 2100,
									"src": "5484:359:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1299,
										"nodeType": "Block",
										"src": "6102:274:9",
										"statements": [
											{
												"expression": {
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1276,
														"name": "profile",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1269,
														"src": "6112:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserProfile_$916_memory_ptr",
															"typeString": "struct YieldOptimizer.UserProfile memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1277,
															"name": "userProfiles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "6122:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProfile_$916_storage_$",
																"typeString": "mapping(address => struct YieldOptimizer.UserProfile storage ref)"
															}
														},
														"id": 1279,
														"indexExpression": {
															"id": 1278,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "6135:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6122:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserProfile_$916_storage",
															"typeString": "struct YieldOptimizer.UserProfile storage ref"
														}
													},
													"src": "6112:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserProfile_$916_memory_ptr",
														"typeString": "struct YieldOptimizer.UserProfile memory"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "6112:28:9"
											},
											{
												"expression": {
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1282,
														"name": "allocation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "6150:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ProtocolAllocation_$923_memory_ptr",
															"typeString": "struct YieldOptimizer.ProtocolAllocation memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1283,
															"name": "userAllocations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "6163:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ProtocolAllocation_$923_storage_$",
																"typeString": "mapping(address => struct YieldOptimizer.ProtocolAllocation storage ref)"
															}
														},
														"id": 1285,
														"indexExpression": {
															"id": 1284,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "6179:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6163:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage",
															"typeString": "struct YieldOptimizer.ProtocolAllocation storage ref"
														}
													},
													"src": "6150:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ProtocolAllocation_$923_memory_ptr",
														"typeString": "struct YieldOptimizer.ProtocolAllocation memory"
													}
												},
												"id": 1287,
												"nodeType": "ExpressionStatement",
												"src": "6150:34:9"
											},
											{
												"expression": {
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1288,
														"name": "estimatedValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1274,
														"src": "6273:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1289,
																	"name": "allocation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "6290:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ProtocolAllocation_$923_memory_ptr",
																		"typeString": "struct YieldOptimizer.ProtocolAllocation memory"
																	}
																},
																"id": 1290,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6301:11:9",
																"memberName": "benqiAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 918,
																"src": "6290:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"expression": {
																	"id": 1291,
																	"name": "allocation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "6315:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ProtocolAllocation_$923_memory_ptr",
																		"typeString": "struct YieldOptimizer.ProtocolAllocation memory"
																	}
																},
																"id": 1292,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6326:15:9",
																"memberName": "traderJoeAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 920,
																"src": "6315:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6290:51:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"id": 1294,
																"name": "allocation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1272,
																"src": "6344:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ProtocolAllocation_$923_memory_ptr",
																	"typeString": "struct YieldOptimizer.ProtocolAllocation memory"
																}
															},
															"id": 1295,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6355:14:9",
															"memberName": "yieldYakAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 922,
															"src": "6344:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6290:79:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6273:96:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1298,
												"nodeType": "ExpressionStatement",
												"src": "6273:96:9"
											}
										]
									},
									"documentation": {
										"id": 1263,
										"nodeType": "StructuredDocumentation",
										"src": "5849:65:9",
										"text": " @dev Get user's complete portfolio information"
									},
									"functionSelector": "1edb27e9",
									"id": 1300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserPortfolio",
									"nameLocation": "5928:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5953:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "5945:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5945:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5944:14:9"
									},
									"returnParameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "profile",
												"nameLocation": "6010:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "5991:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserProfile_$916_memory_ptr",
													"typeString": "struct YieldOptimizer.UserProfile"
												},
												"typeName": {
													"id": 1268,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1267,
														"name": "UserProfile",
														"nameLocations": [
															"5991:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 916,
														"src": "5991:11:9"
													},
													"referencedDeclaration": 916,
													"src": "5991:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserProfile_$916_storage_ptr",
														"typeString": "struct YieldOptimizer.UserProfile"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "allocation",
												"nameLocation": "6053:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "6027:36:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ProtocolAllocation_$923_memory_ptr",
													"typeString": "struct YieldOptimizer.ProtocolAllocation"
												},
												"typeName": {
													"id": 1271,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1270,
														"name": "ProtocolAllocation",
														"nameLocations": [
															"6027:18:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 923,
														"src": "6027:18:9"
													},
													"referencedDeclaration": 923,
													"src": "6027:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
														"typeString": "struct YieldOptimizer.ProtocolAllocation"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "estimatedValue",
												"nameLocation": "6081:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "6073:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6073:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5981:120:9"
									},
									"scope": 2100,
									"src": "5919:457:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1372,
										"nodeType": "Block",
										"src": "6679:786:9",
										"statements": [
											{
												"assignments": [
													1316
												],
												"declarations": [
													{
														"constant": false,
														"id": 1316,
														"mutability": "mutable",
														"name": "profile",
														"nameLocation": "6708:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1372,
														"src": "6689:26:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserProfile_$916_memory_ptr",
															"typeString": "struct YieldOptimizer.UserProfile"
														},
														"typeName": {
															"id": 1315,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1314,
																"name": "UserProfile",
																"nameLocations": [
																	"6689:11:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 916,
																"src": "6689:11:9"
															},
															"referencedDeclaration": 916,
															"src": "6689:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserProfile_$916_storage_ptr",
																"typeString": "struct YieldOptimizer.UserProfile"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1320,
												"initialValue": {
													"baseExpression": {
														"id": 1317,
														"name": "userProfiles",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "6718:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProfile_$916_storage_$",
															"typeString": "mapping(address => struct YieldOptimizer.UserProfile storage ref)"
														}
													},
													"id": 1319,
													"indexExpression": {
														"id": 1318,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "6731:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6718:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserProfile_$916_storage",
														"typeString": "struct YieldOptimizer.UserProfile storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6689:47:9"
											},
											{
												"assignments": [
													1323
												],
												"declarations": [
													{
														"constant": false,
														"id": 1323,
														"mutability": "mutable",
														"name": "current",
														"nameLocation": "6772:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1372,
														"src": "6746:33:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ProtocolAllocation_$923_memory_ptr",
															"typeString": "struct YieldOptimizer.ProtocolAllocation"
														},
														"typeName": {
															"id": 1322,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1321,
																"name": "ProtocolAllocation",
																"nameLocations": [
																	"6746:18:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 923,
																"src": "6746:18:9"
															},
															"referencedDeclaration": 923,
															"src": "6746:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
																"typeString": "struct YieldOptimizer.ProtocolAllocation"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1327,
												"initialValue": {
													"baseExpression": {
														"id": 1324,
														"name": "userAllocations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "6782:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ProtocolAllocation_$923_storage_$",
															"typeString": "mapping(address => struct YieldOptimizer.ProtocolAllocation storage ref)"
														}
													},
													"id": 1326,
													"indexExpression": {
														"id": 1325,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "6798:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6782:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage",
														"typeString": "struct YieldOptimizer.ProtocolAllocation storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6746:57:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1328,
															"name": "profile",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "6826:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserProfile_$916_memory_ptr",
																"typeString": "struct YieldOptimizer.UserProfile memory"
															}
														},
														"id": 1329,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6834:14:9",
														"memberName": "totalDeposited",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 911,
														"src": "6826:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1330,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6852:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6826:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1339,
												"nodeType": "IfStatement",
												"src": "6822:81:9",
												"trueBody": {
													"id": 1338,
													"nodeType": "Block",
													"src": "6855:48:9",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6877:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6884:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6887:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 1335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6890:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1336,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6876:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0,int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 1313,
															"id": 1337,
															"nodeType": "Return",
															"src": "6869:23:9"
														}
													]
												}
											},
											{
												"assignments": [
													1341
												],
												"declarations": [
													{
														"constant": false,
														"id": 1341,
														"mutability": "mutable",
														"name": "totalValue",
														"nameLocation": "6984:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1372,
														"src": "6976:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1340,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6976:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1350,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1346,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1342,
																"name": "current",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1323,
																"src": "6997:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ProtocolAllocation_$923_memory_ptr",
																	"typeString": "struct YieldOptimizer.ProtocolAllocation memory"
																}
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7005:11:9",
															"memberName": "benqiAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 918,
															"src": "6997:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"id": 1344,
																"name": "current",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1323,
																"src": "7019:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ProtocolAllocation_$923_memory_ptr",
																	"typeString": "struct YieldOptimizer.ProtocolAllocation memory"
																}
															},
															"id": 1345,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7027:15:9",
															"memberName": "traderJoeAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 920,
															"src": "7019:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6997:45:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"expression": {
															"id": 1347,
															"name": "current",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "7045:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ProtocolAllocation_$923_memory_ptr",
																"typeString": "struct YieldOptimizer.ProtocolAllocation memory"
															}
														},
														"id": 1348,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7053:14:9",
														"memberName": "yieldYakAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 922,
														"src": "7045:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6997:70:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6976:91:9"
											},
											{
												"expression": {
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1351,
																"name": "newBenqiAllocation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1308,
																"src": "7087:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1352,
																"name": "newTraderJoeAllocation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1310,
																"src": "7107:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1353,
																"name": "newYieldYakAllocation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1312,
																"src": "7131:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1354,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "7086:67:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1356,
																"name": "totalValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1341,
																"src": "7197:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1357,
																	"name": "profile",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1316,
																	"src": "7209:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserProfile_$916_memory_ptr",
																		"typeString": "struct YieldOptimizer.UserProfile memory"
																	}
																},
																"id": 1358,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7217:9:9",
																"memberName": "riskScore",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 909,
																"src": "7209:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 1355,
															"name": "_calculateOptimalAllocation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "7169:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
																"typeString": "function (uint256,uint8) pure returns (uint256,uint256,uint256)"
															}
														},
														"id": 1359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7169:58:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256,uint256)"
														}
													},
													"src": "7086:141:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1361,
												"nodeType": "ExpressionStatement",
												"src": "7086:141:9"
											},
											{
												"expression": {
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1362,
														"name": "shouldRebalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1306,
														"src": "7336:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1364,
																"name": "current",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1323,
																"src": "7371:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ProtocolAllocation_$923_memory_ptr",
																	"typeString": "struct YieldOptimizer.ProtocolAllocation memory"
																}
															},
															{
																"id": 1365,
																"name": "newBenqiAllocation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1308,
																"src": "7380:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1366,
																"name": "newTraderJoeAllocation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1310,
																"src": "7400:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1367,
																"name": "newYieldYakAllocation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1312,
																"src": "7424:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1368,
																"name": "totalValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1341,
																"src": "7447:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ProtocolAllocation_$923_memory_ptr",
																	"typeString": "struct YieldOptimizer.ProtocolAllocation memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1363,
															"name": "_shouldRebalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "7354:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_struct$_ProtocolAllocation_$923_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (struct YieldOptimizer.ProtocolAllocation memory,uint256,uint256,uint256,uint256) pure returns (bool)"
															}
														},
														"id": 1369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7354:104:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7336:122:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1371,
												"nodeType": "ExpressionStatement",
												"src": "7336:122:9"
											}
										]
									},
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "6382:68:9",
										"text": " @dev Calculate recommended rebalancing for a user"
									},
									"functionSelector": "2ab8895f",
									"id": 1373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRebalanceRecommendation",
									"nameLocation": "6464:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6499:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "6491:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6491:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6490:14:9"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "shouldRebalance",
												"nameLocation": "6542:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "6537:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1305,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6537:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "newBenqiAllocation",
												"nameLocation": "6575:18:9",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "6567:26:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6567:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "newTraderJoeAllocation",
												"nameLocation": "6611:22:9",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "6603:30:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6603:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "newYieldYakAllocation",
												"nameLocation": "6651:21:9",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "6643:29:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6643:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6527:151:9"
									},
									"scope": 2100,
									"src": "6455:1010:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1448,
										"nodeType": "Block",
										"src": "7573:728:9",
										"statements": [
											{
												"assignments": [
													1381
												],
												"declarations": [
													{
														"constant": false,
														"id": 1381,
														"mutability": "mutable",
														"name": "profile",
														"nameLocation": "7603:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1448,
														"src": "7583:27:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserProfile_$916_storage_ptr",
															"typeString": "struct YieldOptimizer.UserProfile"
														},
														"typeName": {
															"id": 1380,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1379,
																"name": "UserProfile",
																"nameLocations": [
																	"7583:11:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 916,
																"src": "7583:11:9"
															},
															"referencedDeclaration": 916,
															"src": "7583:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserProfile_$916_storage_ptr",
																"typeString": "struct YieldOptimizer.UserProfile"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1386,
												"initialValue": {
													"baseExpression": {
														"id": 1382,
														"name": "userProfiles",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "7613:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProfile_$916_storage_$",
															"typeString": "mapping(address => struct YieldOptimizer.UserProfile storage ref)"
														}
													},
													"id": 1385,
													"indexExpression": {
														"expression": {
															"id": 1383,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7626:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7630:6:9",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7626:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7613:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserProfile_$916_storage",
														"typeString": "struct YieldOptimizer.UserProfile storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7583:54:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1388,
																	"name": "profile",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "7655:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserProfile_$916_storage_ptr",
																		"typeString": "struct YieldOptimizer.UserProfile storage pointer"
																	}
																},
																"id": 1389,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7663:14:9",
																"memberName": "totalDeposited",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 911,
																"src": "7655:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1390,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7680:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7655:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206465706f7369747320746f20726562616c616e6365",
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7683:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9ddaa44d722a3a8812710279db1e7f7e441f48ae85f2dbbc1cbbd2d86fcf715a",
																"typeString": "literal_string \"No deposits to rebalance\""
															},
															"value": "No deposits to rebalance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9ddaa44d722a3a8812710279db1e7f7e441f48ae85f2dbbc1cbbd2d86fcf715a",
																"typeString": "literal_string \"No deposits to rebalance\""
															}
														],
														"id": 1387,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7647:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7647:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1394,
												"nodeType": "ExpressionStatement",
												"src": "7647:63:9"
											},
											{
												"assignments": [
													1397
												],
												"declarations": [
													{
														"constant": false,
														"id": 1397,
														"mutability": "mutable",
														"name": "allocation",
														"nameLocation": "7748:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1448,
														"src": "7721:37:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
															"typeString": "struct YieldOptimizer.ProtocolAllocation"
														},
														"typeName": {
															"id": 1396,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1395,
																"name": "ProtocolAllocation",
																"nameLocations": [
																	"7721:18:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 923,
																"src": "7721:18:9"
															},
															"referencedDeclaration": 923,
															"src": "7721:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
																"typeString": "struct YieldOptimizer.ProtocolAllocation"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1402,
												"initialValue": {
													"baseExpression": {
														"id": 1398,
														"name": "userAllocations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "7761:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ProtocolAllocation_$923_storage_$",
															"typeString": "mapping(address => struct YieldOptimizer.ProtocolAllocation storage ref)"
														}
													},
													"id": 1401,
													"indexExpression": {
														"expression": {
															"id": 1399,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7777:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7781:6:9",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7777:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7761:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage",
														"typeString": "struct YieldOptimizer.ProtocolAllocation storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7721:67:9"
											},
											{
												"assignments": [
													1404
												],
												"declarations": [
													{
														"constant": false,
														"id": 1404,
														"mutability": "mutable",
														"name": "totalValue",
														"nameLocation": "7806:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1448,
														"src": "7798:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1403,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7798:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1413,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1405,
																"name": "allocation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1397,
																"src": "7819:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
																	"typeString": "struct YieldOptimizer.ProtocolAllocation storage pointer"
																}
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7830:11:9",
															"memberName": "benqiAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 918,
															"src": "7819:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"id": 1407,
																"name": "allocation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1397,
																"src": "7844:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
																	"typeString": "struct YieldOptimizer.ProtocolAllocation storage pointer"
																}
															},
															"id": 1408,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7855:15:9",
															"memberName": "traderJoeAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 920,
															"src": "7844:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7819:51:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"expression": {
															"id": 1410,
															"name": "allocation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "7873:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
																"typeString": "struct YieldOptimizer.ProtocolAllocation storage pointer"
															}
														},
														"id": 1411,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7884:14:9",
														"memberName": "yieldYakAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 922,
														"src": "7873:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7819:79:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7798:100:9"
											},
											{
												"assignments": [
													1415,
													1417,
													1419
												],
												"declarations": [
													{
														"constant": false,
														"id": 1415,
														"mutability": "mutable",
														"name": "newBenqi",
														"nameLocation": "7918:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1448,
														"src": "7910:16:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1414,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7910:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1417,
														"mutability": "mutable",
														"name": "newTraderJoe",
														"nameLocation": "7936:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1448,
														"src": "7928:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1416,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7928:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1419,
														"mutability": "mutable",
														"name": "newYieldYak",
														"nameLocation": "7958:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1448,
														"src": "7950:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1418,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7950:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1425,
												"initialValue": {
													"arguments": [
														{
															"id": 1421,
															"name": "totalValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "8014:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1422,
																"name": "profile",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "8026:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserProfile_$916_storage_ptr",
																	"typeString": "struct YieldOptimizer.UserProfile storage pointer"
																}
															},
															"id": 1423,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8034:9:9",
															"memberName": "riskScore",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 909,
															"src": "8026:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1420,
														"name": "_calculateOptimalAllocation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1770,
														"src": "7986:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256,uint8) pure returns (uint256,uint256,uint256)"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7986:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7909:135:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1427,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8135:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8139:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8135:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1429,
															"name": "allocation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "8147:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
																"typeString": "struct YieldOptimizer.ProtocolAllocation storage pointer"
															}
														},
														{
															"id": 1430,
															"name": "newBenqi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "8159:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1431,
															"name": "newTraderJoe",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "8169:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1432,
															"name": "newYieldYak",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "8183:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
																"typeString": "struct YieldOptimizer.ProtocolAllocation storage pointer"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1426,
														"name": "_executeRebalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1985,
														"src": "8117:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_ProtocolAllocation_$923_storage_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,struct YieldOptimizer.ProtocolAllocation storage pointer,uint256,uint256,uint256)"
														}
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8117:78:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1434,
												"nodeType": "ExpressionStatement",
												"src": "8117:78:9"
											},
											{
												"expression": {
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1435,
															"name": "profile",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "8206:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserProfile_$916_storage_ptr",
																"typeString": "struct YieldOptimizer.UserProfile storage pointer"
															}
														},
														"id": 1437,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8214:13:9",
														"memberName": "lastRebalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 913,
														"src": "8206:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1438,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8230:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8236:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8230:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8206:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1441,
												"nodeType": "ExpressionStatement",
												"src": "8206:39:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1443,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8271:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8275:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8271:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1445,
															"name": "totalValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "8283:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1442,
														"name": "Rebalanced",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "8260:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8260:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1447,
												"nodeType": "EmitStatement",
												"src": "8255:39:9"
											}
										]
									},
									"documentation": {
										"id": 1374,
										"nodeType": "StructuredDocumentation",
										"src": "7471:54:9",
										"text": " @dev Execute rebalancing for a user"
									},
									"functionSelector": "7d7c2a1c",
									"id": 1449,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1377,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1376,
												"name": "nonReentrant",
												"nameLocations": [
													"7560:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 842,
												"src": "7560:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7560:12:9"
										}
									],
									"name": "rebalance",
									"nameLocation": "7539:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7548:2:9"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7573:0:9"
									},
									"scope": 2100,
									"src": "7530:771:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1575,
										"nodeType": "Block",
										"src": "8416:1215:9",
										"statements": [
											{
												"assignments": [
													1457
												],
												"declarations": [
													{
														"constant": false,
														"id": 1457,
														"mutability": "mutable",
														"name": "allocation",
														"nameLocation": "8453:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1575,
														"src": "8426:37:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
															"typeString": "struct YieldOptimizer.ProtocolAllocation"
														},
														"typeName": {
															"id": 1456,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1455,
																"name": "ProtocolAllocation",
																"nameLocations": [
																	"8426:18:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 923,
																"src": "8426:18:9"
															},
															"referencedDeclaration": 923,
															"src": "8426:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
																"typeString": "struct YieldOptimizer.ProtocolAllocation"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1462,
												"initialValue": {
													"baseExpression": {
														"id": 1458,
														"name": "userAllocations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "8466:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ProtocolAllocation_$923_storage_$",
															"typeString": "mapping(address => struct YieldOptimizer.ProtocolAllocation storage ref)"
														}
													},
													"id": 1461,
													"indexExpression": {
														"expression": {
															"id": 1459,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8482:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8486:6:9",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "8482:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8466:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage",
														"typeString": "struct YieldOptimizer.ProtocolAllocation storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8426:67:9"
											},
											{
												"assignments": [
													1465
												],
												"declarations": [
													{
														"constant": false,
														"id": 1465,
														"mutability": "mutable",
														"name": "profile",
														"nameLocation": "8523:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1575,
														"src": "8503:27:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserProfile_$916_storage_ptr",
															"typeString": "struct YieldOptimizer.UserProfile"
														},
														"typeName": {
															"id": 1464,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1463,
																"name": "UserProfile",
																"nameLocations": [
																	"8503:11:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 916,
																"src": "8503:11:9"
															},
															"referencedDeclaration": 916,
															"src": "8503:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserProfile_$916_storage_ptr",
																"typeString": "struct YieldOptimizer.UserProfile"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1470,
												"initialValue": {
													"baseExpression": {
														"id": 1466,
														"name": "userProfiles",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "8533:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProfile_$916_storage_$",
															"typeString": "mapping(address => struct YieldOptimizer.UserProfile storage ref)"
														}
													},
													"id": 1469,
													"indexExpression": {
														"expression": {
															"id": 1467,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8546:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8550:6:9",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "8546:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8533:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserProfile_$916_storage",
														"typeString": "struct YieldOptimizer.UserProfile storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8503:54:9"
											},
											{
												"assignments": [
													1472
												],
												"declarations": [
													{
														"constant": false,
														"id": 1472,
														"mutability": "mutable",
														"name": "totalWithdrawn",
														"nameLocation": "8584:14:9",
														"nodeType": "VariableDeclaration",
														"scope": 1575,
														"src": "8576:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1471,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8576:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1474,
												"initialValue": {
													"hexValue": "30",
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8601:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8576:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1475,
															"name": "allocation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "8656:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
																"typeString": "struct YieldOptimizer.ProtocolAllocation storage pointer"
															}
														},
														"id": 1476,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8667:11:9",
														"memberName": "benqiAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 918,
														"src": "8656:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1477,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8681:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8656:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1493,
												"nodeType": "IfStatement",
												"src": "8652:157:9",
												"trueBody": {
													"id": 1492,
													"nodeType": "Block",
													"src": "8684:125:9",
													"statements": [
														{
															"expression": {
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1479,
																	"name": "totalWithdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1472,
																	"src": "8698:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1481,
																				"name": "allocation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1457,
																				"src": "8735:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
																					"typeString": "struct YieldOptimizer.ProtocolAllocation storage pointer"
																				}
																			},
																			"id": 1482,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8746:11:9",
																			"memberName": "benqiAmount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 918,
																			"src": "8735:22:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1480,
																		"name": "_withdrawFromBenqi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1619,
																		"src": "8716:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8716:42:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8698:60:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1485,
															"nodeType": "ExpressionStatement",
															"src": "8698:60:9"
														},
														{
															"expression": {
																"id": 1490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1486,
																		"name": "allocation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1457,
																		"src": "8772:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
																			"typeString": "struct YieldOptimizer.ProtocolAllocation storage pointer"
																		}
																	},
																	"id": 1488,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8783:11:9",
																	"memberName": "benqiAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 918,
																	"src": "8772:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8797:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8772:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1491,
															"nodeType": "ExpressionStatement",
															"src": "8772:26:9"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1494,
															"name": "allocation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "8822:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
																"typeString": "struct YieldOptimizer.ProtocolAllocation storage pointer"
															}
														},
														"id": 1495,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8833:15:9",
														"memberName": "traderJoeAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 920,
														"src": "8822:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8851:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8822:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1512,
												"nodeType": "IfStatement",
												"src": "8818:173:9",
												"trueBody": {
													"id": 1511,
													"nodeType": "Block",
													"src": "8854:137:9",
													"statements": [
														{
															"expression": {
																"id": 1503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1498,
																	"name": "totalWithdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1472,
																	"src": "8868:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1500,
																				"name": "allocation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1457,
																				"src": "8909:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
																					"typeString": "struct YieldOptimizer.ProtocolAllocation storage pointer"
																				}
																			},
																			"id": 1501,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8920:15:9",
																			"memberName": "traderJoeAmount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 920,
																			"src": "8909:26:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1499,
																		"name": "_withdrawFromTraderJoe",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1644,
																		"src": "8886:22:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8886:50:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8868:68:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1504,
															"nodeType": "ExpressionStatement",
															"src": "8868:68:9"
														},
														{
															"expression": {
																"id": 1509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1505,
																		"name": "allocation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1457,
																		"src": "8950:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
																			"typeString": "struct YieldOptimizer.ProtocolAllocation storage pointer"
																		}
																	},
																	"id": 1507,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8961:15:9",
																	"memberName": "traderJoeAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 920,
																	"src": "8950:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8979:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8950:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1510,
															"nodeType": "ExpressionStatement",
															"src": "8950:30:9"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1513,
															"name": "allocation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "9004:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
																"typeString": "struct YieldOptimizer.ProtocolAllocation storage pointer"
															}
														},
														"id": 1514,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9015:14:9",
														"memberName": "yieldYakAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 922,
														"src": "9004:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9032:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9004:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1531,
												"nodeType": "IfStatement",
												"src": "9000:169:9",
												"trueBody": {
													"id": 1530,
													"nodeType": "Block",
													"src": "9035:134:9",
													"statements": [
														{
															"expression": {
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1517,
																	"name": "totalWithdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1472,
																	"src": "9049:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1519,
																				"name": "allocation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1457,
																				"src": "9089:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
																					"typeString": "struct YieldOptimizer.ProtocolAllocation storage pointer"
																				}
																			},
																			"id": 1520,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9100:14:9",
																			"memberName": "yieldYakAmount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 922,
																			"src": "9089:25:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1518,
																		"name": "_withdrawFromYieldYak",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1669,
																		"src": "9067:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9067:48:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9049:66:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1523,
															"nodeType": "ExpressionStatement",
															"src": "9049:66:9"
														},
														{
															"expression": {
																"id": 1528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1524,
																		"name": "allocation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1457,
																		"src": "9129:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
																			"typeString": "struct YieldOptimizer.ProtocolAllocation storage pointer"
																		}
																	},
																	"id": 1526,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "9140:14:9",
																	"memberName": "yieldYakAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 922,
																	"src": "9129:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9157:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9129:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1529,
															"nodeType": "ExpressionStatement",
															"src": "9129:29:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1532,
															"name": "profile",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "9179:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserProfile_$916_storage_ptr",
																"typeString": "struct YieldOptimizer.UserProfile storage pointer"
															}
														},
														"id": 1534,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9187:14:9",
														"memberName": "totalDeposited",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 911,
														"src": "9179:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1535,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9204:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9179:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1537,
												"nodeType": "ExpressionStatement",
												"src": "9179:26:9"
											},
											{
												"assignments": [
													1539
												],
												"declarations": [
													{
														"constant": false,
														"id": 1539,
														"mutability": "mutable",
														"name": "contractBalance",
														"nameLocation": "9288:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 1575,
														"src": "9280:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1538,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9280:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1545,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1542,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "9314:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_YieldOptimizer_$2100",
																	"typeString": "contract YieldOptimizer"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_YieldOptimizer_$2100",
																	"typeString": "contract YieldOptimizer"
																}
															],
															"id": 1541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9306:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9306:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9306:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9320:7:9",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "9306:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9280:47:9"
											},
											{
												"assignments": [
													1547
												],
												"declarations": [
													{
														"constant": false,
														"id": 1547,
														"mutability": "mutable",
														"name": "toTransfer",
														"nameLocation": "9345:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1575,
														"src": "9337:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1546,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9337:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1554,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1548,
															"name": "totalWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "9358:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1549,
															"name": "contractBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1539,
															"src": "9375:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9358:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1552,
														"name": "totalWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1472,
														"src": "9411:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "9358:67:9",
													"trueExpression": {
														"id": 1551,
														"name": "contractBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1539,
														"src": "9393:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9337:88:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1555,
														"name": "toTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1547,
														"src": "9492:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1556,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9505:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9492:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1574,
												"nodeType": "IfStatement",
												"src": "9488:137:9",
												"trueBody": {
													"id": 1573,
													"nodeType": "Block",
													"src": "9508:117:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1564,
																		"name": "toTransfer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1547,
																		"src": "9551:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1560,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "9530:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1561,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9534:6:9",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "9530:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9522:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 1558,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9522:8:9",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9522:19:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 1563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9542:8:9",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "9522:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9522:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1566,
															"nodeType": "ExpressionStatement",
															"src": "9522:40:9"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1568,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "9591:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9595:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "9591:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1570,
																		"name": "toTransfer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1547,
																		"src": "9603:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1567,
																	"name": "Withdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "9581:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9581:33:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1572,
															"nodeType": "EmitStatement",
															"src": "9576:38:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1450,
										"nodeType": "StructuredDocumentation",
										"src": "8307:53:9",
										"text": " @dev Emergency withdrawal function"
									},
									"functionSelector": "db2e21bc",
									"id": 1576,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1453,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1452,
												"name": "nonReentrant",
												"nameLocations": [
													"8403:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 842,
												"src": "8403:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8403:12:9"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "8374:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8391:2:9"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8416:0:9"
									},
									"scope": 2100,
									"src": "8365:1266:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1581,
										"nodeType": "Block",
										"src": "9746:114:9",
										"statements": []
									},
									"id": 1582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_depositToBenqi",
									"nameLocation": "9705:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9729:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "9721:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9721:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9720:16:9"
									},
									"returnParameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9746:0:9"
									},
									"scope": 2100,
									"src": "9696:164:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1587,
										"nodeType": "Block",
										"src": "9920:115:9",
										"statements": []
									},
									"id": 1588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_depositToTraderJoe",
									"nameLocation": "9875:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9903:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "9895:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9895:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9894:16:9"
									},
									"returnParameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9920:0:9"
									},
									"scope": 2100,
									"src": "9866:169:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1593,
										"nodeType": "Block",
										"src": "10094:121:9",
										"statements": []
									},
									"id": 1594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_depositToYieldYak",
									"nameLocation": "10050:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10077:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "10069:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10069:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10068:16:9"
									},
									"returnParameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10094:0:9"
									},
									"scope": 2100,
									"src": "10041:174:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1618,
										"nodeType": "Block",
										"src": "10298:337:9",
										"statements": [
											{
												"assignments": [
													1602
												],
												"declarations": [
													{
														"constant": false,
														"id": 1602,
														"mutability": "mutable",
														"name": "withdrawnAmount",
														"nameLocation": "10521:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 1618,
														"src": "10513:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1601,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10513:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1615,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1603,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "10540:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130303030",
																				"id": 1604,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10550:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				},
																				"value": "10000"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1608,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1605,
																						"name": "currentYields",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 945,
																						"src": "10558:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_YieldData_$932_storage",
																							"typeString": "struct YieldOptimizer.YieldData storage ref"
																						}
																					},
																					"id": 1606,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "10572:8:9",
																					"memberName": "benqiAPY",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 925,
																					"src": "10558:22:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "333635",
																					"id": 1607,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10583:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_365_by_1",
																						"typeString": "int_const 365"
																					},
																					"value": "365"
																				},
																				"src": "10558:28:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10550:36:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1610,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10549:38:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:47:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1612,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10539:49:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 1613,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10591:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "10539:57:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10513:83:9"
											},
											{
												"expression": {
													"id": 1616,
													"name": "withdrawnAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1602,
													"src": "10613:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1600,
												"id": 1617,
												"nodeType": "Return",
												"src": "10606:22:9"
											}
										]
									},
									"id": 1619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_withdrawFromBenqi",
									"nameLocation": "10230:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10257:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "10249:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10249:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10248:16:9"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "10289:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10289:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10288:9:9"
									},
									"scope": 2100,
									"src": "10221:414:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1643,
										"nodeType": "Block",
										"src": "10722:342:9",
										"statements": [
											{
												"assignments": [
													1627
												],
												"declarations": [
													{
														"constant": false,
														"id": 1627,
														"mutability": "mutable",
														"name": "withdrawnAmount",
														"nameLocation": "10946:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 1643,
														"src": "10938:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1626,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10938:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1640,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1628,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1621,
																	"src": "10965:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130303030",
																				"id": 1629,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10975:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				},
																				"value": "10000"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1633,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1630,
																						"name": "currentYields",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 945,
																						"src": "10983:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_YieldData_$932_storage",
																							"typeString": "struct YieldOptimizer.YieldData storage ref"
																						}
																					},
																					"id": 1631,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "10997:12:9",
																					"memberName": "traderJoeAPY",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 927,
																					"src": "10983:26:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "333635",
																					"id": 1632,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11012:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_365_by_1",
																						"typeString": "int_const 365"
																					},
																					"value": "365"
																				},
																				"src": "10983:32:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10975:40:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1635,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10974:42:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10965:51:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1637,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10964:53:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 1638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11020:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "10964:61:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10938:87:9"
											},
											{
												"expression": {
													"id": 1641,
													"name": "withdrawnAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1627,
													"src": "11042:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1625,
												"id": 1642,
												"nodeType": "Return",
												"src": "11035:22:9"
											}
										]
									},
									"id": 1644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_withdrawFromTraderJoe",
									"nameLocation": "10650:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10681:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "10673:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10673:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10672:16:9"
									},
									"returnParameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "10713:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:9:9"
									},
									"scope": 2100,
									"src": "10641:423:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1668,
										"nodeType": "Block",
										"src": "11150:346:9",
										"statements": [
											{
												"assignments": [
													1652
												],
												"declarations": [
													{
														"constant": false,
														"id": 1652,
														"mutability": "mutable",
														"name": "withdrawnAmount",
														"nameLocation": "11379:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 1668,
														"src": "11371:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1651,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11371:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1665,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1653,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1646,
																	"src": "11398:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1659,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130303030",
																				"id": 1654,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11408:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				},
																				"value": "10000"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1658,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1655,
																						"name": "currentYields",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 945,
																						"src": "11416:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_YieldData_$932_storage",
																							"typeString": "struct YieldOptimizer.YieldData storage ref"
																						}
																					},
																					"id": 1656,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "11430:11:9",
																					"memberName": "yieldYakAPY",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 929,
																					"src": "11416:25:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "333635",
																					"id": 1657,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11444:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_365_by_1",
																						"typeString": "int_const 365"
																					},
																					"value": "365"
																				},
																				"src": "11416:31:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11408:39:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1660,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "11407:41:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11398:50:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1662,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11397:52:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 1663,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11452:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "11397:60:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11371:86:9"
											},
											{
												"expression": {
													"id": 1666,
													"name": "withdrawnAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1652,
													"src": "11474:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1650,
												"id": 1667,
												"nodeType": "Return",
												"src": "11467:22:9"
											}
										]
									},
									"id": 1669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_withdrawFromYieldYak",
									"nameLocation": "11079:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11109:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "11101:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11101:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11100:16:9"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "11141:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11141:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11140:9:9"
									},
									"scope": 2100,
									"src": "11070:426:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1769,
										"nodeType": "Block",
										"src": "11684:603:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1682,
														"name": "riskScore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1673,
														"src": "11698:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "3333",
														"id": 1683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11711:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_33_by_1",
															"typeString": "int_const 33"
														},
														"value": "33"
													},
													"src": "11698:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1708,
															"name": "riskScore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1673,
															"src": "11880:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"hexValue": "3636",
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11893:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_66_by_1",
																"typeString": "int_const 66"
															},
															"value": "66"
														},
														"src": "11880:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1766,
														"nodeType": "Block",
														"src": "12092:189:9",
														"statements": [
															{
																"expression": {
																	"id": 1746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1739,
																		"name": "benqi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1676,
																		"src": "12106:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1742,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1740,
																						"name": "totalAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1671,
																						"src": "12115:11:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"hexValue": "32303030",
																						"id": 1741,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12129:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2000_by_1",
																							"typeString": "int_const 2000"
																						},
																						"value": "2000"
																					},
																					"src": "12115:18:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1743,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "12114:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1744,
																			"name": "BASIS_POINTS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 960,
																			"src": "12137:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12114:35:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12106:43:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1747,
																"nodeType": "ExpressionStatement",
																"src": "12106:43:9"
															},
															{
																"expression": {
																	"id": 1755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1748,
																		"name": "traderJoe",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1678,
																		"src": "12163:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1751,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1749,
																						"name": "totalAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1671,
																						"src": "12176:11:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"hexValue": "33303030",
																						"id": 1750,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12190:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_3000_by_1",
																							"typeString": "int_const 3000"
																						},
																						"value": "3000"
																					},
																					"src": "12176:18:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1752,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "12175:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1753,
																			"name": "BASIS_POINTS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 960,
																			"src": "12198:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12175:35:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12163:47:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1756,
																"nodeType": "ExpressionStatement",
																"src": "12163:47:9"
															},
															{
																"expression": {
																	"id": 1764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1757,
																		"name": "yieldYak",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1680,
																		"src": "12224:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1760,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1758,
																						"name": "totalAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1671,
																						"src": "12236:11:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"hexValue": "35303030",
																						"id": 1759,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12250:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_5000_by_1",
																							"typeString": "int_const 5000"
																						},
																						"value": "5000"
																					},
																					"src": "12236:18:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1761,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "12235:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1762,
																			"name": "BASIS_POINTS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 960,
																			"src": "12258:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12235:35:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12224:46:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1765,
																"nodeType": "ExpressionStatement",
																"src": "12224:46:9"
															}
														]
													},
													"id": 1767,
													"nodeType": "IfStatement",
													"src": "11876:405:9",
													"trueBody": {
														"id": 1738,
														"nodeType": "Block",
														"src": "11897:189:9",
														"statements": [
															{
																"expression": {
																	"id": 1718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1711,
																		"name": "benqi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1676,
																		"src": "11911:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1714,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1712,
																						"name": "totalAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1671,
																						"src": "11920:11:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"hexValue": "34303030",
																						"id": 1713,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11934:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4000_by_1",
																							"typeString": "int_const 4000"
																						},
																						"value": "4000"
																					},
																					"src": "11920:18:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1715,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11919:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1716,
																			"name": "BASIS_POINTS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 960,
																			"src": "11942:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11919:35:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11911:43:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1719,
																"nodeType": "ExpressionStatement",
																"src": "11911:43:9"
															},
															{
																"expression": {
																	"id": 1727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1720,
																		"name": "traderJoe",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1678,
																		"src": "11968:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1723,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1721,
																						"name": "totalAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1671,
																						"src": "11981:11:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"hexValue": "34303030",
																						"id": 1722,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11995:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4000_by_1",
																							"typeString": "int_const 4000"
																						},
																						"value": "4000"
																					},
																					"src": "11981:18:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1724,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11980:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1725,
																			"name": "BASIS_POINTS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 960,
																			"src": "12003:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11980:35:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11968:47:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1728,
																"nodeType": "ExpressionStatement",
																"src": "11968:47:9"
															},
															{
																"expression": {
																	"id": 1736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1729,
																		"name": "yieldYak",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1680,
																		"src": "12029:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1732,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1730,
																						"name": "totalAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1671,
																						"src": "12041:11:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"hexValue": "32303030",
																						"id": 1731,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12055:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2000_by_1",
																							"typeString": "int_const 2000"
																						},
																						"value": "2000"
																					},
																					"src": "12041:18:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1733,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "12040:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1734,
																			"name": "BASIS_POINTS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 960,
																			"src": "12063:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12040:35:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12029:46:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1737,
																"nodeType": "ExpressionStatement",
																"src": "12029:46:9"
															}
														]
													}
												},
												"id": 1768,
												"nodeType": "IfStatement",
												"src": "11694:587:9",
												"trueBody": {
													"id": 1707,
													"nodeType": "Block",
													"src": "11715:155:9",
													"statements": [
														{
															"expression": {
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1685,
																	"name": "benqi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1676,
																	"src": "11729:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1688,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1686,
																					"name": "totalAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1671,
																					"src": "11738:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "37303030",
																					"id": 1687,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11752:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_7000_by_1",
																						"typeString": "int_const 7000"
																					},
																					"value": "7000"
																				},
																				"src": "11738:18:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1689,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "11737:20:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1690,
																		"name": "BASIS_POINTS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 960,
																		"src": "11760:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11737:35:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11729:43:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1693,
															"nodeType": "ExpressionStatement",
															"src": "11729:43:9"
														},
														{
															"expression": {
																"id": 1701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1694,
																	"name": "traderJoe",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1678,
																	"src": "11786:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1697,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1695,
																					"name": "totalAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1671,
																					"src": "11799:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "33303030",
																					"id": 1696,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11813:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_3000_by_1",
																						"typeString": "int_const 3000"
																					},
																					"value": "3000"
																				},
																				"src": "11799:18:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1698,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "11798:20:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1699,
																		"name": "BASIS_POINTS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 960,
																		"src": "11821:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11798:35:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11786:47:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1702,
															"nodeType": "ExpressionStatement",
															"src": "11786:47:9"
														},
														{
															"expression": {
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1703,
																	"name": "yieldYak",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1680,
																	"src": "11847:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11858:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11847:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1706,
															"nodeType": "ExpressionStatement",
															"src": "11847:12:9"
														}
													]
												}
											}
										]
									},
									"id": 1770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateOptimalAllocation",
									"nameLocation": "11511:27:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "totalAmount",
												"nameLocation": "11547:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "11539:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11539:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "riskScore",
												"nameLocation": "11566:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "11560:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1672,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11560:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11538:38:9"
									},
									"returnParameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "benqi",
												"nameLocation": "11635:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "11627:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11627:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "traderJoe",
												"nameLocation": "11650:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "11642:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11642:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "yieldYak",
												"nameLocation": "11669:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "11661:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11661:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11626:52:9"
									},
									"scope": 2100,
									"src": "11502:785:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1815,
										"nodeType": "Block",
										"src": "12519:303:9",
										"statements": [
											{
												"assignments": [
													1787
												],
												"declarations": [
													{
														"constant": false,
														"id": 1787,
														"mutability": "mutable",
														"name": "benqiDiff",
														"nameLocation": "12537:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1815,
														"src": "12529:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1786,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12529:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1801,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1788,
																"name": "current",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1773,
																"src": "12549:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ProtocolAllocation_$923_memory_ptr",
																	"typeString": "struct YieldOptimizer.ProtocolAllocation memory"
																}
															},
															"id": 1789,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12557:11:9",
															"memberName": "benqiAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 918,
															"src": "12549:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1790,
															"name": "targetBenqi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "12571:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12549:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1796,
															"name": "targetBenqi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "12647:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 1797,
																"name": "current",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1773,
																"src": "12661:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ProtocolAllocation_$923_memory_ptr",
																	"typeString": "struct YieldOptimizer.ProtocolAllocation memory"
																}
															},
															"id": 1798,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12669:11:9",
															"memberName": "benqiAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 918,
															"src": "12661:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12647:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "12549:131:9",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1792,
																"name": "current",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1773,
																"src": "12598:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ProtocolAllocation_$923_memory_ptr",
																	"typeString": "struct YieldOptimizer.ProtocolAllocation memory"
																}
															},
															"id": 1793,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12606:11:9",
															"memberName": "benqiAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 918,
															"src": "12598:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1794,
															"name": "targetBenqi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "12620:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12598:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12529:151:9"
											},
											{
												"assignments": [
													1803
												],
												"declarations": [
													{
														"constant": false,
														"id": 1803,
														"mutability": "mutable",
														"name": "threshold",
														"nameLocation": "12707:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1815,
														"src": "12699:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1802,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12699:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1810,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1804,
																	"name": "totalValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1781,
																	"src": "12720:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1805,
																	"name": "REBALANCE_THRESHOLD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "12733:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12720:32:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1807,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "12719:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1808,
														"name": "BASIS_POINTS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "12756:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12719:49:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12699:69:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1811,
														"name": "benqiDiff",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1787,
														"src": "12794:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1812,
														"name": "threshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "12806:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12794:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1785,
												"id": 1814,
												"nodeType": "Return",
												"src": "12787:28:9"
											}
										]
									},
									"id": 1816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_shouldRebalance",
									"nameLocation": "12302:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "current",
												"nameLocation": "12354:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "12328:33:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ProtocolAllocation_$923_memory_ptr",
													"typeString": "struct YieldOptimizer.ProtocolAllocation"
												},
												"typeName": {
													"id": 1772,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1771,
														"name": "ProtocolAllocation",
														"nameLocations": [
															"12328:18:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 923,
														"src": "12328:18:9"
													},
													"referencedDeclaration": 923,
													"src": "12328:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
														"typeString": "struct YieldOptimizer.ProtocolAllocation"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "targetBenqi",
												"nameLocation": "12379:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "12371:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12371:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "targetTraderJoe",
												"nameLocation": "12408:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "12400:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12400:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "targetYieldYak",
												"nameLocation": "12441:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "12433:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12433:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "totalValue",
												"nameLocation": "12473:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "12465:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12465:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12318:171:9"
									},
									"returnParameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "12513:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1783,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12513:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12512:6:9"
									},
									"scope": 2100,
									"src": "12293:529:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1984,
										"nodeType": "Block",
										"src": "13030:1509:9",
										"statements": [
											{
												"assignments": [
													1831
												],
												"declarations": [
													{
														"constant": false,
														"id": 1831,
														"mutability": "mutable",
														"name": "benqiDiff",
														"nameLocation": "13119:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1984,
														"src": "13112:16:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1830,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "13112:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1842,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1834,
																"name": "targetBenqi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1823,
																"src": "13138:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13131:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 1832,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "13131:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 1835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13131:19:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1838,
																	"name": "current",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1821,
																	"src": "13160:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
																		"typeString": "struct YieldOptimizer.ProtocolAllocation storage pointer"
																	}
																},
																"id": 1839,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13168:11:9",
																"memberName": "benqiAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 918,
																"src": "13160:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13153:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 1836,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "13153:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 1840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13153:27:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "13131:49:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13112:68:9"
											},
											{
												"assignments": [
													1844
												],
												"declarations": [
													{
														"constant": false,
														"id": 1844,
														"mutability": "mutable",
														"name": "traderJoeDiff",
														"nameLocation": "13197:13:9",
														"nodeType": "VariableDeclaration",
														"scope": 1984,
														"src": "13190:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1843,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "13190:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1855,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1847,
																"name": "targetTraderJoe",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1825,
																"src": "13220:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1846,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13213:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 1845,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "13213:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 1848,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13213:23:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1851,
																	"name": "current",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1821,
																	"src": "13246:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
																		"typeString": "struct YieldOptimizer.ProtocolAllocation storage pointer"
																	}
																},
																"id": 1852,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13254:15:9",
																"memberName": "traderJoeAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 920,
																"src": "13246:23:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13239:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 1849,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "13239:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 1853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13239:31:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "13213:57:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13190:80:9"
											},
											{
												"assignments": [
													1857
												],
												"declarations": [
													{
														"constant": false,
														"id": 1857,
														"mutability": "mutable",
														"name": "yieldYakDiff",
														"nameLocation": "13287:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1984,
														"src": "13280:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1856,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "13280:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1868,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1860,
																"name": "targetYieldYak",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1827,
																"src": "13309:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13302:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 1858,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "13302:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 1861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13302:22:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1864,
																	"name": "current",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1821,
																	"src": "13334:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
																		"typeString": "struct YieldOptimizer.ProtocolAllocation storage pointer"
																	}
																},
																"id": 1865,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13342:14:9",
																"memberName": "yieldYakAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 922,
																"src": "13334:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13327:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 1862,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "13327:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 1866,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13327:30:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "13302:55:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13280:77:9"
											},
											{
												"assignments": [
													1870
												],
												"declarations": [
													{
														"constant": false,
														"id": 1870,
														"mutability": "mutable",
														"name": "totalWithdrawn",
														"nameLocation": "13384:14:9",
														"nodeType": "VariableDeclaration",
														"scope": 1984,
														"src": "13376:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1869,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13376:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1872,
												"initialValue": {
													"hexValue": "30",
													"id": 1871,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13401:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13376:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1873,
														"name": "benqiDiff",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "13483:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 1874,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13495:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13483:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1891,
												"nodeType": "IfStatement",
												"src": "13479:154:9",
												"trueBody": {
													"id": 1890,
													"nodeType": "Block",
													"src": "13498:135:9",
													"statements": [
														{
															"assignments": [
																1877
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1877,
																	"mutability": "mutable",
																	"name": "withdrawAmount",
																	"nameLocation": "13520:14:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1890,
																	"src": "13512:22:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1876,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13512:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1883,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "13545:10:9",
																		"subExpression": {
																			"id": 1880,
																			"name": "benqiDiff",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1831,
																			"src": "13546:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13537:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1878,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13537:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13537:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13512:44:9"
														},
														{
															"expression": {
																"id": 1888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1884,
																	"name": "totalWithdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1870,
																	"src": "13570:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1886,
																			"name": "withdrawAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1877,
																			"src": "13607:14:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1885,
																		"name": "_withdrawFromBenqi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1619,
																		"src": "13588:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13588:34:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13570:52:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1889,
															"nodeType": "ExpressionStatement",
															"src": "13570:52:9"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1892,
														"name": "traderJoeDiff",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1844,
														"src": "13646:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 1893,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13662:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13646:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1910,
												"nodeType": "IfStatement",
												"src": "13642:166:9",
												"trueBody": {
													"id": 1909,
													"nodeType": "Block",
													"src": "13665:143:9",
													"statements": [
														{
															"assignments": [
																1896
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1896,
																	"mutability": "mutable",
																	"name": "withdrawAmount",
																	"nameLocation": "13687:14:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1909,
																	"src": "13679:22:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1895,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13679:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1902,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "13712:14:9",
																		"subExpression": {
																			"id": 1899,
																			"name": "traderJoeDiff",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1844,
																			"src": "13713:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13704:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1897,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13704:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13704:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13679:48:9"
														},
														{
															"expression": {
																"id": 1907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1903,
																	"name": "totalWithdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1870,
																	"src": "13741:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1905,
																			"name": "withdrawAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1896,
																			"src": "13782:14:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1904,
																		"name": "_withdrawFromTraderJoe",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1644,
																		"src": "13759:22:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13759:38:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13741:56:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1908,
															"nodeType": "ExpressionStatement",
															"src": "13741:56:9"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1911,
														"name": "yieldYakDiff",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1857,
														"src": "13821:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 1912,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13836:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13821:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1929,
												"nodeType": "IfStatement",
												"src": "13817:163:9",
												"trueBody": {
													"id": 1928,
													"nodeType": "Block",
													"src": "13839:141:9",
													"statements": [
														{
															"assignments": [
																1915
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1915,
																	"mutability": "mutable",
																	"name": "withdrawAmount",
																	"nameLocation": "13861:14:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1928,
																	"src": "13853:22:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1914,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13853:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1921,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "13886:13:9",
																		"subExpression": {
																			"id": 1918,
																			"name": "yieldYakDiff",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1857,
																			"src": "13887:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13878:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1916,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13878:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13878:22:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13853:47:9"
														},
														{
															"expression": {
																"id": 1926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1922,
																	"name": "totalWithdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1870,
																	"src": "13914:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1924,
																			"name": "withdrawAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1915,
																			"src": "13954:14:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1923,
																		"name": "_withdrawFromYieldYak",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1669,
																		"src": "13932:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13932:37:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13914:55:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1927,
															"nodeType": "ExpressionStatement",
															"src": "13914:55:9"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1930,
														"name": "benqiDiff",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "14058:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1931,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14070:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14058:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1941,
												"nodeType": "IfStatement",
												"src": "14054:79:9",
												"trueBody": {
													"id": 1940,
													"nodeType": "Block",
													"src": "14073:60:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1936,
																				"name": "benqiDiff",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1831,
																				"src": "14111:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 1935,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "14103:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1934,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "14103:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14103:18:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1933,
																	"name": "_depositToBenqi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1582,
																	"src": "14087:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14087:35:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1939,
															"nodeType": "ExpressionStatement",
															"src": "14087:35:9"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1942,
														"name": "traderJoeDiff",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1844,
														"src": "14146:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1943,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14162:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14146:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1953,
												"nodeType": "IfStatement",
												"src": "14142:91:9",
												"trueBody": {
													"id": 1952,
													"nodeType": "Block",
													"src": "14165:68:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1948,
																				"name": "traderJoeDiff",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1844,
																				"src": "14207:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 1947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "14199:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1946,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "14199:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14199:22:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1945,
																	"name": "_depositToTraderJoe",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1588,
																	"src": "14179:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14179:43:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1951,
															"nodeType": "ExpressionStatement",
															"src": "14179:43:9"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1954,
														"name": "yieldYakDiff",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1857,
														"src": "14246:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1955,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14261:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14246:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1965,
												"nodeType": "IfStatement",
												"src": "14242:88:9",
												"trueBody": {
													"id": 1964,
													"nodeType": "Block",
													"src": "14264:66:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1960,
																				"name": "yieldYakDiff",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1857,
																				"src": "14305:12:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 1959,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "14297:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1958,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "14297:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14297:21:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1957,
																	"name": "_depositToYieldYak",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "14278:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14278:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1963,
															"nodeType": "ExpressionStatement",
															"src": "14278:41:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1966,
															"name": "current",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "14399:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
																"typeString": "struct YieldOptimizer.ProtocolAllocation storage pointer"
															}
														},
														"id": 1968,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14407:11:9",
														"memberName": "benqiAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 918,
														"src": "14399:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1969,
														"name": "targetBenqi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1823,
														"src": "14421:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14399:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1971,
												"nodeType": "ExpressionStatement",
												"src": "14399:33:9"
											},
											{
												"expression": {
													"id": 1976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1972,
															"name": "current",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "14442:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
																"typeString": "struct YieldOptimizer.ProtocolAllocation storage pointer"
															}
														},
														"id": 1974,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14450:15:9",
														"memberName": "traderJoeAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 920,
														"src": "14442:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1975,
														"name": "targetTraderJoe",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1825,
														"src": "14468:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14442:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1977,
												"nodeType": "ExpressionStatement",
												"src": "14442:41:9"
											},
											{
												"expression": {
													"id": 1982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1978,
															"name": "current",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "14493:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
																"typeString": "struct YieldOptimizer.ProtocolAllocation storage pointer"
															}
														},
														"id": 1980,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14501:14:9",
														"memberName": "yieldYakAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 922,
														"src": "14493:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1981,
														"name": "targetYieldYak",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1827,
														"src": "14518:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14493:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1983,
												"nodeType": "ExpressionStatement",
												"src": "14493:39:9"
											}
										]
									},
									"id": 1985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_executeRebalance",
									"nameLocation": "12837:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "12872:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "12864:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12864:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "current",
												"nameLocation": "12913:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "12886:34:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
													"typeString": "struct YieldOptimizer.ProtocolAllocation"
												},
												"typeName": {
													"id": 1820,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1819,
														"name": "ProtocolAllocation",
														"nameLocations": [
															"12886:18:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 923,
														"src": "12886:18:9"
													},
													"referencedDeclaration": 923,
													"src": "12886:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ProtocolAllocation_$923_storage_ptr",
														"typeString": "struct YieldOptimizer.ProtocolAllocation"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "targetBenqi",
												"nameLocation": "12938:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "12930:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12930:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "targetTraderJoe",
												"nameLocation": "12967:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "12959:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12959:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "targetYieldYak",
												"nameLocation": "13000:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "12992:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12992:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12854:166:9"
									},
									"returnParameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13030:0:9"
									},
									"scope": 2100,
									"src": "12828:1711:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2055,
										"nodeType": "Block",
										"src": "14664:570:9",
										"statements": [
											{
												"assignments": [
													1995
												],
												"declarations": [
													{
														"constant": false,
														"id": 1995,
														"mutability": "mutable",
														"name": "protocolHash",
														"nameLocation": "14682:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 2055,
														"src": "14674:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1994,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "14674:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2002,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1999,
																	"name": "protocol",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1987,
																	"src": "14724:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_calldata_ptr",
																		"typeString": "string calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_calldata_ptr",
																		"typeString": "string calldata"
																	}
																],
																"expression": {
																	"id": 1997,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "14707:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1998,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "14711:12:9",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "14707:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14707:26:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1996,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "14697:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14697:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14674:60:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2003,
														"name": "protocolHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1995,
														"src": "14757:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "7472616465726a6f65",
																		"id": 2007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14800:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_24f8419fdc4f6acf1200f13e6b585e241e72e1b37e4d57f20ad2da38a8f251fe",
																			"typeString": "literal_string \"traderjoe\""
																		},
																		"value": "traderjoe"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_24f8419fdc4f6acf1200f13e6b585e241e72e1b37e4d57f20ad2da38a8f251fe",
																			"typeString": "literal_string \"traderjoe\""
																		}
																	],
																	"expression": {
																		"id": 2005,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "14783:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 2006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "14787:12:9",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "14783:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 2008,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14783:29:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2004,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "14773:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2009,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14773:40:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "14757:56:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2016,
															"name": "protocolHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1995,
															"src": "14878:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "62656e7169",
																			"id": 2020,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14921:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_ca0da0a49743b95e8ea9e651d4f648be9bdc5629a2c1716e52deaa77b8602d67",
																				"typeString": "literal_string \"benqi\""
																			},
																			"value": "benqi"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_ca0da0a49743b95e8ea9e651d4f648be9bdc5629a2c1716e52deaa77b8602d67",
																				"typeString": "literal_string \"benqi\""
																			}
																		],
																		"expression": {
																			"id": 2018,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "14904:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 2019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "14908:12:9",
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "14904:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 2021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14904:25:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2017,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "14894:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14894:36:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "14878:52:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 2036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2029,
																"name": "protocolHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1995,
																"src": "14996:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "7969656c6479616b",
																				"id": 2033,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "15039:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_a24808fe8020be382efbc06e3d832c10022c9007a54161bd80307f00bff0c218",
																					"typeString": "literal_string \"yieldyak\""
																				},
																				"value": "yieldyak"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_a24808fe8020be382efbc06e3d832c10022c9007a54161bd80307f00bff0c218",
																					"typeString": "literal_string \"yieldyak\""
																				}
																			],
																			"expression": {
																				"id": 2031,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "15022:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 2032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "15026:12:9",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "15022:16:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 2034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15022:28:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2030,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "15012:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 2035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15012:39:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "14996:55:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 2046,
															"nodeType": "Block",
															"src": "15109:51:9",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "496e76616c69642070726f746f636f6c",
																				"id": 2043,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "15130:18:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_a3844f20365e6d2d8ff7b4d99e0a3b236f50e2ae8088965ed1727f40132bf411",
																					"typeString": "literal_string \"Invalid protocol\""
																				},
																				"value": "Invalid protocol"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_a3844f20365e6d2d8ff7b4d99e0a3b236f50e2ae8088965ed1727f40132bf411",
																					"typeString": "literal_string \"Invalid protocol\""
																				}
																			],
																			"id": 2042,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967277,
																				4294967277
																			],
																			"referencedDeclaration": 4294967277,
																			"src": "15123:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 2044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15123:26:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2045,
																	"nodeType": "ExpressionStatement",
																	"src": "15123:26:9"
																}
															]
														},
														"id": 2047,
														"nodeType": "IfStatement",
														"src": "14992:168:9",
														"trueBody": {
															"id": 2041,
															"nodeType": "Block",
															"src": "15053:50:9",
															"statements": [
																{
																	"expression": {
																		"id": 2039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2037,
																			"name": "yieldYakFarm",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 951,
																			"src": "15067:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 2038,
																			"name": "newAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1989,
																			"src": "15082:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15067:25:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 2040,
																	"nodeType": "ExpressionStatement",
																	"src": "15067:25:9"
																}
															]
														}
													},
													"id": 2048,
													"nodeType": "IfStatement",
													"src": "14874:286:9",
													"trueBody": {
														"id": 2028,
														"nodeType": "Block",
														"src": "14932:54:9",
														"statements": [
															{
																"expression": {
																	"id": 2026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2024,
																		"name": "benqiComptroller",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 949,
																		"src": "14946:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 2025,
																		"name": "newAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1989,
																		"src": "14965:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "14946:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2027,
																"nodeType": "ExpressionStatement",
																"src": "14946:29:9"
															}
														]
													}
												},
												"id": 2049,
												"nodeType": "IfStatement",
												"src": "14753:407:9",
												"trueBody": {
													"id": 2015,
													"nodeType": "Block",
													"src": "14815:53:9",
													"statements": [
														{
															"expression": {
																"id": 2013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2011,
																	"name": "traderJoeRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "14829:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2012,
																	"name": "newAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1989,
																	"src": "14847:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "14829:28:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2014,
															"nodeType": "ExpressionStatement",
															"src": "14829:28:9"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2051,
															"name": "protocol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1987,
															"src": "15206:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														},
														{
															"id": 2052,
															"name": "newAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1989,
															"src": "15216:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2050,
														"name": "ProtocolAddressUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "15183:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (string memory,address)"
														}
													},
													"id": 2053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15183:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2054,
												"nodeType": "EmitStatement",
												"src": "15178:49:9"
											}
										]
									},
									"functionSelector": "d076e8b4",
									"id": 2056,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1992,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1991,
												"name": "onlyOwner",
												"nameLocations": [
													"14654:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "14654:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "14654:9:9"
										}
									],
									"name": "updateProtocolAddress",
									"nameLocation": "14577:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "protocol",
												"nameLocation": "14615:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "14599:24:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1986,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14599:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "14633:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "14625:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14625:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14598:46:9"
									},
									"returnParameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14664:0:9"
									},
									"scope": 2100,
									"src": "14568:666:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2098,
										"nodeType": "Block",
										"src": "15345:283:9",
										"statements": [
											{
												"expression": {
													"id": 2071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2067,
															"name": "currentYields",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "15355:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_YieldData_$932_storage",
																"typeString": "struct YieldOptimizer.YieldData storage ref"
															}
														},
														"id": 2069,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "15369:8:9",
														"memberName": "benqiAPY",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 925,
														"src": "15355:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2070,
														"name": "_benqiAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2058,
														"src": "15380:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15355:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2072,
												"nodeType": "ExpressionStatement",
												"src": "15355:34:9"
											},
											{
												"expression": {
													"id": 2077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2073,
															"name": "currentYields",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "15399:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_YieldData_$932_storage",
																"typeString": "struct YieldOptimizer.YieldData storage ref"
															}
														},
														"id": 2075,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "15413:12:9",
														"memberName": "traderJoeAPY",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 927,
														"src": "15399:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2076,
														"name": "_traderJoeAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2060,
														"src": "15428:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15399:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2078,
												"nodeType": "ExpressionStatement",
												"src": "15399:42:9"
											},
											{
												"expression": {
													"id": 2083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2079,
															"name": "currentYields",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "15451:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_YieldData_$932_storage",
																"typeString": "struct YieldOptimizer.YieldData storage ref"
															}
														},
														"id": 2081,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "15465:11:9",
														"memberName": "yieldYakAPY",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 929,
														"src": "15451:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2082,
														"name": "_yieldYakAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2062,
														"src": "15479:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15451:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2084,
												"nodeType": "ExpressionStatement",
												"src": "15451:40:9"
											},
											{
												"expression": {
													"id": 2090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2085,
															"name": "currentYields",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "15501:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_YieldData_$932_storage",
																"typeString": "struct YieldOptimizer.YieldData storage ref"
															}
														},
														"id": 2087,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "15515:11:9",
														"memberName": "lastUpdated",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 931,
														"src": "15501:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2088,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "15529:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2089,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15535:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "15529:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15501:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2091,
												"nodeType": "ExpressionStatement",
												"src": "15501:43:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2093,
															"name": "_benqiAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2058,
															"src": "15582:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2094,
															"name": "_traderJoeAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2060,
															"src": "15593:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2095,
															"name": "_yieldYakAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2062,
															"src": "15608:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2092,
														"name": "YieldsUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "15568:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 2096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15568:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2097,
												"nodeType": "EmitStatement",
												"src": "15563:58:9"
											}
										]
									},
									"functionSelector": "99e32287",
									"id": 2099,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2065,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2064,
												"name": "onlyOwner",
												"nameLocations": [
													"15335:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "15335:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "15335:9:9"
										}
									],
									"name": "updateYields",
									"nameLocation": "15249:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "_benqiAPY",
												"nameLocation": "15270:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "15262:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15262:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "_traderJoeAPY",
												"nameLocation": "15289:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "15281:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15281:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "_yieldYakAPY",
												"nameLocation": "15312:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "15304:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15304:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15261:64:9"
									},
									"returnParameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15345:0:9"
									},
									"scope": 2100,
									"src": "15240:388:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2101,
							"src": "405:15225:9",
							"usedErrors": [
								13,
								18,
								823
							],
							"usedEvents": [
								24,
								968,
								974,
								982,
								988,
								994
							]
						}
					],
					"src": "32:15598:9"
				},
				"id": 9
			},
			"contracts/src/interfaces/IBenqi.sol": {
				"ast": {
					"absolutePath": "contracts/src/interfaces/IBenqi.sol",
					"exportedSymbols": {
						"IBenqi": [
							2218
						],
						"IBenqiComptroller": [
							2287
						],
						"IBenqiLens": [
							2354
						]
					},
					"id": 2355,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2102,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBenqi",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2103,
								"nodeType": "StructuredDocumentation",
								"src": "58:170:10",
								"text": " @title IBenqi\n @dev Interface for Benqi lending protocol interactions\n @notice This interface covers the main Benqi functions needed for yield optimization"
							},
							"fullyImplemented": false,
							"id": 2218,
							"linearizedBaseContracts": [
								2218
							],
							"name": "IBenqi",
							"nameLocation": "239:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2104,
										"nodeType": "StructuredDocumentation",
										"src": "252:136:10",
										"text": " @dev Supply AVAX to the protocol and receive qiAVAX tokens\n @notice Payable function that accepts AVAX deposits"
									},
									"functionSelector": "1249c58b",
									"id": 2107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "402:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "406:2:10"
									},
									"returnParameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "425:0:10"
									},
									"scope": 2218,
									"src": "393:33:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2108,
										"nodeType": "StructuredDocumentation",
										"src": "432:186:10",
										"text": " @dev Redeem qiAVAX tokens for underlying AVAX\n @param redeemTokens Amount of qiAVAX tokens to redeem\n @return success Whether the redemption was successful"
									},
									"functionSelector": "db006a75",
									"id": 2115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "redeem",
									"nameLocation": "632:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "redeemTokens",
												"nameLocation": "647:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "639:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:22:10"
									},
									"returnParameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "687:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "679:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "679:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "678:17:10"
									},
									"scope": 2218,
									"src": "623:73:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2116,
										"nodeType": "StructuredDocumentation",
										"src": "702:209:10",
										"text": " @dev Redeem qiAVAX tokens for a specific amount of underlying AVAX\n @param redeemAmount Amount of underlying AVAX to redeem\n @return success Whether the redemption was successful"
									},
									"functionSelector": "852a12e3",
									"id": 2123,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "redeemUnderlying",
									"nameLocation": "925:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "redeemAmount",
												"nameLocation": "950:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "942:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:22:10"
									},
									"returnParameters": {
										"id": 2122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "990:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "982:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:17:10"
									},
									"scope": 2218,
									"src": "916:83:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2124,
										"nodeType": "StructuredDocumentation",
										"src": "1005:127:10",
										"text": " @dev Get the current supply rate per timestamp\n @return rate The current supply APY in mantissa format"
									},
									"functionSelector": "d3bd2c72",
									"id": 2129,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supplyRatePerTimestamp",
									"nameLocation": "1146:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1168:2:10"
									},
									"returnParameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "rate",
												"nameLocation": "1202:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "1194:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1194:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1193:14:10"
									},
									"scope": 2218,
									"src": "1137:71:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2130,
										"nodeType": "StructuredDocumentation",
										"src": "1214:127:10",
										"text": " @dev Get the current borrow rate per timestamp\n @return rate The current borrow APY in mantissa format"
									},
									"functionSelector": "cd91801c",
									"id": 2135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "borrowRatePerTimestamp",
									"nameLocation": "1355:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1377:2:10"
									},
									"returnParameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "rate",
												"nameLocation": "1411:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2135,
												"src": "1403:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1403:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:14:10"
									},
									"scope": 2218,
									"src": "1346:71:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2136,
										"nodeType": "StructuredDocumentation",
										"src": "1423:141:10",
										"text": " @dev Get the exchange rate from qiAVAX to underlying AVAX\n @return rate The current exchange rate in mantissa format"
									},
									"functionSelector": "182df0f5",
									"id": 2141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exchangeRateStored",
									"nameLocation": "1578:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1596:2:10"
									},
									"returnParameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "rate",
												"nameLocation": "1630:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "1622:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:14:10"
									},
									"scope": 2218,
									"src": "1569:67:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2142,
										"nodeType": "StructuredDocumentation",
										"src": "1642:140:10",
										"text": " @dev Get the current exchange rate (may accrue interest)\n @return rate The current exchange rate in mantissa format"
									},
									"functionSelector": "bd6d894d",
									"id": 2147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exchangeRateCurrent",
									"nameLocation": "1796:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1815:2:10"
									},
									"returnParameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "rate",
												"nameLocation": "1844:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "1836:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1836:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1835:14:10"
									},
									"scope": 2218,
									"src": "1787:63:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2148,
										"nodeType": "StructuredDocumentation",
										"src": "1856:151:10",
										"text": " @dev Get account's current qiAVAX balance\n @param account The address to check\n @return balance The qiAVAX token balance"
									},
									"functionSelector": "70a08231",
									"id": 2155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2021:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2039:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "2031:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2031:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2030:17:10"
									},
									"returnParameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "2079:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "2071:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2071:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2070:17:10"
									},
									"scope": 2218,
									"src": "2012:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2156,
										"nodeType": "StructuredDocumentation",
										"src": "2094:155:10",
										"text": " @dev Get account's underlying AVAX balance\n @param account The address to check\n @return balance The underlying AVAX balance"
									},
									"functionSelector": "3af9e669",
									"id": 2163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfUnderlying",
									"nameLocation": "2263:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2291:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "2283:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2283:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2282:17:10"
									},
									"returnParameters": {
										"id": 2162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "2326:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "2318:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2318:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2317:17:10"
									},
									"scope": 2218,
									"src": "2254:81:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2164,
										"nodeType": "StructuredDocumentation",
										"src": "2341:109:10",
										"text": " @dev Get the total supply of qiAVAX tokens\n @return supply Total qiAVAX token supply"
									},
									"functionSelector": "18160ddd",
									"id": 2169,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2464:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2475:2:10"
									},
									"returnParameters": {
										"id": 2168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "supply",
												"nameLocation": "2509:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2169,
												"src": "2501:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2501:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2500:16:10"
									},
									"scope": 2218,
									"src": "2455:62:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2170,
										"nodeType": "StructuredDocumentation",
										"src": "2523:92:10",
										"text": " @dev Get the total reserves\n @return reserves Total reserves amount"
									},
									"functionSelector": "8f840ddd",
									"id": 2175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalReserves",
									"nameLocation": "2629:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2642:2:10"
									},
									"returnParameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "reserves",
												"nameLocation": "2676:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "2668:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:18:10"
									},
									"scope": 2218,
									"src": "2620:66:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2176,
										"nodeType": "StructuredDocumentation",
										"src": "2692:105:10",
										"text": " @dev Get the total cash (available liquidity)\n @return cash Total available cash"
									},
									"functionSelector": "3b1d21a2",
									"id": 2181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCash",
									"nameLocation": "2811:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2818:2:10"
									},
									"returnParameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "cash",
												"nameLocation": "2852:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "2844:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2844:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2843:14:10"
									},
									"scope": 2218,
									"src": "2802:56:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2182,
										"nodeType": "StructuredDocumentation",
										"src": "2864:119:10",
										"text": " @dev Accrue interest and update rates\n @return success Whether interest accrual was successful"
									},
									"functionSelector": "a6afed95",
									"id": 2187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "accrueInterest",
									"nameLocation": "2997:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3011:2:10"
									},
									"returnParameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "3040:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2187,
												"src": "3032:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3032:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3031:17:10"
									},
									"scope": 2218,
									"src": "2988:61:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2188,
										"nodeType": "StructuredDocumentation",
										"src": "3055:176:10",
										"text": " @dev Transfer qiAVAX tokens\n @param to Recipient address\n @param amount Amount to transfer\n @return success Whether transfer was successful"
									},
									"functionSelector": "a9059cbb",
									"id": 2197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3245:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3262:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "3254:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3254:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3274:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "3266:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3266:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3253:28:10"
									},
									"returnParameters": {
										"id": 2196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2195,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "3305:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "3300:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2194,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3300:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3299:14:10"
									},
									"scope": 2218,
									"src": "3236:78:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2198,
										"nodeType": "StructuredDocumentation",
										"src": "3320:188:10",
										"text": " @dev Approve qiAVAX token spending\n @param spender Address to approve\n @param amount Amount to approve\n @return success Whether approval was successful"
									},
									"functionSelector": "095ea7b3",
									"id": 2207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3522:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3538:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "3530:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3530:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3555:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "3547:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3547:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3529:33:10"
									},
									"returnParameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "3586:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "3581:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3581:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3580:14:10"
									},
									"scope": 2218,
									"src": "3513:82:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2208,
										"nodeType": "StructuredDocumentation",
										"src": "3601:183:10",
										"text": " @dev Get allowance for qiAVAX tokens\n @param owner Token owner address\n @param spender Spender address\n @return allowance Current allowance amount"
									},
									"functionSelector": "dd62ed3e",
									"id": 2217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3798:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3816:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "3808:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3831:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "3823:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3823:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:32:10"
									},
									"returnParameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "3871:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "3863:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:19:10"
									},
									"scope": 2218,
									"src": "3789:93:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2355,
							"src": "229:3655:10",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBenqiComptroller",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2219,
								"nodeType": "StructuredDocumentation",
								"src": "3886:84:10",
								"text": " @title IBenqiComptroller\n @dev Interface for Benqi Comptroller contract"
							},
							"fullyImplemented": false,
							"id": 2287,
							"linearizedBaseContracts": [
								2287
							],
							"name": "IBenqiComptroller",
							"nameLocation": "3981:17:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2220,
										"nodeType": "StructuredDocumentation",
										"src": "4005:174:10",
										"text": " @dev Enter markets to enable borrowing\n @param qiTokens Array of qiToken addresses to enter\n @return results Array of error codes (0 = success)"
									},
									"functionSelector": "c2998238",
									"id": 2229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "enterMarkets",
									"nameLocation": "4193:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "qiTokens",
												"nameLocation": "4225:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "4206:27:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2221,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4206:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2222,
													"nodeType": "ArrayTypeName",
													"src": "4206:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4205:29:10"
									},
									"returnParameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "results",
												"nameLocation": "4270:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "4253:24:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2225,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4253:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2226,
													"nodeType": "ArrayTypeName",
													"src": "4253:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4252:26:10"
									},
									"scope": 2287,
									"src": "4184:95:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2230,
										"nodeType": "StructuredDocumentation",
										"src": "4285:173:10",
										"text": " @dev Exit a market to disable borrowing\n @param qiToken The qiToken address to exit\n @return success Whether exit was successful (0 = success)"
									},
									"functionSelector": "ede4edd0",
									"id": 2237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exitMarket",
									"nameLocation": "4472:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "qiToken",
												"nameLocation": "4491:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "4483:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4483:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4482:17:10"
									},
									"returnParameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4526:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "4518:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4518:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4517:17:10"
									},
									"scope": 2287,
									"src": "4463:72:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2238,
										"nodeType": "StructuredDocumentation",
										"src": "4541:252:10",
										"text": " @dev Get account's liquidity information\n @param account Account address to check\n @return error Error code (0 = success)\n @return liquidity Account liquidity in USD\n @return shortfall Account shortfall in USD"
									},
									"functionSelector": "5ec88c79",
									"id": 2249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAccountLiquidity",
									"nameLocation": "4807:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4835:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "4827:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:17:10"
									},
									"returnParameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "4899:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "4891:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4891:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2245,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "4914:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "4906:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4906:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "shortfall",
												"nameLocation": "4933:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "4925:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4925:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4890:53:10"
									},
									"scope": 2287,
									"src": "4798:146:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2250,
										"nodeType": "StructuredDocumentation",
										"src": "4950:228:10",
										"text": " @dev Check if an address is a listed market\n @param qiToken The qiToken address to check\n @return isListed Whether the market is listed\n @return collateralFactorMantissa The collateral factor"
									},
									"functionSelector": "8e8f294b",
									"id": 2259,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "markets",
									"nameLocation": "5192:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "qiToken",
												"nameLocation": "5208:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "5200:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5200:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5199:17:10"
									},
									"returnParameters": {
										"id": 2258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "isListed",
												"nameLocation": "5269:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "5264:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5264:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2257,
												"mutability": "mutable",
												"name": "collateralFactorMantissa",
												"nameLocation": "5287:24:10",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "5279:32:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5279:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5263:49:10"
									},
									"scope": 2287,
									"src": "5183:130:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2260,
										"nodeType": "StructuredDocumentation",
										"src": "5319:198:10",
										"text": " @dev Get the current QI reward speeds\n @param qiToken The qiToken address\n @return supplySpeed QI supply reward speed\n @return borrowSpeed QI borrow reward speed"
									},
									"functionSelector": "ff278d2d",
									"id": 2269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewardSpeeds",
									"nameLocation": "5531:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "qiToken",
												"nameLocation": "5552:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2269,
												"src": "5544:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5544:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5543:17:10"
									},
									"returnParameters": {
										"id": 2268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "supplySpeed",
												"nameLocation": "5616:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2269,
												"src": "5608:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5608:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "borrowSpeed",
												"nameLocation": "5637:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2269,
												"src": "5629:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5629:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5607:42:10"
									},
									"scope": 2287,
									"src": "5522:128:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2270,
										"nodeType": "StructuredDocumentation",
										"src": "5656:153:10",
										"text": " @dev Claim accrued QI rewards\n @param holder Address to claim rewards for\n @param qiTokens Array of qiTokens to claim from"
									},
									"functionSelector": "3685ffe7",
									"id": 2278,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimReward",
									"nameLocation": "5823:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "5843:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2278,
												"src": "5835:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5835:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2275,
												"mutability": "mutable",
												"name": "qiTokens",
												"nameLocation": "5870:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2278,
												"src": "5851:27:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2273,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5851:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2274,
													"nodeType": "ArrayTypeName",
													"src": "5851:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5834:45:10"
									},
									"returnParameters": {
										"id": 2277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5888:0:10"
									},
									"scope": 2287,
									"src": "5814:75:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2279,
										"nodeType": "StructuredDocumentation",
										"src": "5895:156:10",
										"text": " @dev Get accrued QI rewards for an account\n @param holder Address to check rewards for\n @return rewards Accrued reward amount"
									},
									"functionSelector": "007e3c46",
									"id": 2286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewardAccrued",
									"nameLocation": "6065:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "6087:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "6079:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6079:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6078:16:10"
									},
									"returnParameters": {
										"id": 2285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2284,
												"mutability": "mutable",
												"name": "rewards",
												"nameLocation": "6126:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "6118:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6118:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6117:17:10"
									},
									"scope": 2287,
									"src": "6056:79:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2355,
							"src": "3971:2166:10",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBenqiLens",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2288,
								"nodeType": "StructuredDocumentation",
								"src": "6139:98:10",
								"text": " @title IBenqiLens\n @dev Interface for Benqi Lens contract (for reading protocol data)"
							},
							"fullyImplemented": false,
							"id": 2354,
							"linearizedBaseContracts": [
								2354
							],
							"name": "IBenqiLens",
							"nameLocation": "6248:10:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IBenqiLens.QiTokenMetadata",
									"id": 2317,
									"members": [
										{
											"constant": false,
											"id": 2290,
											"mutability": "mutable",
											"name": "qiToken",
											"nameLocation": "6306:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 2317,
											"src": "6298:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2289,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6298:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2292,
											"mutability": "mutable",
											"name": "exchangeRateCurrent",
											"nameLocation": "6331:19:10",
											"nodeType": "VariableDeclaration",
											"scope": 2317,
											"src": "6323:27:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2291,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6323:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2294,
											"mutability": "mutable",
											"name": "supplyRatePerTimestamp",
											"nameLocation": "6368:22:10",
											"nodeType": "VariableDeclaration",
											"scope": 2317,
											"src": "6360:30:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2293,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6360:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2296,
											"mutability": "mutable",
											"name": "borrowRatePerTimestamp",
											"nameLocation": "6408:22:10",
											"nodeType": "VariableDeclaration",
											"scope": 2317,
											"src": "6400:30:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2295,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6400:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2298,
											"mutability": "mutable",
											"name": "reserveFactorMantissa",
											"nameLocation": "6448:21:10",
											"nodeType": "VariableDeclaration",
											"scope": 2317,
											"src": "6440:29:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2297,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6440:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2300,
											"mutability": "mutable",
											"name": "totalBorrows",
											"nameLocation": "6487:12:10",
											"nodeType": "VariableDeclaration",
											"scope": 2317,
											"src": "6479:20:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2299,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6479:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2302,
											"mutability": "mutable",
											"name": "totalReserves",
											"nameLocation": "6517:13:10",
											"nodeType": "VariableDeclaration",
											"scope": 2317,
											"src": "6509:21:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2301,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6509:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2304,
											"mutability": "mutable",
											"name": "totalSupply",
											"nameLocation": "6548:11:10",
											"nodeType": "VariableDeclaration",
											"scope": 2317,
											"src": "6540:19:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2303,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6540:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2306,
											"mutability": "mutable",
											"name": "totalCash",
											"nameLocation": "6577:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 2317,
											"src": "6569:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2305,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6569:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2308,
											"mutability": "mutable",
											"name": "isListed",
											"nameLocation": "6601:8:10",
											"nodeType": "VariableDeclaration",
											"scope": 2317,
											"src": "6596:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2307,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "6596:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2310,
											"mutability": "mutable",
											"name": "collateralFactorMantissa",
											"nameLocation": "6627:24:10",
											"nodeType": "VariableDeclaration",
											"scope": 2317,
											"src": "6619:32:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2309,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6619:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2312,
											"mutability": "mutable",
											"name": "underlyingAssetAddress",
											"nameLocation": "6669:22:10",
											"nodeType": "VariableDeclaration",
											"scope": 2317,
											"src": "6661:30:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2311,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6661:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2314,
											"mutability": "mutable",
											"name": "qiTokenDecimals",
											"nameLocation": "6709:15:10",
											"nodeType": "VariableDeclaration",
											"scope": 2317,
											"src": "6701:23:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2313,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6701:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2316,
											"mutability": "mutable",
											"name": "underlyingDecimals",
											"nameLocation": "6742:18:10",
											"nodeType": "VariableDeclaration",
											"scope": 2317,
											"src": "6734:26:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2315,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6734:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "QiTokenMetadata",
									"nameLocation": "6272:15:10",
									"nodeType": "StructDefinition",
									"scope": 2354,
									"src": "6265:502:10",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2318,
										"nodeType": "StructuredDocumentation",
										"src": "6773:150:10",
										"text": " @dev Get metadata for a qiToken\n @param qiToken The qiToken address\n @return metadata Complete metadata for the qiToken"
									},
									"functionSelector": "b04a42c6",
									"id": 2326,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "qiTokenMetadata",
									"nameLocation": "6937:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "qiToken",
												"nameLocation": "6961:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "6953:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6953:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6952:17:10"
									},
									"returnParameters": {
										"id": 2325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "7011:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "6988:31:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_QiTokenMetadata_$2317_memory_ptr",
													"typeString": "struct IBenqiLens.QiTokenMetadata"
												},
												"typeName": {
													"id": 2323,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2322,
														"name": "QiTokenMetadata",
														"nameLocations": [
															"6988:15:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2317,
														"src": "6988:15:10"
													},
													"referencedDeclaration": 2317,
													"src": "6988:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_QiTokenMetadata_$2317_storage_ptr",
														"typeString": "struct IBenqiLens.QiTokenMetadata"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6987:33:10"
									},
									"scope": 2354,
									"src": "6928:93:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2327,
										"nodeType": "StructuredDocumentation",
										"src": "7027:162:10",
										"text": " @dev Get metadata for all qiTokens\n @param qiTokens Array of qiToken addresses\n @return metadata Array of metadata for each qiToken"
									},
									"functionSelector": "d900bd35",
									"id": 2337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "qiTokenMetadataAll",
									"nameLocation": "7203:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "qiTokens",
												"nameLocation": "7241:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2337,
												"src": "7222:27:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2328,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "7222:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2329,
													"nodeType": "ArrayTypeName",
													"src": "7222:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7221:29:10"
									},
									"returnParameters": {
										"id": 2336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "7310:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2337,
												"src": "7285:33:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_QiTokenMetadata_$2317_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IBenqiLens.QiTokenMetadata[]"
												},
												"typeName": {
													"baseType": {
														"id": 2333,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2332,
															"name": "QiTokenMetadata",
															"nameLocations": [
																"7285:15:10"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2317,
															"src": "7285:15:10"
														},
														"referencedDeclaration": 2317,
														"src": "7285:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_QiTokenMetadata_$2317_storage_ptr",
															"typeString": "struct IBenqiLens.QiTokenMetadata"
														}
													},
													"id": 2334,
													"nodeType": "ArrayTypeName",
													"src": "7285:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_QiTokenMetadata_$2317_storage_$dyn_storage_ptr",
														"typeString": "struct IBenqiLens.QiTokenMetadata[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7284:35:10"
									},
									"scope": 2354,
									"src": "7194:126:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2338,
										"nodeType": "StructuredDocumentation",
										"src": "7326:307:10",
										"text": " @dev Get account snapshot for a qiToken\n @param qiToken The qiToken address\n @param account The account address\n @return error Error code\n @return balance qiToken balance\n @return borrowBalance Borrow balance\n @return exchangeRateMantissa Exchange rate"
									},
									"functionSelector": "32221cf6",
									"id": 2353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAccountSnapshot",
									"nameLocation": "7647:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2340,
												"mutability": "mutable",
												"name": "qiToken",
												"nameLocation": "7674:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "7666:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7666:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7691:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "7683:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7683:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7665:34:10"
									},
									"returnParameters": {
										"id": 2352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2345,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "7755:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "7747:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7747:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2347,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "7770:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "7762:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7762:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2349,
												"mutability": "mutable",
												"name": "borrowBalance",
												"nameLocation": "7787:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "7779:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7779:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2351,
												"mutability": "mutable",
												"name": "exchangeRateMantissa",
												"nameLocation": "7810:20:10",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "7802:28:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7802:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7746:85:10"
									},
									"scope": 2354,
									"src": "7638:194:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2355,
							"src": "6238:1596:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:7802:10"
				},
				"id": 10
			},
			"contracts/src/interfaces/ITraderJoe.sol": {
				"ast": {
					"absolutePath": "contracts/src/interfaces/ITraderJoe.sol",
					"exportedSymbols": {
						"ITraderJoe": [
							2486
						],
						"ITraderJoeFactory": [
							2508
						],
						"ITraderJoePair": [
							2556
						]
					},
					"id": 2557,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2356,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITraderJoe",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2357,
								"nodeType": "StructuredDocumentation",
								"src": "58:180:11",
								"text": " @title ITraderJoe\n @dev Interface for TraderJoe DEX interactions\n @notice This interface covers the main TraderJoe router functions needed for our yield optimization"
							},
							"fullyImplemented": false,
							"id": 2486,
							"linearizedBaseContracts": [
								2486
							],
							"name": "ITraderJoe",
							"nameLocation": "249:10:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2358,
										"nodeType": "StructuredDocumentation",
										"src": "266:592:11",
										"text": " @dev Add liquidity to AVAX/Token pair\n @param token The ERC20 token to pair with AVAX\n @param amountTokenDesired Amount of tokens to add as liquidity\n @param amountTokenMin Minimum amount of tokens (slippage protection)\n @param amountAVAXMin Minimum amount of AVAX (slippage protection)\n @param to Address to receive LP tokens\n @param deadline Transaction deadline timestamp\n @return amountToken Actual amount of tokens added\n @return amountAVAX Actual amount of AVAX added\n @return liquidity Amount of LP tokens minted"
									},
									"functionSelector": "f91b3f72",
									"id": 2379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityAVAX",
									"nameLocation": "872:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "906:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "898:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "898:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "929:18:11",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "921:26:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "921:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "965:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "957:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "957:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2366,
												"mutability": "mutable",
												"name": "amountAVAXMin",
												"nameLocation": "997:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "989:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1028:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "1020:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1048:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "1040:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:174:11"
									},
									"returnParameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1097:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "1089:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "amountAVAX",
												"nameLocation": "1118:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "1110:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1110:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1138:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "1130:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1088:60:11"
									},
									"scope": 2486,
									"src": "863:286:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2380,
										"nodeType": "StructuredDocumentation",
										"src": "1155:502:11",
										"text": " @dev Remove liquidity from AVAX/Token pair\n @param token The ERC20 token paired with AVAX\n @param liquidity Amount of LP tokens to burn\n @param amountTokenMin Minimum amount of tokens to receive\n @param amountAVAXMin Minimum amount of AVAX to receive\n @param to Address to receive tokens and AVAX\n @param deadline Transaction deadline timestamp\n @return amountToken Amount of tokens received\n @return amountAVAX Amount of AVAX received"
									},
									"functionSelector": "33c6b725",
									"id": 2399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityAVAX",
									"nameLocation": "1671:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2382,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1708:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "1700:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1700:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1731:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "1723:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1723:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2386,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1758:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "1750:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1750:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2388,
												"mutability": "mutable",
												"name": "amountAVAXMin",
												"nameLocation": "1790:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "1782:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1782:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2390,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1821:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "1813:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1841:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "1833:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1690:165:11"
									},
									"returnParameters": {
										"id": 2398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2395,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1882:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "1874:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "amountAVAX",
												"nameLocation": "1903:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "1895:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1895:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1873:41:11"
									},
									"scope": 2486,
									"src": "1662:253:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2400,
										"nodeType": "StructuredDocumentation",
										"src": "1921:347:11",
										"text": " @dev Swap exact AVAX for tokens\n @param amountOutMin Minimum amount of tokens to receive\n @param path Array of token addresses representing the swap path\n @param to Address to receive tokens\n @param deadline Transaction deadline timestamp\n @return amounts Array of amounts for each step in the path"
									},
									"functionSelector": "a2a1623d",
									"id": 2415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactAVAXForTokens",
									"nameLocation": "2282:22:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2322:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "2314:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2405,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2363:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "2344:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2403,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2344:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2404,
													"nodeType": "ArrayTypeName",
													"src": "2344:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2385:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "2377:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2377:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2409,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2405:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "2397:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2304:115:11"
									},
									"returnParameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2413,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2463:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "2446:24:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2411,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2446:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2412,
													"nodeType": "ArrayTypeName",
													"src": "2446:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2445:26:11"
									},
									"scope": 2486,
									"src": "2273:199:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2416,
										"nodeType": "StructuredDocumentation",
										"src": "2478:391:11",
										"text": " @dev Swap exact tokens for AVAX\n @param amountIn Amount of tokens to swap\n @param amountOutMin Minimum amount of AVAX to receive\n @param path Array of token addresses representing the swap path\n @param to Address to receive AVAX\n @param deadline Transaction deadline timestamp\n @return amounts Array of amounts for each step in the path"
									},
									"functionSelector": "676528d1",
									"id": 2433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForAVAX",
									"nameLocation": "2883:22:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2923:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "2915:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2915:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2949:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "2941:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2941:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2423,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2990:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "2971:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2421,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2971:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2422,
													"nodeType": "ArrayTypeName",
													"src": "2971:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2425,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3012:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "3004:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2427,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3032:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "3024:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3024:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2905:141:11"
									},
									"returnParameters": {
										"id": 2432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2431,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3082:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "3065:24:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2429,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3065:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2430,
													"nodeType": "ArrayTypeName",
													"src": "3065:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3064:26:11"
									},
									"scope": 2486,
									"src": "2874:217:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2434,
										"nodeType": "StructuredDocumentation",
										"src": "3097:244:11",
										"text": " @dev Get reserves for a trading pair\n @param tokenA First token in the pair\n @param tokenB Second token in the pair\n @return reserveA Reserve amount of tokenA\n @return reserveB Reserve amount of tokenB"
									},
									"functionSelector": "d52bb6f4",
									"id": 2445,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "3355:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "3375:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "3367:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3367:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "3391:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "3383:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3383:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3366:32:11"
									},
									"returnParameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2441,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "3454:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "3446:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "3472:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "3464:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3445:36:11"
									},
									"scope": 2486,
									"src": "3346:136:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2446,
										"nodeType": "StructuredDocumentation",
										"src": "3488:457:11",
										"text": " @dev Calculate optimal amounts for adding liquidity\n @param tokenA First token address\n @param tokenB Second token address\n @param amountADesired Desired amount of tokenA\n @param amountBDesired Desired amount of tokenB\n @param amountAMin Minimum amount of tokenA\n @param amountBMin Minimum amount of tokenB\n @return amountA Optimal amount of tokenA\n @return amountB Optimal amount of tokenB"
									},
									"functionSelector": "c45e628b",
									"id": 2465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "3959:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2448,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "3982:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "3974:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3974:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2450,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "4006:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "3998:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3998:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "4030:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "4022:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4022:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "4062:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "4054:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4054:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2456,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "4094:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "4086:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2458,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "4122:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "4114:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4114:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3964:174:11"
									},
									"returnParameters": {
										"id": 2464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2461,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "4170:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "4162:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4162:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2463,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "4187:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "4179:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4161:34:11"
									},
									"scope": 2486,
									"src": "3950:246:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2466,
										"nodeType": "StructuredDocumentation",
										"src": "4202:165:11",
										"text": " @dev Get current APY for a specific LP pair\n @param pair The LP pair address\n @return apy Current APY in basis points (e.g., 800 = 8%)"
									},
									"functionSelector": "26d768e9",
									"id": 2473,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolAPY",
									"nameLocation": "4381:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "4400:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "4392:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4392:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4391:14:11"
									},
									"returnParameters": {
										"id": 2472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "apy",
												"nameLocation": "4437:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "4429:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4429:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4428:13:11"
									},
									"scope": 2486,
									"src": "4372:70:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2474,
										"nodeType": "StructuredDocumentation",
										"src": "4448:99:11",
										"text": " @dev Get the factory address\n @return factory The factory contract address"
									},
									"functionSelector": "c45a0155",
									"id": 2479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "4561:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4568:2:11"
									},
									"returnParameters": {
										"id": 2478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2477,
												"mutability": "mutable",
												"name": "factory",
												"nameLocation": "4602:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2479,
												"src": "4594:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4594:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4593:17:11"
									},
									"scope": 2486,
									"src": "4552:59:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2480,
										"nodeType": "StructuredDocumentation",
										"src": "4617:103:11",
										"text": " @dev Get the WAVAX token address\n @return WAVAX The wrapped AVAX token address"
									},
									"functionSelector": "73b295c2",
									"id": 2485,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WAVAX",
									"nameLocation": "4734:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4739:2:11"
									},
									"returnParameters": {
										"id": 2484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2483,
												"mutability": "mutable",
												"name": "WAVAX",
												"nameLocation": "4773:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "4765:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4765:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4764:15:11"
									},
									"scope": 2486,
									"src": "4725:55:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2557,
							"src": "239:4543:11",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITraderJoeFactory",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2487,
								"nodeType": "StructuredDocumentation",
								"src": "4784:84:11",
								"text": " @title ITraderJoeFactory\n @dev Interface for TraderJoe Factory contract"
							},
							"fullyImplemented": false,
							"id": 2508,
							"linearizedBaseContracts": [
								2508
							],
							"name": "ITraderJoeFactory",
							"nameLocation": "4879:17:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2488,
										"nodeType": "StructuredDocumentation",
										"src": "4903:184:11",
										"text": " @dev Get pair address for two tokens\n @param tokenA First token address\n @param tokenB Second token address\n @return pair The pair contract address"
									},
									"functionSelector": "e6a43905",
									"id": 2497,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nameLocation": "5101:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "5117:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2497,
												"src": "5109:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5109:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2492,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "5133:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2497,
												"src": "5125:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5125:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5108:32:11"
									},
									"returnParameters": {
										"id": 2496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2495,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "5172:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2497,
												"src": "5164:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5164:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5163:14:11"
									},
									"scope": 2508,
									"src": "5092:86:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2498,
										"nodeType": "StructuredDocumentation",
										"src": "5184:182:11",
										"text": " @dev Create a new trading pair\n @param tokenA First token address\n @param tokenB Second token address\n @return pair The new pair contract address"
									},
									"functionSelector": "c9c65396",
									"id": 2507,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nameLocation": "5380:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2500,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "5399:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2507,
												"src": "5391:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5391:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "5415:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2507,
												"src": "5407:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5390:32:11"
									},
									"returnParameters": {
										"id": 2506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2505,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "5449:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2507,
												"src": "5441:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5441:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5440:14:11"
									},
									"scope": 2508,
									"src": "5371:84:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2557,
							"src": "4869:588:11",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITraderJoePair",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2509,
								"nodeType": "StructuredDocumentation",
								"src": "5459:82:11",
								"text": " @title ITraderJoePair\n @dev Interface for TraderJoe LP token contract"
							},
							"fullyImplemented": false,
							"id": 2556,
							"linearizedBaseContracts": [
								2556
							],
							"name": "ITraderJoePair",
							"nameLocation": "5552:14:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2510,
										"nodeType": "StructuredDocumentation",
										"src": "5573:185:11",
										"text": " @dev Get token reserves\n @return reserve0 Reserve of token0\n @return reserve1 Reserve of token1\n @return blockTimestampLast Timestamp of last update"
									},
									"functionSelector": "0902f1ac",
									"id": 2519,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "5772:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5783:2:11"
									},
									"returnParameters": {
										"id": 2518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2513,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "5841:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2519,
												"src": "5833:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2512,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "5833:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2515,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "5859:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2519,
												"src": "5851:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2514,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "5851:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nameLocation": "5876:18:11",
												"nodeType": "VariableDeclaration",
												"scope": 2519,
												"src": "5869:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2516,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "5869:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5832:63:11"
									},
									"scope": 2556,
									"src": "5763:133:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2520,
										"nodeType": "StructuredDocumentation",
										"src": "5902:99:11",
										"text": " @dev Get token0 address\n @return token0 Address of first token in the pair"
									},
									"functionSelector": "0dfe1681",
									"id": 2525,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "6015:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6021:2:11"
									},
									"returnParameters": {
										"id": 2524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2523,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "6055:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "6047:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6047:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6046:16:11"
									},
									"scope": 2556,
									"src": "6006:57:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2526,
										"nodeType": "StructuredDocumentation",
										"src": "6069:100:11",
										"text": " @dev Get token1 address\n @return token1 Address of second token in the pair"
									},
									"functionSelector": "d21220a7",
									"id": 2531,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "6183:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6189:2:11"
									},
									"returnParameters": {
										"id": 2530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2529,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "6223:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2531,
												"src": "6215:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6215:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6214:16:11"
									},
									"scope": 2556,
									"src": "6174:57:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2532,
										"nodeType": "StructuredDocumentation",
										"src": "6237:102:11",
										"text": " @dev Get total supply of LP tokens\n @return totalSupply Total LP token supply"
									},
									"functionSelector": "18160ddd",
									"id": 2537,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "6353:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6364:2:11"
									},
									"returnParameters": {
										"id": 2536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2535,
												"mutability": "mutable",
												"name": "totalSupply",
												"nameLocation": "6398:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "6390:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6390:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6389:21:11"
									},
									"scope": 2556,
									"src": "6344:67:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2538,
										"nodeType": "StructuredDocumentation",
										"src": "6417:209:11",
										"text": " @dev Burn LP tokens and receive underlying tokens\n @param to Address to receive tokens\n @return amount0 Amount of token0 received\n @return amount1 Amount of token1 received"
									},
									"functionSelector": "89afcb44",
									"id": 2547,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "6640:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2540,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6653:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2547,
												"src": "6645:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6645:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6644:12:11"
									},
									"returnParameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "6683:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2547,
												"src": "6675:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6675:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2545,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "6700:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2547,
												"src": "6692:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6692:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6674:34:11"
									},
									"scope": 2556,
									"src": "6631:78:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2548,
										"nodeType": "StructuredDocumentation",
										"src": "6715:159:11",
										"text": " @dev Mint LP tokens by providing liquidity\n @param to Address to receive LP tokens\n @return liquidity Amount of LP tokens minted"
									},
									"functionSelector": "6a627842",
									"id": 2555,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "6888:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2550,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6901:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2555,
												"src": "6893:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6893:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6892:12:11"
									},
									"returnParameters": {
										"id": 2554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2553,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "6931:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2555,
												"src": "6923:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6923:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6922:19:11"
									},
									"scope": 2556,
									"src": "6879:63:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2557,
							"src": "5542:1402:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:6912:11"
				},
				"id": 11
			},
			"contracts/src/interfaces/IYieldYak.sol": {
				"ast": {
					"absolutePath": "contracts/src/interfaces/IYieldYak.sol",
					"exportedSymbols": {
						"IYieldYak": [
							2682
						],
						"IYieldYakFarm": [
							2824
						],
						"IYieldYakRouter": [
							2748
						]
					},
					"id": 2825,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2558,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IYieldYak",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2559,
								"nodeType": "StructuredDocumentation",
								"src": "58:185:12",
								"text": " @title IYieldYak\n @dev Interface for YieldYak yield farming protocol interactions\n @notice This interface covers the main YieldYak functions needed for yield optimization"
							},
							"fullyImplemented": false,
							"id": 2682,
							"linearizedBaseContracts": [
								2682
							],
							"name": "IYieldYak",
							"nameLocation": "254:9:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2560,
										"nodeType": "StructuredDocumentation",
										"src": "270:125:12",
										"text": " @dev Deposit AVAX into a yield farming strategy\n @notice Payable function that accepts AVAX deposits"
									},
									"functionSelector": "d0e30db0",
									"id": 2563,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "409:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:12"
									},
									"returnParameters": {
										"id": 2562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "435:0:12"
									},
									"scope": 2682,
									"src": "400:36:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2564,
										"nodeType": "StructuredDocumentation",
										"src": "442:126:12",
										"text": " @dev Deposit a specific amount of tokens into the strategy\n @param amount Amount of tokens to deposit"
									},
									"functionSelector": "6215be77",
									"id": 2569,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositToken",
									"nameLocation": "582:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2566,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "603:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2569,
												"src": "595:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "595:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "594:16:12"
									},
									"returnParameters": {
										"id": 2568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "619:0:12"
									},
									"scope": 2682,
									"src": "573:47:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2570,
										"nodeType": "StructuredDocumentation",
										"src": "626:107:12",
										"text": " @dev Withdraw tokens from the strategy\n @param amount Amount of shares to withdraw"
									},
									"functionSelector": "2e1a7d4d",
									"id": 2575,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "747:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2572,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "764:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "756:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "756:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:16:12"
									},
									"returnParameters": {
										"id": 2574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "780:0:12"
									},
									"scope": 2682,
									"src": "738:43:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2576,
										"nodeType": "StructuredDocumentation",
										"src": "787:61:12",
										"text": " @dev Withdraw all tokens from the strategy"
									},
									"functionSelector": "853828b6",
									"id": 2579,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawAll",
									"nameLocation": "862:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "873:2:12"
									},
									"returnParameters": {
										"id": 2578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "884:0:12"
									},
									"scope": 2682,
									"src": "853:32:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2580,
										"nodeType": "StructuredDocumentation",
										"src": "891:104:12",
										"text": " @dev Get the total supply of strategy shares\n @return supply Total share supply"
									},
									"functionSelector": "18160ddd",
									"id": 2585,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1009:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1020:2:12"
									},
									"returnParameters": {
										"id": 2584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "supply",
												"nameLocation": "1054:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "1046:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1045:16:12"
									},
									"scope": 2682,
									"src": "1000:62:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2586,
										"nodeType": "StructuredDocumentation",
										"src": "1068:139:12",
										"text": " @dev Get the balance of shares for an account\n @param account Account address\n @return balance Share balance"
									},
									"functionSelector": "70a08231",
									"id": 2593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1221:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1239:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "1231:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1231:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1230:17:12"
									},
									"returnParameters": {
										"id": 2592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2591,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1279:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "1271:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1270:17:12"
									},
									"scope": 2682,
									"src": "1212:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2594,
										"nodeType": "StructuredDocumentation",
										"src": "1294:137:12",
										"text": " @dev Get the total yield generated by the strategy\n @return yield Total yield in basis points (e.g., 1200 = 12%)"
									},
									"functionSelector": "01418205",
									"id": 2599,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalYield",
									"nameLocation": "1445:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:2:12"
									},
									"returnParameters": {
										"id": 2598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2597,
												"mutability": "mutable",
												"name": "yield",
												"nameLocation": "1489:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2599,
												"src": "1481:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1481:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1480:15:12"
									},
									"scope": 2682,
									"src": "1436:60:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2600,
										"nodeType": "StructuredDocumentation",
										"src": "1502:106:12",
										"text": " @dev Get the current APY of the strategy\n @return apy Current APY in basis points"
									},
									"functionSelector": "962ca496",
									"id": 2605,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentAPY",
									"nameLocation": "1622:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1635:2:12"
									},
									"returnParameters": {
										"id": 2604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2603,
												"mutability": "mutable",
												"name": "apy",
												"nameLocation": "1669:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2605,
												"src": "1661:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:13:12"
									},
									"scope": 2682,
									"src": "1613:61:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2606,
										"nodeType": "StructuredDocumentation",
										"src": "1680:115:12",
										"text": " @dev Get the price per full share\n @return price Price per share in underlying token units"
									},
									"functionSelector": "77c7b8fc",
									"id": 2611,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPricePerFullShare",
									"nameLocation": "1809:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1829:2:12"
									},
									"returnParameters": {
										"id": 2610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2609,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1863:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2611,
												"src": "1855:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1855:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1854:15:12"
									},
									"scope": 2682,
									"src": "1800:70:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2612,
										"nodeType": "StructuredDocumentation",
										"src": "1876:133:12",
										"text": " @dev Get the strategy's total deposited amount\n @return balance Total deposited balance in underlying tokens"
									},
									"functionSelector": "b69ef8a8",
									"id": 2617,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balance",
									"nameLocation": "2023:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2030:2:12"
									},
									"returnParameters": {
										"id": 2616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2615,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "2064:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "2056:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2056:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2055:17:12"
									},
									"scope": 2682,
									"src": "2014:59:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2618,
										"nodeType": "StructuredDocumentation",
										"src": "2079:117:12",
										"text": " @dev Get available funds in the strategy (not invested)\n @return available Available balance"
									},
									"functionSelector": "48a0d754",
									"id": 2623,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "available",
									"nameLocation": "2210:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2219:2:12"
									},
									"returnParameters": {
										"id": 2622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2621,
												"mutability": "mutable",
												"name": "available",
												"nameLocation": "2253:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "2245:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2245:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2244:19:12"
									},
									"scope": 2682,
									"src": "2201:63:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2624,
										"nodeType": "StructuredDocumentation",
										"src": "2270:57:12",
										"text": " @dev Harvest rewards and compound them"
									},
									"functionSelector": "4641257d",
									"id": 2627,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "harvest",
									"nameLocation": "2341:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2348:2:12"
									},
									"returnParameters": {
										"id": 2626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2359:0:12"
									},
									"scope": 2682,
									"src": "2332:28:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2628,
										"nodeType": "StructuredDocumentation",
										"src": "2366:102:12",
										"text": " @dev Get the underlying token address\n @return token Underlying token address"
									},
									"functionSelector": "fc0c546a",
									"id": 2633,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token",
									"nameLocation": "2482:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2487:2:12"
									},
									"returnParameters": {
										"id": 2632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2631,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2521:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2633,
												"src": "2513:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2513:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2512:15:12"
									},
									"scope": 2682,
									"src": "2473:55:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2634,
										"nodeType": "StructuredDocumentation",
										"src": "2534:79:12",
										"text": " @dev Get the strategy name\n @return name Strategy name"
									},
									"functionSelector": "06fdde03",
									"id": 2639,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2627:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2631:2:12"
									},
									"returnParameters": {
										"id": 2638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2637,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2671:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2639,
												"src": "2657:18:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2636,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2657:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2656:20:12"
									},
									"scope": 2682,
									"src": "2618:59:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2640,
										"nodeType": "StructuredDocumentation",
										"src": "2683:85:12",
										"text": " @dev Get the strategy symbol\n @return symbol Strategy symbol"
									},
									"functionSelector": "95d89b41",
									"id": 2645,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2782:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2788:2:12"
									},
									"returnParameters": {
										"id": 2644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2643,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "2828:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2645,
												"src": "2814:20:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2642,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2814:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2813:22:12"
									},
									"scope": 2682,
									"src": "2773:63:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2646,
										"nodeType": "StructuredDocumentation",
										"src": "2842:88:12",
										"text": " @dev Get strategy decimals\n @return decimals Number of decimals"
									},
									"functionSelector": "313ce567",
									"id": 2651,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2944:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2952:2:12"
									},
									"returnParameters": {
										"id": 2650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2649,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "2984:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2651,
												"src": "2978:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2648,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2978:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2977:16:12"
									},
									"scope": 2682,
									"src": "2935:59:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2652,
										"nodeType": "StructuredDocumentation",
										"src": "3000:178:12",
										"text": " @dev Transfer strategy shares\n @param to Recipient address\n @param amount Amount to transfer\n @return success Whether transfer was successful"
									},
									"functionSelector": "a9059cbb",
									"id": 2661,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3192:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3209:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2661,
												"src": "3201:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3201:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2656,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3221:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2661,
												"src": "3213:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3200:28:12"
									},
									"returnParameters": {
										"id": 2660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2659,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "3252:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2661,
												"src": "3247:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2658,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3247:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3246:14:12"
									},
									"scope": 2682,
									"src": "3183:78:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2662,
										"nodeType": "StructuredDocumentation",
										"src": "3267:181:12",
										"text": " @dev Approve share spending\n @param spender Address to approve\n @param amount Amount to approve\n @return success Whether approval was successful"
									},
									"functionSelector": "095ea7b3",
									"id": 2671,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3462:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2664,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3478:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "3470:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3470:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2666,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3495:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "3487:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3487:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3469:33:12"
									},
									"returnParameters": {
										"id": 2670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2669,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "3526:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "3521:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2668,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3521:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3520:14:12"
									},
									"scope": 2682,
									"src": "3453:82:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2672,
										"nodeType": "StructuredDocumentation",
										"src": "3541:185:12",
										"text": " @dev Get allowance for strategy shares\n @param owner Share owner address\n @param spender Spender address\n @return allowance Current allowance amount"
									},
									"functionSelector": "dd62ed3e",
									"id": 2681,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3740:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2674,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3758:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2681,
												"src": "3750:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3750:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2676,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3773:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2681,
												"src": "3765:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3765:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3749:32:12"
									},
									"returnParameters": {
										"id": 2680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2679,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "3813:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2681,
												"src": "3805:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:19:12"
									},
									"scope": 2682,
									"src": "3731:93:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2825,
							"src": "244:3582:12",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IYieldYakRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2683,
								"nodeType": "StructuredDocumentation",
								"src": "3828:80:12",
								"text": " @title IYieldYakRouter\n @dev Interface for YieldYak Router contract"
							},
							"fullyImplemented": false,
							"id": 2748,
							"linearizedBaseContracts": [
								2748
							],
							"name": "IYieldYakRouter",
							"nameLocation": "3919:15:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IYieldYakRouter.Strategy",
									"id": 2698,
									"members": [
										{
											"constant": false,
											"id": 2685,
											"mutability": "mutable",
											"name": "strategyAddress",
											"nameLocation": "3975:15:12",
											"nodeType": "VariableDeclaration",
											"scope": 2698,
											"src": "3967:23:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2684,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3967:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2687,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "4007:4:12",
											"nodeType": "VariableDeclaration",
											"scope": 2698,
											"src": "4000:11:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2686,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "4000:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2689,
											"mutability": "mutable",
											"name": "depositToken",
											"nameLocation": "4029:12:12",
											"nodeType": "VariableDeclaration",
											"scope": 2698,
											"src": "4021:20:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2688,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4021:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2691,
											"mutability": "mutable",
											"name": "rewardToken",
											"nameLocation": "4059:11:12",
											"nodeType": "VariableDeclaration",
											"scope": 2698,
											"src": "4051:19:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2690,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4051:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2693,
											"mutability": "mutable",
											"name": "apy",
											"nameLocation": "4088:3:12",
											"nodeType": "VariableDeclaration",
											"scope": 2698,
											"src": "4080:11:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2692,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4080:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2695,
											"mutability": "mutable",
											"name": "tvl",
											"nameLocation": "4109:3:12",
											"nodeType": "VariableDeclaration",
											"scope": 2698,
											"src": "4101:11:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2694,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4101:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2697,
											"mutability": "mutable",
											"name": "active",
											"nameLocation": "4127:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 2698,
											"src": "4122:11:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2696,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4122:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Strategy",
									"nameLocation": "3948:8:12",
									"nodeType": "StructDefinition",
									"scope": 2748,
									"src": "3941:199:12",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2699,
										"nodeType": "StructuredDocumentation",
										"src": "4146:108:12",
										"text": " @dev Get all available strategies\n @return strategies Array of strategy information"
									},
									"functionSelector": "c3b28864",
									"id": 2706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAllStrategies",
									"nameLocation": "4268:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4284:2:12"
									},
									"returnParameters": {
										"id": 2705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2704,
												"mutability": "mutable",
												"name": "strategies",
												"nameLocation": "4328:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2706,
												"src": "4310:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Strategy_$2698_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IYieldYakRouter.Strategy[]"
												},
												"typeName": {
													"baseType": {
														"id": 2702,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2701,
															"name": "Strategy",
															"nameLocations": [
																"4310:8:12"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2698,
															"src": "4310:8:12"
														},
														"referencedDeclaration": 2698,
														"src": "4310:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Strategy_$2698_storage_ptr",
															"typeString": "struct IYieldYakRouter.Strategy"
														}
													},
													"id": 2703,
													"nodeType": "ArrayTypeName",
													"src": "4310:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Strategy_$2698_storage_$dyn_storage_ptr",
														"typeString": "struct IYieldYakRouter.Strategy[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:30:12"
									},
									"scope": 2748,
									"src": "4259:81:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2707,
										"nodeType": "StructuredDocumentation",
										"src": "4346:186:12",
										"text": " @dev Get strategies for a specific token\n @param token Token address to find strategies for\n @return strategies Array of strategy information for the token"
									},
									"functionSelector": "267ae830",
									"id": 2716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getStrategiesForToken",
									"nameLocation": "4546:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2709,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4576:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2716,
												"src": "4568:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4568:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4567:15:12"
									},
									"returnParameters": {
										"id": 2715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2714,
												"mutability": "mutable",
												"name": "strategies",
												"nameLocation": "4624:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2716,
												"src": "4606:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Strategy_$2698_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IYieldYakRouter.Strategy[]"
												},
												"typeName": {
													"baseType": {
														"id": 2712,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2711,
															"name": "Strategy",
															"nameLocations": [
																"4606:8:12"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2698,
															"src": "4606:8:12"
														},
														"referencedDeclaration": 2698,
														"src": "4606:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Strategy_$2698_storage_ptr",
															"typeString": "struct IYieldYakRouter.Strategy"
														}
													},
													"id": 2713,
													"nodeType": "ArrayTypeName",
													"src": "4606:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Strategy_$2698_storage_$dyn_storage_ptr",
														"typeString": "struct IYieldYakRouter.Strategy[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4605:30:12"
									},
									"scope": 2748,
									"src": "4537:99:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2717,
										"nodeType": "StructuredDocumentation",
										"src": "4642:154:12",
										"text": " @dev Get the best strategy for a token based on APY\n @param token Token address\n @return strategy Best strategy information"
									},
									"functionSelector": "a9afd13e",
									"id": 2725,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getBestStrategy",
									"nameLocation": "4810:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2719,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4834:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2725,
												"src": "4826:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4826:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4825:15:12"
									},
									"returnParameters": {
										"id": 2724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2723,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "4880:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2725,
												"src": "4864:24:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Strategy_$2698_memory_ptr",
													"typeString": "struct IYieldYakRouter.Strategy"
												},
												"typeName": {
													"id": 2722,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2721,
														"name": "Strategy",
														"nameLocations": [
															"4864:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2698,
														"src": "4864:8:12"
													},
													"referencedDeclaration": 2698,
													"src": "4864:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Strategy_$2698_storage_ptr",
														"typeString": "struct IYieldYakRouter.Strategy"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4863:26:12"
									},
									"scope": 2748,
									"src": "4801:89:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2726,
										"nodeType": "StructuredDocumentation",
										"src": "4896:199:12",
										"text": " @dev Deposit into the best strategy for a token\n @param token Token address\n @param amount Amount to deposit\n @return strategyAddress Address of the strategy used"
									},
									"functionSelector": "5a19507b",
									"id": 2735,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositToBestStrategy",
									"nameLocation": "5109:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2728,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5139:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2735,
												"src": "5131:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5131:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2730,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5154:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2735,
												"src": "5146:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5146:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5130:31:12"
									},
									"returnParameters": {
										"id": 2734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2733,
												"mutability": "mutable",
												"name": "strategyAddress",
												"nameLocation": "5188:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 2735,
												"src": "5180:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5180:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5179:25:12"
									},
									"scope": 2748,
									"src": "5100:105:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2736,
										"nodeType": "StructuredDocumentation",
										"src": "5211:248:12",
										"text": " @dev Get estimated returns for a deposit\n @param strategyAddress Strategy to check\n @param amount Deposit amount\n @param timeHorizon Time horizon in seconds\n @return estimatedReturn Estimated return amount"
									},
									"functionSelector": "eccda6af",
									"id": 2747,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getEstimatedReturn",
									"nameLocation": "5473:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2738,
												"mutability": "mutable",
												"name": "strategyAddress",
												"nameLocation": "5500:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 2747,
												"src": "5492:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5492:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2740,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5525:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2747,
												"src": "5517:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5517:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2742,
												"mutability": "mutable",
												"name": "timeHorizon",
												"nameLocation": "5541:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2747,
												"src": "5533:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5533:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5491:62:12"
									},
									"returnParameters": {
										"id": 2746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2745,
												"mutability": "mutable",
												"name": "estimatedReturn",
												"nameLocation": "5609:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 2747,
												"src": "5601:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5600:25:12"
									},
									"scope": 2748,
									"src": "5464:162:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2825,
							"src": "3909:1719:12",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IYieldYakFarm",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2749,
								"nodeType": "StructuredDocumentation",
								"src": "5630:107:12",
								"text": " @title IYieldYakFarm\n @dev Interface for YieldYak Farm contracts (specific farming strategies)"
							},
							"fullyImplemented": false,
							"id": 2824,
							"linearizedBaseContracts": [
								2824
							],
							"name": "IYieldYakFarm",
							"nameLocation": "5748:13:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2750,
										"nodeType": "StructuredDocumentation",
										"src": "5768:85:12",
										"text": " @dev Stake tokens in the farm\n @param amount Amount to stake"
									},
									"functionSelector": "a694fc3a",
									"id": 2755,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "5867:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5881:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2755,
												"src": "5873:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5873:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5872:16:12"
									},
									"returnParameters": {
										"id": 2754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5897:0:12"
									},
									"scope": 2824,
									"src": "5858:40:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2756,
										"nodeType": "StructuredDocumentation",
										"src": "5904:91:12",
										"text": " @dev Unstake tokens from the farm\n @param amount Amount to unstake"
									},
									"functionSelector": "2e17de78",
									"id": 2761,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unstake",
									"nameLocation": "6009:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2758,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6025:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2761,
												"src": "6017:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6017:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6016:16:12"
									},
									"returnParameters": {
										"id": 2760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6041:0:12"
									},
									"scope": 2824,
									"src": "6000:42:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2762,
										"nodeType": "StructuredDocumentation",
										"src": "6048:45:12",
										"text": " @dev Claim pending rewards"
									},
									"functionSelector": "372500ab",
									"id": 2765,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewards",
									"nameLocation": "6107:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6119:2:12"
									},
									"returnParameters": {
										"id": 2764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6130:0:12"
									},
									"scope": 2824,
									"src": "6098:33:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2766,
										"nodeType": "StructuredDocumentation",
										"src": "6137:147:12",
										"text": " @dev Get pending reward amount for an account\n @param account Account address\n @return rewards Pending reward amount"
									},
									"functionSelector": "31d7a262",
									"id": 2773,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pendingRewards",
									"nameLocation": "6298:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2768,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6321:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2773,
												"src": "6313:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6313:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:17:12"
									},
									"returnParameters": {
										"id": 2772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2771,
												"mutability": "mutable",
												"name": "rewards",
												"nameLocation": "6361:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2773,
												"src": "6353:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6353:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6352:17:12"
									},
									"scope": 2824,
									"src": "6289:81:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2774,
										"nodeType": "StructuredDocumentation",
										"src": "6376:133:12",
										"text": " @dev Get staked balance for an account\n @param account Account address\n @return balance Staked balance"
									},
									"functionSelector": "60217267",
									"id": 2781,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stakedBalance",
									"nameLocation": "6523:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2776,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6545:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2781,
												"src": "6537:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6537:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6536:17:12"
									},
									"returnParameters": {
										"id": 2780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2779,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "6585:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2781,
												"src": "6577:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6576:17:12"
									},
									"scope": 2824,
									"src": "6514:80:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2782,
										"nodeType": "StructuredDocumentation",
										"src": "6600:106:12",
										"text": " @dev Get total staked amount in the farm\n @return totalStaked Total staked amount"
									},
									"functionSelector": "817b1cd2",
									"id": 2787,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalStaked",
									"nameLocation": "6720:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6731:2:12"
									},
									"returnParameters": {
										"id": 2786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2785,
												"mutability": "mutable",
												"name": "totalStaked",
												"nameLocation": "6765:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "6757:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6757:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:21:12"
									},
									"scope": 2824,
									"src": "6711:67:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2788,
										"nodeType": "StructuredDocumentation",
										"src": "6784:82:12",
										"text": " @dev Get reward rate per second\n @return rate Reward rate"
									},
									"functionSelector": "7b0a47ee",
									"id": 2793,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewardRate",
									"nameLocation": "6880:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6890:2:12"
									},
									"returnParameters": {
										"id": 2792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2791,
												"mutability": "mutable",
												"name": "rate",
												"nameLocation": "6924:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2793,
												"src": "6916:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6916:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6915:14:12"
									},
									"scope": 2824,
									"src": "6871:59:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2794,
										"nodeType": "StructuredDocumentation",
										"src": "6936:96:12",
										"text": " @dev Get reward token address\n @return rewardToken Reward token address"
									},
									"functionSelector": "f7c618c1",
									"id": 2799,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewardToken",
									"nameLocation": "7046:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7057:2:12"
									},
									"returnParameters": {
										"id": 2798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2797,
												"mutability": "mutable",
												"name": "rewardToken",
												"nameLocation": "7091:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2799,
												"src": "7083:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7083:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7082:21:12"
									},
									"scope": 2824,
									"src": "7037:67:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2800,
										"nodeType": "StructuredDocumentation",
										"src": "7110:99:12",
										"text": " @dev Get staking token address\n @return stakingToken Staking token address"
									},
									"functionSelector": "72f702f3",
									"id": 2805,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stakingToken",
									"nameLocation": "7223:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7235:2:12"
									},
									"returnParameters": {
										"id": 2804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2803,
												"mutability": "mutable",
												"name": "stakingToken",
												"nameLocation": "7269:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2805,
												"src": "7261:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7261:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7260:22:12"
									},
									"scope": 2824,
									"src": "7214:69:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2806,
										"nodeType": "StructuredDocumentation",
										"src": "7289:60:12",
										"text": " @dev Emergency withdraw (forfeit rewards)"
									},
									"functionSelector": "db2e21bc",
									"id": 2809,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nameLocation": "7363:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7380:2:12"
									},
									"returnParameters": {
										"id": 2808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7391:0:12"
									},
									"scope": 2824,
									"src": "7354:38:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2810,
										"nodeType": "StructuredDocumentation",
										"src": "7398:280:12",
										"text": " @dev Get farm information\n @return stakingToken Staking token address\n @return rewardToken Reward token address\n @return totalStaked Total staked amount\n @return rewardRate Current reward rate\n @return active Whether farm is active"
									},
									"functionSelector": "09434f28",
									"id": 2823,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFarmInfo",
									"nameLocation": "7692:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7703:2:12"
									},
									"returnParameters": {
										"id": 2822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2813,
												"mutability": "mutable",
												"name": "stakingToken",
												"nameLocation": "7774:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2823,
												"src": "7766:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7766:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2815,
												"mutability": "mutable",
												"name": "rewardToken",
												"nameLocation": "7808:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2823,
												"src": "7800:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7800:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2817,
												"mutability": "mutable",
												"name": "totalStaked",
												"nameLocation": "7841:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2823,
												"src": "7833:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7833:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2819,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "7874:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2823,
												"src": "7866:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7866:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2821,
												"mutability": "mutable",
												"name": "active",
												"nameLocation": "7903:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2823,
												"src": "7898:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2820,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7898:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7752:167:12"
									},
									"scope": 2824,
									"src": "7683:237:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2825,
							"src": "5738:2184:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:7890:12"
				},
				"id": 12
			}
		}
	}
}