{
	"compiler": {
		"version": "0.8.23+commit.f704f362"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ReentrancyGuardReentrantCall",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "protocol",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newAddress",
						"type": "address"
					}
				],
				"name": "ProtocolAddressUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "totalValue",
						"type": "uint256"
					}
				],
				"name": "Rebalanced",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Withdrawn",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "riskScore",
						"type": "uint8"
					}
				],
				"name": "YieldOptimized",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "benqiAPY",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "traderJoeAPY",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "yieldYakAPY",
						"type": "uint256"
					}
				],
				"name": "YieldsUpdated",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "BASIS_POINTS",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MIN_DEPOSIT",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "REBALANCE_THRESHOLD",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "benqiComptroller",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "currentYields",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "benqiAPY",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "traderJoeAPY",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "yieldYakAPY",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lastUpdated",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "emergencyWithdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getCurrentYields",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "benqiAPY",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "traderJoeAPY",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "yieldYakAPY",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lastUpdated",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "getRebalanceRecommendation",
				"outputs": [
					{
						"internalType": "bool",
						"name": "shouldRebalance",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "newBenqiAllocation",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "newTraderJoeAllocation",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "newYieldYakAllocation",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "getUserPortfolio",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint8",
								"name": "riskScore",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "totalDeposited",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "lastRebalance",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "autoRebalance",
								"type": "bool"
							}
						],
						"internalType": "struct YieldOptimizer.UserProfile",
						"name": "profile",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "benqiAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "traderJoeAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "yieldYakAmount",
								"type": "uint256"
							}
						],
						"internalType": "struct YieldOptimizer.ProtocolAllocation",
						"name": "allocation",
						"type": "tuple"
					},
					{
						"internalType": "uint256",
						"name": "estimatedValue",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "_riskScore",
						"type": "uint8"
					}
				],
				"name": "optimizeYield",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "rebalance",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "traderJoeRouter",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "protocol",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "newAddress",
						"type": "address"
					}
				],
				"name": "updateProtocolAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_benqiAPY",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_traderJoeAPY",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_yieldYakAPY",
						"type": "uint256"
					}
				],
				"name": "updateYields",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "userAllocations",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "benqiAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "traderJoeAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "yieldYakAmount",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "userProfiles",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "riskScore",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "totalDeposited",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lastRebalance",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "autoRebalance",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "yieldYakFarm",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				],
				"ReentrancyGuardReentrantCall()": [
					{
						"details": "Unauthorized reentrant call."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"emergencyWithdraw()": {
					"details": "Emergency withdrawal function"
				},
				"getCurrentYields()": {
					"details": "Get current yields from all protocols"
				},
				"getRebalanceRecommendation(address)": {
					"details": "Calculate recommended rebalancing for a user"
				},
				"getUserPortfolio(address)": {
					"details": "Get user's complete portfolio information"
				},
				"optimizeYield(uint8)": {
					"details": "Main function to optimize yield based on user's risk profile",
					"params": {
						"_riskScore": "Risk score from 0 (conservative) to 100 (aggressive)"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"rebalance()": {
					"details": "Execute rebalancing for a user"
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/src/YieldOptimizer.sol": "YieldOptimizer"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC1363.sol": {
			"keccak256": "0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d",
			"license": "MIT",
			"urls": [
				"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100",
				"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC165.sol": {
			"keccak256": "0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc",
			"license": "MIT",
			"urls": [
				"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037",
				"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC20.sol": {
			"keccak256": "0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44",
			"license": "MIT",
			"urls": [
				"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d",
				"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2",
			"license": "MIT",
			"urls": [
				"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303",
				"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV"
			]
		},
		"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
			"keccak256": "0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5",
			"license": "MIT",
			"urls": [
				"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508",
				"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
			"keccak256": "0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3",
			"license": "MIT",
			"urls": [
				"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a",
				"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c",
			"license": "MIT",
			"urls": [
				"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617",
				"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u"
			]
		},
		"contracts/src/YieldOptimizer.sol": {
			"keccak256": "0xa12d0513453d2a4905ed9b13655367731746dda267cc062dbdc732d1cc0cd46f",
			"license": "MIT",
			"urls": [
				"bzz-raw://0c832138c7714e7fd216a108839dc6f7d0487bead690064a31d73829e8e1ac2f",
				"dweb:/ipfs/Qmbff9VSjsCMMHN4vwzBtt5NsiBKL65zQjWvutAC8uHHM1"
			]
		},
		"contracts/src/interfaces/IBenqi.sol": {
			"keccak256": "0xf377cd7bb36eb34c119236126d548b93b94af0752f82b2fff6b7857f883f5f07",
			"license": "MIT",
			"urls": [
				"bzz-raw://c2b3b6eb4f49f2252ce3af5ba2a26728e823259a6a430fe0cba9f4217170a3bc",
				"dweb:/ipfs/QmUnX5RRDkm4nVh4ZLue7Pr27jYaXYKScCpbtLa5S4Ghkp"
			]
		},
		"contracts/src/interfaces/ITraderJoe.sol": {
			"keccak256": "0x3aff5087ea19bec74716ed4139652dec0afadccf4cec52351cd0753a317dfe9e",
			"license": "MIT",
			"urls": [
				"bzz-raw://a5689482faad39e778d59a30d6c743e1ddae41843c34000c5b9e512f1fe40959",
				"dweb:/ipfs/QmTyga1VuCFsPQCDfCXsXr9aK8AHsCYe9vBqjcmStYEQmV"
			]
		},
		"contracts/src/interfaces/IYieldYak.sol": {
			"keccak256": "0x5646ff2a537c28ea7bfd7c081f64a27b1e1d1c6804272f6864abcc5c6670945f",
			"license": "MIT",
			"urls": [
				"bzz-raw://7a526f8ec6e3b4ee6cd8651b9d90e523d3810622c32cbcb12532818d38c81f06",
				"dweb:/ipfs/QmXpKBu5JBdXxjeqpKUjaZsWrxjnQupwXhgbf4mmQ3vERS"
			]
		}
	},
	"version": 1
}